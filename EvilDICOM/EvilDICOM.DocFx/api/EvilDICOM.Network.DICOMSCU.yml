### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.DICOMSCU
  commentId: T:EvilDICOM.Network.DICOMSCU
  id: DICOMSCU
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.ConnectionTimeout
  - EvilDICOM.Network.DICOMSCU.GetCFinder(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.GetCMover(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.GetCStorer(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.GetResponse``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  - EvilDICOM.Network.DICOMSCU.GetResponses``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  - EvilDICOM.Network.DICOMSCU.IdleTimeout
  - EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity,System.Int32)
  - EvilDICOM.Network.DICOMSCU.SendGetImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.UInt16@)
  - EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMSCU.SendMessageForcePort(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  langs:
  - csharp
  - vb
  name: DICOMSCU
  nameWithType: DICOMSCU
  fullName: EvilDICOM.Network.DICOMSCU
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DICOMSCU
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: 'public class DICOMSCU : DICOMServiceClass'
    content.vb: >-
      Public Class DICOMSCU
          Inherits DICOMServiceClass
  inheritance:
  - System.Object
  - EvilDICOM.Network.DICOMServiceClass
  inheritedMembers:
  - EvilDICOM.Network.DICOMServiceClass.AssociationService
  - EvilDICOM.Network.DICOMServiceClass.DIMSEService
  - EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  - EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.Logger
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.DICOMSCU.IdleTimeout
  commentId: P:EvilDICOM.Network.DICOMSCU.IdleTimeout
  id: IdleTimeout
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: IdleTimeout
  nameWithType: DICOMSCU.IdleTimeout
  fullName: EvilDICOM.Network.DICOMSCU.IdleTimeout
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: IdleTimeout
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 27
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public int IdleTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IdleTimeout As Integer
  overload: EvilDICOM.Network.DICOMSCU.IdleTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.ConnectionTimeout
  commentId: P:EvilDICOM.Network.DICOMSCU.ConnectionTimeout
  id: ConnectionTimeout
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: ConnectionTimeout
  nameWithType: DICOMSCU.ConnectionTimeout
  fullName: EvilDICOM.Network.DICOMSCU.ConnectionTimeout
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ConnectionTimeout
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 28
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public int ConnectionTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectionTimeout As Integer
  overload: EvilDICOM.Network.DICOMSCU.ConnectionTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.#ctor(EvilDICOM.Network.Entity)
  id: '#ctor(EvilDICOM.Network.Entity)'
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: DICOMSCU(Entity)
  nameWithType: DICOMSCU.DICOMSCU(Entity)
  fullName: EvilDICOM.Network.DICOMSCU.DICOMSCU(EvilDICOM.Network.Entity)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 30
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMSCU(Entity ae)
    parameters:
    - id: ae
      type: EvilDICOM.Network.Entity
    content.vb: Public Sub New(ae As Entity)
  overload: EvilDICOM.Network.DICOMSCU.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  id: SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: SendMessage(AbstractDIMSERequest, Entity)
  nameWithType: DICOMSCU.SendMessage(AbstractDIMSERequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.SendMessage(EvilDICOM.Network.DIMSE.AbstractDIMSERequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SendMessage
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 45
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nSends a message to an entity\n"
  example: []
  syntax:
    content: public SendStatus SendMessage(AbstractDIMSERequest dimse, Entity ae)
    parameters:
    - id: dimse
      type: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
      description: the message to send
    - id: ae
      type: EvilDICOM.Network.Entity
      description: the entity to send the message
    return:
      type: EvilDICOM.Network.Messaging.SendStatus
      description: true if message send was success
    content.vb: Public Function SendMessage(dimse As AbstractDIMSERequest, ae As Entity) As SendStatus
  overload: EvilDICOM.Network.DICOMSCU.SendMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.SendMessageForcePort(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.SendMessageForcePort(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  id: SendMessageForcePort(EvilDICOM.Network.DIMSE.AbstractDIMSERequest,EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: SendMessageForcePort(AbstractDIMSERequest, Entity)
  nameWithType: DICOMSCU.SendMessageForcePort(AbstractDIMSERequest, Entity)
  fullName: EvilDICOM.Network.DICOMSCU.SendMessageForcePort(EvilDICOM.Network.DIMSE.AbstractDIMSERequest, EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SendMessageForcePort
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 93
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nSends a message to an entity and guarantees the message will be sent on a \nspecific port (set by the entity settings)\n"
  example: []
  syntax:
    content: public bool SendMessageForcePort(AbstractDIMSERequest dimse, Entity ae)
    parameters:
    - id: dimse
      type: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
      description: the message to send
    - id: ae
      type: EvilDICOM.Network.Entity
      description: the entity to send the message
    return:
      type: System.Boolean
      description: true if message send was success
    content.vb: Public Function SendMessageForcePort(dimse As AbstractDIMSERequest, ae As Entity) As Boolean
  overload: EvilDICOM.Network.DICOMSCU.SendMessageForcePort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.GetCFinder(EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.GetCFinder(EvilDICOM.Network.Entity)
  id: GetCFinder(EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetCFinder(Entity)
  nameWithType: DICOMSCU.GetCFinder(Entity)
  fullName: EvilDICOM.Network.DICOMSCU.GetCFinder(EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetCFinder
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 123
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public CFinder GetCFinder(Entity callingEntity)
    parameters:
    - id: callingEntity
      type: EvilDICOM.Network.Entity
    return:
      type: EvilDICOM.Network.SCUOps.CFinder
    content.vb: Public Function GetCFinder(callingEntity As Entity) As CFinder
  overload: EvilDICOM.Network.DICOMSCU.GetCFinder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.GetCMover(EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.GetCMover(EvilDICOM.Network.Entity)
  id: GetCMover(EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetCMover(Entity)
  nameWithType: DICOMSCU.GetCMover(Entity)
  fullName: EvilDICOM.Network.DICOMSCU.GetCMover(EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetCMover
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 128
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public CMover GetCMover(Entity callingEntity)
    parameters:
    - id: callingEntity
      type: EvilDICOM.Network.Entity
    return:
      type: EvilDICOM.Network.SCUOps.CMover
    content.vb: Public Function GetCMover(callingEntity As Entity) As CMover
  overload: EvilDICOM.Network.DICOMSCU.GetCMover*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.GetCStorer(EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMSCU.GetCStorer(EvilDICOM.Network.Entity)
  id: GetCStorer(EvilDICOM.Network.Entity)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetCStorer(Entity)
  nameWithType: DICOMSCU.GetCStorer(Entity)
  fullName: EvilDICOM.Network.DICOMSCU.GetCStorer(EvilDICOM.Network.Entity)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetCStorer
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 133
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public CStorer GetCStorer(Entity callingEnity)
    parameters:
    - id: callingEnity
      type: EvilDICOM.Network.Entity
    return:
      type: EvilDICOM.Network.SCUOps.CStorer
    content.vb: Public Function GetCStorer(callingEnity As Entity) As CStorer
  overload: EvilDICOM.Network.DICOMSCU.GetCStorer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.GetResponse``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  commentId: M:EvilDICOM.Network.DICOMSCU.GetResponse``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  id: GetResponse``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetResponse<T, U>(U, Entity, ref UInt16)
  nameWithType: DICOMSCU.GetResponse<T, U>(U, Entity, ref UInt16)
  fullName: EvilDICOM.Network.DICOMSCU.GetResponse<T, U>(U, EvilDICOM.Network.Entity, ref System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetResponse
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 138
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: >-
      public T GetResponse<T, U>(U request, Entity e, ref ushort msgId)
          where T : AbstractDIMSEResponse where U : AbstractDIMSERequest
    parameters:
    - id: request
      type: '{U}'
    - id: e
      type: EvilDICOM.Network.Entity
    - id: msgId
      type: System.UInt16
    typeParameters:
    - id: T
    - id: U
    return:
      type: '{T}'
    content.vb: Public Function GetResponse(Of T As AbstractDIMSEResponse, U As AbstractDIMSERequest)(request As U, e As Entity, ByRef msgId As UShort) As T
  overload: EvilDICOM.Network.DICOMSCU.GetResponse*
  nameWithType.vb: DICOMSCU.GetResponse(Of T, U)(U, Entity, ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.DICOMSCU.GetResponse(Of T, U)(U, EvilDICOM.Network.Entity, ByRef System.UInt16)
  name.vb: GetResponse(Of T, U)(U, Entity, ByRef UInt16)
- uid: EvilDICOM.Network.DICOMSCU.GetResponses``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  commentId: M:EvilDICOM.Network.DICOMSCU.GetResponses``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  id: GetResponses``2(``1,EvilDICOM.Network.Entity,System.UInt16@)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: GetResponses<T, U>(U, Entity, ref UInt16)
  nameWithType: DICOMSCU.GetResponses<T, U>(U, Entity, ref UInt16)
  fullName: EvilDICOM.Network.DICOMSCU.GetResponses<T, U>(U, EvilDICOM.Network.Entity, ref System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetResponses
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 143
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: >-
      public IEnumerable<T> GetResponses<T, U>(U request, Entity e, ref ushort msgId)
          where T : AbstractDIMSEResponse where U : AbstractDIMSERequest
    parameters:
    - id: request
      type: '{U}'
    - id: e
      type: EvilDICOM.Network.Entity
    - id: msgId
      type: System.UInt16
    typeParameters:
    - id: T
    - id: U
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function GetResponses(Of T As AbstractDIMSEResponse, U As AbstractDIMSERequest)(request As U, e As Entity, ByRef msgId As UShort) As IEnumerable(Of T)
  overload: EvilDICOM.Network.DICOMSCU.GetResponses*
  nameWithType.vb: DICOMSCU.GetResponses(Of T, U)(U, Entity, ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.DICOMSCU.GetResponses(Of T, U)(U, EvilDICOM.Network.Entity, ByRef System.UInt16)
  name.vb: GetResponses(Of T, U)(U, Entity, ByRef UInt16)
- uid: EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity,System.Int32)
  commentId: M:EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity,System.Int32)
  id: Ping(EvilDICOM.Network.Entity,System.Int32)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: Ping(Entity, Int32)
  nameWithType: DICOMSCU.Ping(Entity, Int32)
  fullName: EvilDICOM.Network.DICOMSCU.Ping(EvilDICOM.Network.Entity, System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Ping
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 187
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nSends a CEcho request to the input entity\n"
  example: []
  syntax:
    content: public bool Ping(Entity ae, int msTimeout = 0)
    parameters:
    - id: ae
      type: EvilDICOM.Network.Entity
      description: the entity to send the request
    - id: msTimeout
      type: System.Int32
      description: how long to wait in milliseconds before a timeout
    return:
      type: System.Boolean
      description: true if success, false if failure
    content.vb: Public Function Ping(ae As Entity, msTimeout As Integer = 0) As Boolean
  overload: EvilDICOM.Network.DICOMSCU.Ping*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMSCU.SendGetImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.UInt16@)
  commentId: M:EvilDICOM.Network.DICOMSCU.SendGetImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.UInt16@)
  id: SendGetImage(EvilDICOM.Network.Entity,EvilDICOM.Network.DIMSE.IOD.CFindImageIOD,System.UInt16@)
  parent: EvilDICOM.Network.DICOMSCU
  langs:
  - csharp
  - vb
  name: SendGetImage(Entity, CFindImageIOD, ref UInt16)
  nameWithType: DICOMSCU.SendGetImage(Entity, CFindImageIOD, ref UInt16)
  fullName: EvilDICOM.Network.DICOMSCU.SendGetImage(EvilDICOM.Network.Entity, EvilDICOM.Network.DIMSE.IOD.CFindImageIOD, ref System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMSCU.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SendGetImage
    path: ../EvilDICOM/Network/DICOMSCU.cs
    startLine: 212
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nEmits a CMove operation to an entity which moves an image from the entity to the specified AETitle\n"
  example: []
  syntax:
    content: public CGetResponse SendGetImage(Entity daemon, CFindImageIOD iod, ref ushort msgId)
    parameters:
    - id: daemon
      type: EvilDICOM.Network.Entity
    - id: iod
      type: EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
    - id: msgId
      type: System.UInt16
      description: the message id
    return:
      type: EvilDICOM.Network.DIMSE.CGetResponse
      description: the move response
    content.vb: Public Function SendGetImage(daemon As Entity, iod As CFindImageIOD, ByRef msgId As UShort) As CGetResponse
  overload: EvilDICOM.Network.DICOMSCU.SendGetImage*
  nameWithType.vb: DICOMSCU.SendGetImage(Entity, CFindImageIOD, ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.DICOMSCU.SendGetImage(EvilDICOM.Network.Entity, EvilDICOM.Network.DIMSE.IOD.CFindImageIOD, ByRef System.UInt16)
  name.vb: SendGetImage(Entity, CFindImageIOD, ByRef UInt16)
references:
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Network.DICOMServiceClass
  commentId: T:EvilDICOM.Network.DICOMServiceClass
  parent: EvilDICOM.Network
  name: DICOMServiceClass
  nameWithType: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
- uid: EvilDICOM.Network.DICOMServiceClass.AssociationService
  commentId: P:EvilDICOM.Network.DICOMServiceClass.AssociationService
  parent: EvilDICOM.Network.DICOMServiceClass
  name: AssociationService
  nameWithType: DICOMServiceClass.AssociationService
  fullName: EvilDICOM.Network.DICOMServiceClass.AssociationService
- uid: EvilDICOM.Network.DICOMServiceClass.DIMSEService
  commentId: P:EvilDICOM.Network.DICOMServiceClass.DIMSEService
  parent: EvilDICOM.Network.DICOMServiceClass
  name: DIMSEService
  nameWithType: DICOMServiceClass.DIMSEService
  fullName: EvilDICOM.Network.DICOMServiceClass.DIMSEService
- uid: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  commentId: P:EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  parent: EvilDICOM.Network.DICOMServiceClass
  name: ApplicationEntity
  nameWithType: DICOMServiceClass.ApplicationEntity
  fullName: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  commentId: P:EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  name: SupportedTransferSyntaxes
  nameWithType: DICOMServiceClass.SupportedTransferSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  commentId: P:EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  name: SupportedAbstractSyntaxes
  nameWithType: DICOMServiceClass.SupportedAbstractSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
- uid: EvilDICOM.Network.DICOMServiceClass.Logger
  commentId: P:EvilDICOM.Network.DICOMServiceClass.Logger
  parent: EvilDICOM.Network.DICOMServiceClass
  name: Logger
  nameWithType: DICOMServiceClass.Logger
  fullName: EvilDICOM.Network.DICOMServiceClass.Logger
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.DICOMSCU.IdleTimeout*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.IdleTimeout
  name: IdleTimeout
  nameWithType: DICOMSCU.IdleTimeout
  fullName: EvilDICOM.Network.DICOMSCU.IdleTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EvilDICOM.Network.DICOMSCU.ConnectionTimeout*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.ConnectionTimeout
  name: ConnectionTimeout
  nameWithType: DICOMSCU.ConnectionTimeout
  fullName: EvilDICOM.Network.DICOMSCU.ConnectionTimeout
- uid: EvilDICOM.Network.DICOMSCU.#ctor*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.#ctor
  name: DICOMSCU
  nameWithType: DICOMSCU.DICOMSCU
  fullName: EvilDICOM.Network.DICOMSCU.DICOMSCU
- uid: EvilDICOM.Network.Entity
  commentId: T:EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  name: Entity
  nameWithType: Entity
  fullName: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DICOMSCU.SendMessage*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.SendMessage
  name: SendMessage
  nameWithType: DICOMSCU.SendMessage
  fullName: EvilDICOM.Network.DICOMSCU.SendMessage
- uid: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
  commentId: T:EvilDICOM.Network.DIMSE.AbstractDIMSERequest
  parent: EvilDICOM.Network.DIMSE
  name: AbstractDIMSERequest
  nameWithType: AbstractDIMSERequest
  fullName: EvilDICOM.Network.DIMSE.AbstractDIMSERequest
- uid: EvilDICOM.Network.Messaging.SendStatus
  commentId: T:EvilDICOM.Network.Messaging.SendStatus
  parent: EvilDICOM.Network.Messaging
  name: SendStatus
  nameWithType: SendStatus
  fullName: EvilDICOM.Network.Messaging.SendStatus
- uid: EvilDICOM.Network.DIMSE
  commentId: N:EvilDICOM.Network.DIMSE
  name: EvilDICOM.Network.DIMSE
  nameWithType: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
- uid: EvilDICOM.Network.Messaging
  commentId: N:EvilDICOM.Network.Messaging
  name: EvilDICOM.Network.Messaging
  nameWithType: EvilDICOM.Network.Messaging
  fullName: EvilDICOM.Network.Messaging
- uid: EvilDICOM.Network.DICOMSCU.SendMessageForcePort*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.SendMessageForcePort
  name: SendMessageForcePort
  nameWithType: DICOMSCU.SendMessageForcePort
  fullName: EvilDICOM.Network.DICOMSCU.SendMessageForcePort
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Network.DICOMSCU.GetCFinder*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.GetCFinder
  name: GetCFinder
  nameWithType: DICOMSCU.GetCFinder
  fullName: EvilDICOM.Network.DICOMSCU.GetCFinder
- uid: EvilDICOM.Network.SCUOps.CFinder
  commentId: T:EvilDICOM.Network.SCUOps.CFinder
  parent: EvilDICOM.Network.SCUOps
  name: CFinder
  nameWithType: CFinder
  fullName: EvilDICOM.Network.SCUOps.CFinder
- uid: EvilDICOM.Network.SCUOps
  commentId: N:EvilDICOM.Network.SCUOps
  name: EvilDICOM.Network.SCUOps
  nameWithType: EvilDICOM.Network.SCUOps
  fullName: EvilDICOM.Network.SCUOps
- uid: EvilDICOM.Network.DICOMSCU.GetCMover*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.GetCMover
  name: GetCMover
  nameWithType: DICOMSCU.GetCMover
  fullName: EvilDICOM.Network.DICOMSCU.GetCMover
- uid: EvilDICOM.Network.SCUOps.CMover
  commentId: T:EvilDICOM.Network.SCUOps.CMover
  parent: EvilDICOM.Network.SCUOps
  name: CMover
  nameWithType: CMover
  fullName: EvilDICOM.Network.SCUOps.CMover
- uid: EvilDICOM.Network.DICOMSCU.GetCStorer*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.GetCStorer
  name: GetCStorer
  nameWithType: DICOMSCU.GetCStorer
  fullName: EvilDICOM.Network.DICOMSCU.GetCStorer
- uid: EvilDICOM.Network.SCUOps.CStorer
  commentId: T:EvilDICOM.Network.SCUOps.CStorer
  parent: EvilDICOM.Network.SCUOps
  name: CStorer
  nameWithType: CStorer
  fullName: EvilDICOM.Network.SCUOps.CStorer
- uid: EvilDICOM.Network.DICOMSCU.GetResponse*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.GetResponse
  name: GetResponse
  nameWithType: DICOMSCU.GetResponse
  fullName: EvilDICOM.Network.DICOMSCU.GetResponse
- uid: '{U}'
  commentId: '!:U'
  definition: U
  name: U
  nameWithType: U
  fullName: U
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: U
  name: U
  nameWithType: U
  fullName: U
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: EvilDICOM.Network.DICOMSCU.GetResponses*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.GetResponses
  name: GetResponses
  nameWithType: DICOMSCU.GetResponses
  fullName: EvilDICOM.Network.DICOMSCU.GetResponses
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Network.DICOMSCU.Ping*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.Ping
  name: Ping
  nameWithType: DICOMSCU.Ping
  fullName: EvilDICOM.Network.DICOMSCU.Ping
- uid: EvilDICOM.Network.DICOMSCU.SendGetImage*
  commentId: Overload:EvilDICOM.Network.DICOMSCU.SendGetImage
  name: SendGetImage
  nameWithType: DICOMSCU.SendGetImage
  fullName: EvilDICOM.Network.DICOMSCU.SendGetImage
- uid: EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
  commentId: T:EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
  parent: EvilDICOM.Network.DIMSE.IOD
  name: CFindImageIOD
  nameWithType: CFindImageIOD
  fullName: EvilDICOM.Network.DIMSE.IOD.CFindImageIOD
- uid: EvilDICOM.Network.DIMSE.CGetResponse
  commentId: T:EvilDICOM.Network.DIMSE.CGetResponse
  parent: EvilDICOM.Network.DIMSE
  name: CGetResponse
  nameWithType: CGetResponse
  fullName: EvilDICOM.Network.DIMSE.CGetResponse
- uid: EvilDICOM.Network.DIMSE.IOD
  commentId: N:EvilDICOM.Network.DIMSE.IOD
  name: EvilDICOM.Network.DIMSE.IOD
  nameWithType: EvilDICOM.Network.DIMSE.IOD
  fullName: EvilDICOM.Network.DIMSE.IOD
