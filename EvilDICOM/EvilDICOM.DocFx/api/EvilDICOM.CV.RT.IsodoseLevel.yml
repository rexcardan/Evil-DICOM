### YamlMime:ManagedReference
items:
- uid: EvilDICOM.CV.RT.IsodoseLevel
  commentId: T:EvilDICOM.CV.RT.IsodoseLevel
  id: IsodoseLevel
  parent: EvilDICOM.CV.RT
  children:
  - EvilDICOM.CV.RT.IsodoseLevel.Color
  - EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels
  - EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels(System.Double)
  - EvilDICOM.CV.RT.IsodoseLevel.Value
  langs:
  - csharp
  - vb
  name: IsodoseLevel
  nameWithType: IsodoseLevel
  fullName: EvilDICOM.CV.RT.IsodoseLevel
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/IsodoseLevel.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: IsodoseLevel
    path: ../EvilDICOM.CV/RT/IsodoseLevel.cs
    startLine: 9
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public class IsodoseLevel
    content.vb: Public Class IsodoseLevel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.CV.RT.IsodoseLevel.Value
  commentId: P:EvilDICOM.CV.RT.IsodoseLevel.Value
  id: Value
  parent: EvilDICOM.CV.RT.IsodoseLevel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: IsodoseLevel.Value
  fullName: EvilDICOM.CV.RT.IsodoseLevel.Value
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/IsodoseLevel.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Value
    path: ../EvilDICOM.CV/RT/IsodoseLevel.cs
    startLine: 11
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public double Value { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Value As Double
  overload: EvilDICOM.CV.RT.IsodoseLevel.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.IsodoseLevel.Color
  commentId: P:EvilDICOM.CV.RT.IsodoseLevel.Color
  id: Color
  parent: EvilDICOM.CV.RT.IsodoseLevel
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: IsodoseLevel.Color
  fullName: EvilDICOM.CV.RT.IsodoseLevel.Color
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/IsodoseLevel.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Color
    path: ../EvilDICOM.CV/RT/IsodoseLevel.cs
    startLine: 12
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public Scalar Color { get; set; }
    parameters: []
    return:
      type: OpenCvSharp.Scalar
    content.vb: Public Property Color As Scalar
  overload: EvilDICOM.CV.RT.IsodoseLevel.Color*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels
  commentId: M:EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels
  id: DefaultLevels
  parent: EvilDICOM.CV.RT.IsodoseLevel
  langs:
  - csharp
  - vb
  name: DefaultLevels()
  nameWithType: IsodoseLevel.DefaultLevels()
  fullName: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/IsodoseLevel.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DefaultLevels
    path: ../EvilDICOM.CV/RT/IsodoseLevel.cs
    startLine: 13
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public static List<IsodoseLevel> DefaultLevels()
    return:
      type: System.Collections.Generic.List{EvilDICOM.CV.RT.IsodoseLevel}
    content.vb: Public Shared Function DefaultLevels As List(Of IsodoseLevel)
  overload: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels(System.Double)
  commentId: M:EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels(System.Double)
  id: DefaultLevels(System.Double)
  parent: EvilDICOM.CV.RT.IsodoseLevel
  langs:
  - csharp
  - vb
  name: DefaultLevels(Double)
  nameWithType: IsodoseLevel.DefaultLevels(Double)
  fullName: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels(System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/IsodoseLevel.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DefaultLevels
    path: ../EvilDICOM.CV/RT/IsodoseLevel.cs
    startLine: 27
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public static List<IsodoseLevel> DefaultLevels(double rxDose)
    parameters:
    - id: rxDose
      type: System.Double
    return:
      type: System.Collections.Generic.List{EvilDICOM.CV.RT.IsodoseLevel}
    content.vb: Public Shared Function DefaultLevels(rxDose As Double) As List(Of IsodoseLevel)
  overload: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.CV.RT
  commentId: N:EvilDICOM.CV.RT
  name: EvilDICOM.CV.RT
  nameWithType: EvilDICOM.CV.RT
  fullName: EvilDICOM.CV.RT
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.CV.RT.IsodoseLevel.Value*
  commentId: Overload:EvilDICOM.CV.RT.IsodoseLevel.Value
  name: Value
  nameWithType: IsodoseLevel.Value
  fullName: EvilDICOM.CV.RT.IsodoseLevel.Value
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: EvilDICOM.CV.RT.IsodoseLevel.Color*
  commentId: Overload:EvilDICOM.CV.RT.IsodoseLevel.Color
  name: Color
  nameWithType: IsodoseLevel.Color
  fullName: EvilDICOM.CV.RT.IsodoseLevel.Color
- uid: OpenCvSharp.Scalar
  commentId: T:OpenCvSharp.Scalar
  parent: OpenCvSharp
  isExternal: true
  name: Scalar
  nameWithType: Scalar
  fullName: OpenCvSharp.Scalar
- uid: OpenCvSharp
  commentId: N:OpenCvSharp
  isExternal: true
  name: OpenCvSharp
  nameWithType: OpenCvSharp
  fullName: OpenCvSharp
- uid: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels*
  commentId: Overload:EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels
  name: DefaultLevels
  nameWithType: IsodoseLevel.DefaultLevels
  fullName: EvilDICOM.CV.RT.IsodoseLevel.DefaultLevels
- uid: System.Collections.Generic.List{EvilDICOM.CV.RT.IsodoseLevel}
  commentId: T:System.Collections.Generic.List{EvilDICOM.CV.RT.IsodoseLevel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IsodoseLevel>
  nameWithType: List<IsodoseLevel>
  fullName: System.Collections.Generic.List<EvilDICOM.CV.RT.IsodoseLevel>
  nameWithType.vb: List(Of IsodoseLevel)
  fullName.vb: System.Collections.Generic.List(Of EvilDICOM.CV.RT.IsodoseLevel)
  name.vb: List(Of IsodoseLevel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.CV.RT.IsodoseLevel
    name: IsodoseLevel
    nameWithType: IsodoseLevel
    fullName: EvilDICOM.CV.RT.IsodoseLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.CV.RT.IsodoseLevel
    name: IsodoseLevel
    nameWithType: IsodoseLevel
    fullName: EvilDICOM.CV.RT.IsodoseLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
