### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.PDUs.Items.ItemReader
  commentId: T:EvilDICOM.Network.PDUs.Items.ItemReader
  id: ItemReader
  parent: EvilDICOM.Network.PDUs.Items
  children:
  - EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.String,EvilDICOM.Network.Enums.ItemType)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.Int32)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  - EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  langs:
  - csharp
  - vb
  name: ItemReader
  nameWithType: ItemReader
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ItemReader
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public class ItemReader
    content.vb: Public Class ItemReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.String,EvilDICOM.Network.Enums.ItemType)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.String,EvilDICOM.Network.Enums.ItemType)
  id: AssertItemType(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.String,EvilDICOM.Network.Enums.ItemType)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: AssertItemType(DICOMBinaryReader, String, ItemType)
  nameWithType: ItemReader.AssertItemType(DICOMBinaryReader, String, ItemType)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, System.String, EvilDICOM.Network.Enums.ItemType)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: AssertItemType
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static void AssertItemType(DICOMBinaryReader dr, string itemName, ItemType itemType)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: itemName
      type: System.String
    - id: itemType
      type: EvilDICOM.Network.Enums.ItemType
    content.vb: Public Shared Sub AssertItemType(dr As DICOMBinaryReader, itemName As String, itemType As ItemType)
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadAbstractSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadAbstractSyntax(DICOMBinaryReader)
  nameWithType: ItemReader.ReadAbstractSyntax(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadAbstractSyntax
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static string ReadAbstractSyntax(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: System.String
    content.vb: Public Shared Function ReadAbstractSyntax(dr As DICOMBinaryReader) As String
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadApplicationContext(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadApplicationContext(DICOMBinaryReader)
  nameWithType: ItemReader.ReadApplicationContext(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadApplicationContext
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 34
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static string ReadApplicationContext(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: System.String
    content.vb: Public Shared Function ReadApplicationContext(dr As DICOMBinaryReader) As String
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadAsyncOperations(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadAsyncOperations(DICOMBinaryReader)
  nameWithType: ItemReader.ReadAsyncOperations(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadAsyncOperations
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 39
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static AsyncOperations ReadAsyncOperations(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: EvilDICOM.Network.PDUs.Items.AsyncOperations
    content.vb: Public Shared Function ReadAsyncOperations(dr As DICOMBinaryReader) As AsyncOperations
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadImplementationClassUID(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadImplementationClassUID(DICOMBinaryReader)
  nameWithType: ItemReader.ReadImplementationClassUID(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadImplementationClassUID
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 50
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static string ReadImplementationClassUID(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: System.String
    content.vb: Public Shared Function ReadImplementationClassUID(dr As DICOMBinaryReader) As String
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadImplementationVersion(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadImplementationVersion(DICOMBinaryReader)
  nameWithType: ItemReader.ReadImplementationVersion(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadImplementationVersion
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 55
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static string ReadImplementationVersion(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: System.String
    content.vb: Public Shared Function ReadImplementationVersion(dr As DICOMBinaryReader) As String
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadMaxLength(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadMaxLength(DICOMBinaryReader)
  nameWithType: ItemReader.ReadMaxLength(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadMaxLength
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 65
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static int? ReadMaxLength(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Function ReadMaxLength(dr As DICOMBinaryReader) As Integer?
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadPDVItem(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadPDVItem(DICOMBinaryReader)
  nameWithType: ItemReader.ReadPDVItem(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadPDVItem
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 73
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static PDVItem ReadPDVItem(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: EvilDICOM.Network.PDUs.Items.PDVItem
    content.vb: Public Shared Function ReadPDVItem(dr As DICOMBinaryReader) As PDVItem
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.Int32)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.Int32)
  id: ReadPDVFragment(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.Int32)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadPDVFragment(DICOMBinaryReader, Int32)
  nameWithType: ItemReader.ReadPDVFragment(DICOMBinaryReader, Int32)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment(EvilDICOM.Core.IO.Reading.DICOMBinaryReader, System.Int32)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadPDVFragment
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 82
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static PDVItemFragment ReadPDVFragment(DICOMBinaryReader dr, int length)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    - id: length
      type: System.Int32
    return:
      type: EvilDICOM.Network.PDUs.Items.PDVItemFragment
    content.vb: Public Shared Function ReadPDVFragment(dr As DICOMBinaryReader, length As Integer) As PDVItemFragment
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadPresentationCtxRequest(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadPresentationCtxRequest(DICOMBinaryReader)
  nameWithType: ItemReader.ReadPresentationCtxRequest(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadPresentationCtxRequest
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 92
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static PresentationContext ReadPresentationCtxRequest(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: EvilDICOM.Network.PDUs.Items.PresentationContext
    content.vb: Public Shared Function ReadPresentationCtxRequest(dr As DICOMBinaryReader) As PresentationContext
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadPresentationCtxAccept(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadPresentationCtxAccept(DICOMBinaryReader)
  nameWithType: ItemReader.ReadPresentationCtxAccept(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadPresentationCtxAccept
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 100
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static PresentationContext ReadPresentationCtxAccept(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: EvilDICOM.Network.PDUs.Items.PresentationContext
    content.vb: Public Shared Function ReadPresentationCtxAccept(dr As DICOMBinaryReader) As PresentationContext
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadTransferSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadTransferSyntax(DICOMBinaryReader)
  nameWithType: ItemReader.ReadTransferSyntax(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadTransferSyntax
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 131
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static string ReadTransferSyntax(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: System.String
    content.vb: Public Shared Function ReadTransferSyntax(dr As DICOMBinaryReader) As String
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  commentId: M:EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  id: ReadUserInfo(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  parent: EvilDICOM.Network.PDUs.Items.ItemReader
  langs:
  - csharp
  - vb
  name: ReadUserInfo(DICOMBinaryReader)
  nameWithType: ItemReader.ReadUserInfo(DICOMBinaryReader)
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/Items/ItemReader.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReadUserInfo
    path: ../EvilDICOM/Network/PDUs/Items/ItemReader.cs
    startLine: 136
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs.Items
  syntax:
    content: public static UserInfo ReadUserInfo(DICOMBinaryReader dr)
    parameters:
    - id: dr
      type: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
    return:
      type: EvilDICOM.Network.PDUs.Items.UserInfo
    content.vb: Public Shared Function ReadUserInfo(dr As DICOMBinaryReader) As UserInfo
  overload: EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Network.PDUs.Items
  commentId: N:EvilDICOM.Network.PDUs.Items
  name: EvilDICOM.Network.PDUs.Items
  nameWithType: EvilDICOM.Network.PDUs.Items
  fullName: EvilDICOM.Network.PDUs.Items
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType
  name: AssertItemType
  nameWithType: ItemReader.AssertItemType
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.AssertItemType
- uid: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
  commentId: T:EvilDICOM.Core.IO.Reading.DICOMBinaryReader
  parent: EvilDICOM.Core.IO.Reading
  name: DICOMBinaryReader
  nameWithType: DICOMBinaryReader
  fullName: EvilDICOM.Core.IO.Reading.DICOMBinaryReader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Network.Enums.ItemType
  commentId: T:EvilDICOM.Network.Enums.ItemType
  parent: EvilDICOM.Network.Enums
  name: ItemType
  nameWithType: ItemType
  fullName: EvilDICOM.Network.Enums.ItemType
- uid: EvilDICOM.Core.IO.Reading
  commentId: N:EvilDICOM.Core.IO.Reading
  name: EvilDICOM.Core.IO.Reading
  nameWithType: EvilDICOM.Core.IO.Reading
  fullName: EvilDICOM.Core.IO.Reading
- uid: EvilDICOM.Network.Enums
  commentId: N:EvilDICOM.Network.Enums
  name: EvilDICOM.Network.Enums
  nameWithType: EvilDICOM.Network.Enums
  fullName: EvilDICOM.Network.Enums
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax
  name: ReadAbstractSyntax
  nameWithType: ItemReader.ReadAbstractSyntax
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAbstractSyntax
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext
  name: ReadApplicationContext
  nameWithType: ItemReader.ReadApplicationContext
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadApplicationContext
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations
  name: ReadAsyncOperations
  nameWithType: ItemReader.ReadAsyncOperations
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadAsyncOperations
- uid: EvilDICOM.Network.PDUs.Items.AsyncOperations
  commentId: T:EvilDICOM.Network.PDUs.Items.AsyncOperations
  parent: EvilDICOM.Network.PDUs.Items
  name: AsyncOperations
  nameWithType: AsyncOperations
  fullName: EvilDICOM.Network.PDUs.Items.AsyncOperations
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID
  name: ReadImplementationClassUID
  nameWithType: ItemReader.ReadImplementationClassUID
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationClassUID
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion
  name: ReadImplementationVersion
  nameWithType: ItemReader.ReadImplementationVersion
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadImplementationVersion
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength
  name: ReadMaxLength
  nameWithType: ItemReader.ReadMaxLength
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadMaxLength
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem
  name: ReadPDVItem
  nameWithType: ItemReader.ReadPDVItem
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVItem
- uid: EvilDICOM.Network.PDUs.Items.PDVItem
  commentId: T:EvilDICOM.Network.PDUs.Items.PDVItem
  parent: EvilDICOM.Network.PDUs.Items
  name: PDVItem
  nameWithType: PDVItem
  fullName: EvilDICOM.Network.PDUs.Items.PDVItem
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment
  name: ReadPDVFragment
  nameWithType: ItemReader.ReadPDVFragment
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPDVFragment
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EvilDICOM.Network.PDUs.Items.PDVItemFragment
  commentId: T:EvilDICOM.Network.PDUs.Items.PDVItemFragment
  parent: EvilDICOM.Network.PDUs.Items
  name: PDVItemFragment
  nameWithType: PDVItemFragment
  fullName: EvilDICOM.Network.PDUs.Items.PDVItemFragment
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest
  name: ReadPresentationCtxRequest
  nameWithType: ItemReader.ReadPresentationCtxRequest
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxRequest
- uid: EvilDICOM.Network.PDUs.Items.PresentationContext
  commentId: T:EvilDICOM.Network.PDUs.Items.PresentationContext
  parent: EvilDICOM.Network.PDUs.Items
  name: PresentationContext
  nameWithType: PresentationContext
  fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept
  name: ReadPresentationCtxAccept
  nameWithType: ItemReader.ReadPresentationCtxAccept
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadPresentationCtxAccept
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax
  name: ReadTransferSyntax
  nameWithType: ItemReader.ReadTransferSyntax
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadTransferSyntax
- uid: EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo*
  commentId: Overload:EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo
  name: ReadUserInfo
  nameWithType: ItemReader.ReadUserInfo
  fullName: EvilDICOM.Network.PDUs.Items.ItemReader.ReadUserInfo
- uid: EvilDICOM.Network.PDUs.Items.UserInfo
  commentId: T:EvilDICOM.Network.PDUs.Items.UserInfo
  parent: EvilDICOM.Network.PDUs.Items
  name: UserInfo
  nameWithType: UserInfo
  fullName: EvilDICOM.Network.PDUs.Items.UserInfo
