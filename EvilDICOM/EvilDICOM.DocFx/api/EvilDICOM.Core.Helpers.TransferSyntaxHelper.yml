### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  commentId: T:EvilDICOM.Core.Helpers.TransferSyntaxHelper
  id: TransferSyntaxHelper
  parent: EvilDICOM.Core.Helpers
  children:
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_BIG_ENDIAN
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_LITTLE_ENDIAN
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(EvilDICOM.Core.Interfaces.IDICOMElement)
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(System.String)
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.IMPLICIT_VR_LITTLE_ENDIAN
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage(System.String)
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000_LOSSLESS
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_BASELINE
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_EXTENDED
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14_S1
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_15
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_LOSSLESS
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_NEAR_LOSSLESS
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_PROGRESSIVE
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.RLE_LOSSLESS
  - EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Enums.TransferSyntax)
  langs:
  - csharp
  - vb
  name: TransferSyntaxHelper
  nameWithType: TransferSyntaxHelper
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: TransferSyntaxHelper
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 10
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  syntax:
    content: public static class TransferSyntaxHelper
    content.vb: Public Module TransferSyntaxHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.IMPLICIT_VR_LITTLE_ENDIAN
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.IMPLICIT_VR_LITTLE_ENDIAN
  id: IMPLICIT_VR_LITTLE_ENDIAN
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: IMPLICIT_VR_LITTLE_ENDIAN
  nameWithType: TransferSyntaxHelper.IMPLICIT_VR_LITTLE_ENDIAN
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.IMPLICIT_VR_LITTLE_ENDIAN
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: IMPLICIT_VR_LITTLE_ENDIAN
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents an implicit VR with little endian encoding\n"
  example: []
  syntax:
    content: public const string IMPLICIT_VR_LITTLE_ENDIAN = "1.2.840.10008.1.2"
    return:
      type: System.String
    content.vb: Public Const IMPLICIT_VR_LITTLE_ENDIAN As String = "1.2.840.10008.1.2"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_LITTLE_ENDIAN
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_LITTLE_ENDIAN
  id: EXPLICIT_VR_LITTLE_ENDIAN
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: EXPLICIT_VR_LITTLE_ENDIAN
  nameWithType: TransferSyntaxHelper.EXPLICIT_VR_LITTLE_ENDIAN
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_LITTLE_ENDIAN
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: EXPLICIT_VR_LITTLE_ENDIAN
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 21
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents an explicit VR with little endian encoding\n"
  example: []
  syntax:
    content: public const string EXPLICIT_VR_LITTLE_ENDIAN = "1.2.840.10008.1.2.1"
    return:
      type: System.String
    content.vb: Public Const EXPLICIT_VR_LITTLE_ENDIAN As String = "1.2.840.10008.1.2.1"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_BIG_ENDIAN
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_BIG_ENDIAN
  id: EXPLICIT_VR_BIG_ENDIAN
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: EXPLICIT_VR_BIG_ENDIAN
  nameWithType: TransferSyntaxHelper.EXPLICIT_VR_BIG_ENDIAN
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.EXPLICIT_VR_BIG_ENDIAN
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: EXPLICIT_VR_BIG_ENDIAN
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents an explicit VR with big endian encoding\n"
  example: []
  syntax:
    content: public const string EXPLICIT_VR_BIG_ENDIAN = "1.2.840.10008.1.2.2"
    return:
      type: System.String
    content.vb: Public Const EXPLICIT_VR_BIG_ENDIAN As String = "1.2.840.10008.1.2.2"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.RLE_LOSSLESS
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.RLE_LOSSLESS
  id: RLE_LOSSLESS
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: RLE_LOSSLESS
  nameWithType: TransferSyntaxHelper.RLE_LOSSLESS
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.RLE_LOSSLESS
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: RLE_LOSSLESS
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 31
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents RLE lossless image encoding\n"
  example: []
  syntax:
    content: public const string RLE_LOSSLESS = "1.2.840.10008.1.2.5"
    return:
      type: System.String
    content.vb: Public Const RLE_LOSSLESS As String = "1.2.840.10008.1.2.5"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_BASELINE
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_BASELINE
  id: JPEG_BASELINE
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_BASELINE
  nameWithType: TransferSyntaxHelper.JPEG_BASELINE
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_BASELINE
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_BASELINE
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 36
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG baseline image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_BASELINE = "1.2.840.10008.1.2.4.50"
    return:
      type: System.String
    content.vb: Public Const JPEG_BASELINE As String = "1.2.840.10008.1.2.4.50"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_EXTENDED
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_EXTENDED
  id: JPEG_EXTENDED
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_EXTENDED
  nameWithType: TransferSyntaxHelper.JPEG_EXTENDED
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_EXTENDED
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_EXTENDED
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 41
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG Extended image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_EXTENDED = "1.2.840.10008.1.2.4.51"
    return:
      type: System.String
    content.vb: Public Const JPEG_EXTENDED As String = "1.2.840.10008.1.2.4.51"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_PROGRESSIVE
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_PROGRESSIVE
  id: JPEG_PROGRESSIVE
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_PROGRESSIVE
  nameWithType: TransferSyntaxHelper.JPEG_PROGRESSIVE
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_PROGRESSIVE
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_PROGRESSIVE
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 46
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG Progressive image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_PROGRESSIVE = "1.2.840.10008.1.2.4.55"
    return:
      type: System.String
    content.vb: Public Const JPEG_PROGRESSIVE As String = "1.2.840.10008.1.2.4.55"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14
  id: JPEG_LOSSLESS_14
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_LOSSLESS_14
  nameWithType: TransferSyntaxHelper.JPEG_LOSSLESS_14
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_LOSSLESS_14
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 51
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG lossless (Process 14) image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_LOSSLESS_14 = "1.2.840.10008.1.2.4.57"
    return:
      type: System.String
    content.vb: Public Const JPEG_LOSSLESS_14 As String = "1.2.840.10008.1.2.4.57"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_15
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_15
  id: JPEG_LOSSLESS_15
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_LOSSLESS_15
  nameWithType: TransferSyntaxHelper.JPEG_LOSSLESS_15
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_15
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_LOSSLESS_15
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 56
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG lossless (Process 15) image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_LOSSLESS_15 = "1.2.840.10008.1.2.4.58"
    return:
      type: System.String
    content.vb: Public Const JPEG_LOSSLESS_15 As String = "1.2.840.10008.1.2.4.58"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14_S1
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14_S1
  id: JPEG_LOSSLESS_14_S1
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_LOSSLESS_14_S1
  nameWithType: TransferSyntaxHelper.JPEG_LOSSLESS_14_S1
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LOSSLESS_14_S1
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_LOSSLESS_14_S1
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 61
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG lossless (Process 14 Selection Value 1) image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_LOSSLESS_14_S1 = "1.2.840.10008.1.2.4.70"
    return:
      type: System.String
    content.vb: Public Const JPEG_LOSSLESS_14_S1 As String = "1.2.840.10008.1.2.4.70"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_LOSSLESS
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_LOSSLESS
  id: JPEG_LS_LOSSLESS
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_LS_LOSSLESS
  nameWithType: TransferSyntaxHelper.JPEG_LS_LOSSLESS
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_LOSSLESS
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_LS_LOSSLESS
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 66
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG-LS lossless image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_LS_LOSSLESS = "1.2.840.10008.1.2.4.80"
    return:
      type: System.String
    content.vb: Public Const JPEG_LS_LOSSLESS As String = "1.2.840.10008.1.2.4.80"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_NEAR_LOSSLESS
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_NEAR_LOSSLESS
  id: JPEG_LS_NEAR_LOSSLESS
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_LS_NEAR_LOSSLESS
  nameWithType: TransferSyntaxHelper.JPEG_LS_NEAR_LOSSLESS
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_LS_NEAR_LOSSLESS
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_LS_NEAR_LOSSLESS
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 71
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG-LS near lossless image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_LS_NEAR_LOSSLESS = "1.2.840.10008.1.2.4.81"
    return:
      type: System.String
    content.vb: Public Const JPEG_LS_NEAR_LOSSLESS As String = "1.2.840.10008.1.2.4.81"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000_LOSSLESS
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000_LOSSLESS
  id: JPEG_2000_LOSSLESS
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_2000_LOSSLESS
  nameWithType: TransferSyntaxHelper.JPEG_2000_LOSSLESS
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000_LOSSLESS
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_2000_LOSSLESS
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 76
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG 2000 lossless image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_2000_LOSSLESS = "1.2.840.10008.1.2.4.90"
    return:
      type: System.String
    content.vb: Public Const JPEG_2000_LOSSLESS As String = "1.2.840.10008.1.2.4.90"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000
  commentId: F:EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000
  id: JPEG_2000
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: JPEG_2000
  nameWithType: TransferSyntaxHelper.JPEG_2000
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.JPEG_2000
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: JPEG_2000
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 81
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nUnique ID that represents JPEG 2000 image encoding\n"
  example: []
  syntax:
    content: public const string JPEG_2000 = "1.2.840.10008.1.2.4.91"
    return:
      type: System.String
    content.vb: Public Const JPEG_2000 As String = "1.2.840.10008.1.2.4.91"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(EvilDICOM.Core.Interfaces.IDICOMElement)
  commentId: M:EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(EvilDICOM.Core.Interfaces.IDICOMElement)
  id: GetSyntax(EvilDICOM.Core.Interfaces.IDICOMElement)
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: GetSyntax(IDICOMElement)
  nameWithType: TransferSyntaxHelper.GetSyntax(IDICOMElement)
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(EvilDICOM.Core.Interfaces.IDICOMElement)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetSyntax
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 88
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nConverts the string in the Transfer syntax element to the transfer syntax enum for reading the file\n"
  example: []
  syntax:
    content: public static TransferSyntax GetSyntax(IDICOMElement el)
    parameters:
    - id: el
      type: EvilDICOM.Core.Interfaces.IDICOMElement
      description: the transfer syntax element
    return:
      type: EvilDICOM.Core.Enums.TransferSyntax
      description: the transfer syntax in enum format
    content.vb: Public Shared Function GetSyntax(el As IDICOMElement) As TransferSyntax
  overload: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage(System.String)
  commentId: M:EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage(System.String)
  id: IsCompressedImage(System.String)
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: IsCompressedImage(String)
  nameWithType: TransferSyntaxHelper.IsCompressedImage(String)
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: IsCompressedImage
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 99
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nIndicates if the pixel data is in compressed form\n"
  example: []
  syntax:
    content: public static bool IsCompressedImage(string syntaxUIDString)
    parameters:
    - id: syntaxUIDString
      type: System.String
    return:
      type: System.Boolean
      description: boolean indicating if image is compressed
    content.vb: Public Shared Function IsCompressedImage(syntaxUIDString As String) As Boolean
  overload: EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(System.String)
  commentId: M:EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(System.String)
  id: GetSyntax(System.String)
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: GetSyntax(String)
  nameWithType: TransferSyntaxHelper.GetSyntax(String)
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetSyntax
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 112
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nConverts the string to the transfer syntax enum for reading the file\n"
  example: []
  syntax:
    content: public static TransferSyntax GetSyntax(string syntaxUID)
    parameters:
    - id: syntaxUID
      type: System.String
    return:
      type: EvilDICOM.Core.Enums.TransferSyntax
      description: the transfer syntax in enum format
    content.vb: Public Shared Function GetSyntax(syntaxUID As String) As TransferSyntax
  overload: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Enums.TransferSyntax)
  commentId: M:EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Enums.TransferSyntax)
  id: SetSyntax(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Enums.TransferSyntax)
  parent: EvilDICOM.Core.Helpers.TransferSyntaxHelper
  langs:
  - csharp
  - vb
  name: SetSyntax(DICOMObject, TransferSyntax)
  nameWithType: TransferSyntaxHelper.SetSyntax(DICOMObject, TransferSyntax)
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax(EvilDICOM.Core.DICOMObject, EvilDICOM.Core.Enums.TransferSyntax)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SetSyntax
    path: ../EvilDICOM/Core/Helpers/TransferSyntaxHelper.cs
    startLine: 154
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Helpers
  summary: "\nSets the transfer syntax of the DICOM object. The purpose of this is to go from an enum to a string.\n"
  example: []
  syntax:
    content: public static void SetSyntax(DICOMObject dicom, TransferSyntax selector)
    parameters:
    - id: dicom
      type: EvilDICOM.Core.DICOMObject
      description: the DICOM object to set syntax
    - id: selector
      type: EvilDICOM.Core.Enums.TransferSyntax
      description: the transfer syntax to set
    content.vb: Public Shared Sub SetSyntax(dicom As DICOMObject, selector As TransferSyntax)
  overload: EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.Helpers
  commentId: N:EvilDICOM.Core.Helpers
  name: EvilDICOM.Core.Helpers
  nameWithType: EvilDICOM.Core.Helpers
  fullName: EvilDICOM.Core.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax*
  commentId: Overload:EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax
  name: GetSyntax
  nameWithType: TransferSyntaxHelper.GetSyntax
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  commentId: T:EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  name: IDICOMElement
  nameWithType: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: EvilDICOM.Core.Enums.TransferSyntax
  commentId: T:EvilDICOM.Core.Enums.TransferSyntax
  parent: EvilDICOM.Core.Enums
  name: TransferSyntax
  nameWithType: TransferSyntax
  fullName: EvilDICOM.Core.Enums.TransferSyntax
- uid: EvilDICOM.Core.Interfaces
  commentId: N:EvilDICOM.Core.Interfaces
  name: EvilDICOM.Core.Interfaces
  nameWithType: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: EvilDICOM.Core.Enums
  commentId: N:EvilDICOM.Core.Enums
  name: EvilDICOM.Core.Enums
  nameWithType: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage*
  commentId: Overload:EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage
  name: IsCompressedImage
  nameWithType: TransferSyntaxHelper.IsCompressedImage
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.IsCompressedImage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax*
  commentId: Overload:EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax
  name: SetSyntax
  nameWithType: TransferSyntaxHelper.SetSyntax
  fullName: EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
