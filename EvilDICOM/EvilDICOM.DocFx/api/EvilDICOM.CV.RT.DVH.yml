### YamlMime:ManagedReference
items:
- uid: EvilDICOM.CV.RT.DVH
  commentId: T:EvilDICOM.CV.RT.DVH
  id: DVH
  parent: EvilDICOM.CV.RT
  children:
  - EvilDICOM.CV.RT.DVH.#ctor(System.Double,System.Double,System.String)
  - EvilDICOM.CV.RT.DVH.AddSliceToDVH(OpenCvSharp.Mat,OpenCvSharp.Mat)
  - EvilDICOM.CV.RT.DVH.GetDVHData
  - EvilDICOM.CV.RT.DVH.Volume
  langs:
  - csharp
  - vb
  name: DVH
  nameWithType: DVH
  fullName: EvilDICOM.CV.RT.DVH
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/DVH.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DVH
    path: ../EvilDICOM.CV/RT/DVH.cs
    startLine: 10
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public class DVH
    content.vb: Public Class DVH
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.CV.RT.DVH.Volume
  commentId: P:EvilDICOM.CV.RT.DVH.Volume
  id: Volume
  parent: EvilDICOM.CV.RT.DVH
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: DVH.Volume
  fullName: EvilDICOM.CV.RT.DVH.Volume
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/DVH.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Volume
    path: ../EvilDICOM.CV/RT/DVH.cs
    startLine: 19
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public double Volume { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Volume As Double
  overload: EvilDICOM.CV.RT.DVH.Volume*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.CV.RT.DVH.#ctor(System.Double,System.Double,System.String)
  commentId: M:EvilDICOM.CV.RT.DVH.#ctor(System.Double,System.Double,System.String)
  id: '#ctor(System.Double,System.Double,System.String)'
  parent: EvilDICOM.CV.RT.DVH
  langs:
  - csharp
  - vb
  name: DVH(Double, Double, String)
  nameWithType: DVH.DVH(Double, Double, String)
  fullName: EvilDICOM.CV.RT.DVH.DVH(System.Double, System.Double, System.String)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/DVH.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM.CV/RT/DVH.cs
    startLine: 21
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public DVH(double maxDose, double voxelCC, string doseUnit)
    parameters:
    - id: maxDose
      type: System.Double
    - id: voxelCC
      type: System.Double
    - id: doseUnit
      type: System.String
    content.vb: Public Sub New(maxDose As Double, voxelCC As Double, doseUnit As String)
  overload: EvilDICOM.CV.RT.DVH.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.DVH.AddSliceToDVH(OpenCvSharp.Mat,OpenCvSharp.Mat)
  commentId: M:EvilDICOM.CV.RT.DVH.AddSliceToDVH(OpenCvSharp.Mat,OpenCvSharp.Mat)
  id: AddSliceToDVH(OpenCvSharp.Mat,OpenCvSharp.Mat)
  parent: EvilDICOM.CV.RT.DVH
  langs:
  - csharp
  - vb
  name: AddSliceToDVH(Mat, Mat)
  nameWithType: DVH.AddSliceToDVH(Mat, Mat)
  fullName: EvilDICOM.CV.RT.DVH.AddSliceToDVH(OpenCvSharp.Mat, OpenCvSharp.Mat)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/DVH.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: AddSliceToDVH
    path: ../EvilDICOM.CV/RT/DVH.cs
    startLine: 31
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public void AddSliceToDVH(Mat doseSlice, Mat mask)
    parameters:
    - id: doseSlice
      type: OpenCvSharp.Mat
    - id: mask
      type: OpenCvSharp.Mat
    content.vb: Public Sub AddSliceToDVH(doseSlice As Mat, mask As Mat)
  overload: EvilDICOM.CV.RT.DVH.AddSliceToDVH*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.DVH.GetDVHData
  commentId: M:EvilDICOM.CV.RT.DVH.GetDVHData
  id: GetDVHData
  parent: EvilDICOM.CV.RT.DVH
  langs:
  - csharp
  - vb
  name: GetDVHData()
  nameWithType: DVH.GetDVHData()
  fullName: EvilDICOM.CV.RT.DVH.GetDVHData()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/DVH.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetDVHData
    path: ../EvilDICOM.CV/RT/DVH.cs
    startLine: 37
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT
  syntax:
    content: public DVHData GetDVHData()
    return:
      type: EvilDICOM.RT.Data.DVH.DVHData
    content.vb: Public Function GetDVHData As DVHData
  overload: EvilDICOM.CV.RT.DVH.GetDVHData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.CV.RT
  commentId: N:EvilDICOM.CV.RT
  name: EvilDICOM.CV.RT
  nameWithType: EvilDICOM.CV.RT
  fullName: EvilDICOM.CV.RT
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.CV.RT.DVH.Volume*
  commentId: Overload:EvilDICOM.CV.RT.DVH.Volume
  name: Volume
  nameWithType: DVH.Volume
  fullName: EvilDICOM.CV.RT.DVH.Volume
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: EvilDICOM.CV.RT.DVH.#ctor*
  commentId: Overload:EvilDICOM.CV.RT.DVH.#ctor
  name: DVH
  nameWithType: DVH.DVH
  fullName: EvilDICOM.CV.RT.DVH.DVH
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.CV.RT.DVH.AddSliceToDVH*
  commentId: Overload:EvilDICOM.CV.RT.DVH.AddSliceToDVH
  name: AddSliceToDVH
  nameWithType: DVH.AddSliceToDVH
  fullName: EvilDICOM.CV.RT.DVH.AddSliceToDVH
- uid: OpenCvSharp.Mat
  commentId: T:OpenCvSharp.Mat
  parent: OpenCvSharp
  isExternal: true
  name: Mat
  nameWithType: Mat
  fullName: OpenCvSharp.Mat
- uid: OpenCvSharp
  commentId: N:OpenCvSharp
  isExternal: true
  name: OpenCvSharp
  nameWithType: OpenCvSharp
  fullName: OpenCvSharp
- uid: EvilDICOM.CV.RT.DVH.GetDVHData*
  commentId: Overload:EvilDICOM.CV.RT.DVH.GetDVHData
  name: GetDVHData
  nameWithType: DVH.GetDVHData
  fullName: EvilDICOM.CV.RT.DVH.GetDVHData
- uid: EvilDICOM.RT.Data.DVH.DVHData
  commentId: T:EvilDICOM.RT.Data.DVH.DVHData
  parent: EvilDICOM.RT.Data.DVH
  name: DVHData
  nameWithType: DVHData
  fullName: EvilDICOM.RT.Data.DVH.DVHData
- uid: EvilDICOM.RT.Data.DVH
  commentId: N:EvilDICOM.RT.Data.DVH
  name: EvilDICOM.RT.Data.DVH
  nameWithType: EvilDICOM.RT.Data.DVH
  fullName: EvilDICOM.RT.Data.DVH
