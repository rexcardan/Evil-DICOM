### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.Messaging.SendStatus
  commentId: T:EvilDICOM.Network.Messaging.SendStatus
  id: SendStatus
  parent: EvilDICOM.Network.Messaging
  children:
  - EvilDICOM.Network.Messaging.SendStatus.DidConnect
  - EvilDICOM.Network.Messaging.SendStatus.Reason
  - EvilDICOM.Network.Messaging.SendStatus.WasAccepted
  - EvilDICOM.Network.Messaging.SendStatus.WasRejected
  langs:
  - csharp
  - vb
  name: SendStatus
  nameWithType: SendStatus
  fullName: EvilDICOM.Network.Messaging.SendStatus
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Messaging/SendStatus.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SendStatus
    path: ../EvilDICOM/Network/Messaging/SendStatus.cs
    startLine: 6
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Messaging
  syntax:
    content: public class SendStatus
    content.vb: Public Class SendStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.Messaging.SendStatus.DidConnect
  commentId: P:EvilDICOM.Network.Messaging.SendStatus.DidConnect
  id: DidConnect
  parent: EvilDICOM.Network.Messaging.SendStatus
  langs:
  - csharp
  - vb
  name: DidConnect
  nameWithType: SendStatus.DidConnect
  fullName: EvilDICOM.Network.Messaging.SendStatus.DidConnect
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Messaging/SendStatus.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DidConnect
    path: ../EvilDICOM/Network/Messaging/SendStatus.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Messaging
  syntax:
    content: public bool DidConnect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DidConnect As Boolean
  overload: EvilDICOM.Network.Messaging.SendStatus.DidConnect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Messaging.SendStatus.WasRejected
  commentId: P:EvilDICOM.Network.Messaging.SendStatus.WasRejected
  id: WasRejected
  parent: EvilDICOM.Network.Messaging.SendStatus
  langs:
  - csharp
  - vb
  name: WasRejected
  nameWithType: SendStatus.WasRejected
  fullName: EvilDICOM.Network.Messaging.SendStatus.WasRejected
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Messaging/SendStatus.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: WasRejected
    path: ../EvilDICOM/Network/Messaging/SendStatus.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Messaging
  syntax:
    content: public bool WasRejected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WasRejected As Boolean
  overload: EvilDICOM.Network.Messaging.SendStatus.WasRejected*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Messaging.SendStatus.WasAccepted
  commentId: P:EvilDICOM.Network.Messaging.SendStatus.WasAccepted
  id: WasAccepted
  parent: EvilDICOM.Network.Messaging.SendStatus
  langs:
  - csharp
  - vb
  name: WasAccepted
  nameWithType: SendStatus.WasAccepted
  fullName: EvilDICOM.Network.Messaging.SendStatus.WasAccepted
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Messaging/SendStatus.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: WasAccepted
    path: ../EvilDICOM/Network/Messaging/SendStatus.cs
    startLine: 10
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Messaging
  syntax:
    content: public bool WasAccepted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WasAccepted As Boolean
  overload: EvilDICOM.Network.Messaging.SendStatus.WasAccepted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Messaging.SendStatus.Reason
  commentId: P:EvilDICOM.Network.Messaging.SendStatus.Reason
  id: Reason
  parent: EvilDICOM.Network.Messaging.SendStatus
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: SendStatus.Reason
  fullName: EvilDICOM.Network.Messaging.SendStatus.Reason
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Messaging/SendStatus.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Reason
    path: ../EvilDICOM/Network/Messaging/SendStatus.cs
    startLine: 11
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Messaging
  syntax:
    content: public string Reason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Reason As String
  overload: EvilDICOM.Network.Messaging.SendStatus.Reason*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Network.Messaging
  commentId: N:EvilDICOM.Network.Messaging
  name: EvilDICOM.Network.Messaging
  nameWithType: EvilDICOM.Network.Messaging
  fullName: EvilDICOM.Network.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.Messaging.SendStatus.DidConnect*
  commentId: Overload:EvilDICOM.Network.Messaging.SendStatus.DidConnect
  name: DidConnect
  nameWithType: SendStatus.DidConnect
  fullName: EvilDICOM.Network.Messaging.SendStatus.DidConnect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Network.Messaging.SendStatus.WasRejected*
  commentId: Overload:EvilDICOM.Network.Messaging.SendStatus.WasRejected
  name: WasRejected
  nameWithType: SendStatus.WasRejected
  fullName: EvilDICOM.Network.Messaging.SendStatus.WasRejected
- uid: EvilDICOM.Network.Messaging.SendStatus.WasAccepted*
  commentId: Overload:EvilDICOM.Network.Messaging.SendStatus.WasAccepted
  name: WasAccepted
  nameWithType: SendStatus.WasAccepted
  fullName: EvilDICOM.Network.Messaging.SendStatus.WasAccepted
- uid: EvilDICOM.Network.Messaging.SendStatus.Reason*
  commentId: Overload:EvilDICOM.Network.Messaging.SendStatus.Reason
  name: Reason
  nameWithType: SendStatus.Reason
  fullName: EvilDICOM.Network.Messaging.SendStatus.Reason
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
