### YamlMime:ManagedReference
items:
- uid: EvilDICOM.CV.Drawing.StructureLooks
  commentId: T:EvilDICOM.CV.Drawing.StructureLooks
  id: StructureLooks
  parent: EvilDICOM.CV.Drawing
  children:
  - EvilDICOM.CV.Drawing.StructureLooks.Default
  - EvilDICOM.CV.Drawing.StructureLooks.GTV
  - EvilDICOM.CV.Drawing.StructureLooks.Purple
  langs:
  - csharp
  - vb
  name: StructureLooks
  nameWithType: StructureLooks
  fullName: EvilDICOM.CV.Drawing.StructureLooks
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Drawing/StructureLooks.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: StructureLooks
    path: ../EvilDICOM.CV/Drawing/StructureLooks.cs
    startLine: 9
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Drawing
  syntax:
    content: public class StructureLooks
    content.vb: Public Class StructureLooks
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.CV.Drawing.StructureLooks.GTV
  commentId: P:EvilDICOM.CV.Drawing.StructureLooks.GTV
  id: GTV
  parent: EvilDICOM.CV.Drawing.StructureLooks
  langs:
  - csharp
  - vb
  name: GTV
  nameWithType: StructureLooks.GTV
  fullName: EvilDICOM.CV.Drawing.StructureLooks.GTV
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Drawing/StructureLooks.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GTV
    path: ../EvilDICOM.CV/Drawing/StructureLooks.cs
    startLine: 11
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Drawing
  syntax:
    content: public static StructureLook GTV { get; }
    parameters: []
    return:
      type: EvilDICOM.CV.Drawing.StructureLook
    content.vb: Public Shared ReadOnly Property GTV As StructureLook
  overload: EvilDICOM.CV.Drawing.StructureLooks.GTV*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EvilDICOM.CV.Drawing.StructureLooks.Purple
  commentId: P:EvilDICOM.CV.Drawing.StructureLooks.Purple
  id: Purple
  parent: EvilDICOM.CV.Drawing.StructureLooks
  langs:
  - csharp
  - vb
  name: Purple
  nameWithType: StructureLooks.Purple
  fullName: EvilDICOM.CV.Drawing.StructureLooks.Purple
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Drawing/StructureLooks.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Purple
    path: ../EvilDICOM.CV/Drawing/StructureLooks.cs
    startLine: 13
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Drawing
  syntax:
    content: public static StructureLook Purple { get; }
    parameters: []
    return:
      type: EvilDICOM.CV.Drawing.StructureLook
    content.vb: Public Shared ReadOnly Property Purple As StructureLook
  overload: EvilDICOM.CV.Drawing.StructureLooks.Purple*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EvilDICOM.CV.Drawing.StructureLooks.Default
  commentId: P:EvilDICOM.CV.Drawing.StructureLooks.Default
  id: Default
  parent: EvilDICOM.CV.Drawing.StructureLooks
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: StructureLooks.Default
  fullName: EvilDICOM.CV.Drawing.StructureLooks.Default
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Drawing/StructureLooks.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Default
    path: ../EvilDICOM.CV/Drawing/StructureLooks.cs
    startLine: 14
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Drawing
  syntax:
    content: public static StructureLook Default { get; }
    parameters: []
    return:
      type: EvilDICOM.CV.Drawing.StructureLook
    content.vb: Public Shared ReadOnly Property Default As StructureLook
  overload: EvilDICOM.CV.Drawing.StructureLooks.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: EvilDICOM.CV.Drawing
  commentId: N:EvilDICOM.CV.Drawing
  name: EvilDICOM.CV.Drawing
  nameWithType: EvilDICOM.CV.Drawing
  fullName: EvilDICOM.CV.Drawing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.CV.Drawing.StructureLooks.GTV*
  commentId: Overload:EvilDICOM.CV.Drawing.StructureLooks.GTV
  name: GTV
  nameWithType: StructureLooks.GTV
  fullName: EvilDICOM.CV.Drawing.StructureLooks.GTV
- uid: EvilDICOM.CV.Drawing.StructureLook
  commentId: T:EvilDICOM.CV.Drawing.StructureLook
  parent: EvilDICOM.CV.Drawing
  name: StructureLook
  nameWithType: StructureLook
  fullName: EvilDICOM.CV.Drawing.StructureLook
- uid: EvilDICOM.CV.Drawing.StructureLooks.Purple*
  commentId: Overload:EvilDICOM.CV.Drawing.StructureLooks.Purple
  name: Purple
  nameWithType: StructureLooks.Purple
  fullName: EvilDICOM.CV.Drawing.StructureLooks.Purple
- uid: EvilDICOM.CV.Drawing.StructureLooks.Default*
  commentId: Overload:EvilDICOM.CV.Drawing.StructureLooks.Default
  name: Default
  nameWithType: StructureLooks.Default
  fullName: EvilDICOM.CV.Drawing.StructureLooks.Default
