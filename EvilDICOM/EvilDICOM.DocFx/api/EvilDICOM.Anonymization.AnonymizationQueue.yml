### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Anonymization.AnonymizationQueue
  commentId: T:EvilDICOM.Anonymization.AnonymizationQueue
  id: AnonymizationQueue
  parent: EvilDICOM.Anonymization
  children:
  - EvilDICOM.Anonymization.AnonymizationQueue.#ctor
  - EvilDICOM.Anonymization.AnonymizationQueue.Anonymize(EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue(EvilDICOM.Anonymization.Settings.AnonymizationSettings,System.Collections.Generic.IEnumerable{System.String})
  - EvilDICOM.Anonymization.AnonymizationQueue.Default(System.Collections.Generic.IEnumerable{System.String})
  - EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdated
  - EvilDICOM.Anonymization.AnonymizationQueue.Queue
  - EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated(System.Double)
  langs:
  - csharp
  - vb
  name: AnonymizationQueue
  nameWithType: AnonymizationQueue
  fullName: EvilDICOM.Anonymization.AnonymizationQueue
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: AnonymizationQueue
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  summary: "\nThis class is for building a stack of anonymization options and then executing\n"
  example: []
  syntax:
    content: public class AnonymizationQueue
    content.vb: Public Class AnonymizationQueue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Anonymization.AnonymizationQueue.#ctor
  commentId: M:EvilDICOM.Anonymization.AnonymizationQueue.#ctor
  id: '#ctor'
  parent: EvilDICOM.Anonymization.AnonymizationQueue
  langs:
  - csharp
  - vb
  name: AnonymizationQueue()
  nameWithType: AnonymizationQueue.AnonymizationQueue()
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.AnonymizationQueue()
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  syntax:
    content: public AnonymizationQueue()
    content.vb: Public Sub New
  overload: EvilDICOM.Anonymization.AnonymizationQueue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.AnonymizationQueue.Queue
  commentId: P:EvilDICOM.Anonymization.AnonymizationQueue.Queue
  id: Queue
  parent: EvilDICOM.Anonymization.AnonymizationQueue
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: AnonymizationQueue.Queue
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.Queue
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Queue
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  summary: "\nThe current list of anonymization settings\n"
  example: []
  syntax:
    content: public List<IAnonymizer> Queue { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{EvilDICOM.Anonymization.IAnonymizer}
    content.vb: Public Property Queue As List(Of IAnonymizer)
  overload: EvilDICOM.Anonymization.AnonymizationQueue.Queue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue(EvilDICOM.Anonymization.Settings.AnonymizationSettings,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue(EvilDICOM.Anonymization.Settings.AnonymizationSettings,System.Collections.Generic.IEnumerable{System.String})
  id: BuildQueue(EvilDICOM.Anonymization.Settings.AnonymizationSettings,System.Collections.Generic.IEnumerable{System.String})
  parent: EvilDICOM.Anonymization.AnonymizationQueue
  langs:
  - csharp
  - vb
  name: BuildQueue(AnonymizationSettings, IEnumerable<String>)
  nameWithType: AnonymizationQueue.BuildQueue(AnonymizationSettings, IEnumerable<String>)
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue(EvilDICOM.Anonymization.Settings.AnonymizationSettings, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: BuildQueue
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  syntax:
    content: public static AnonymizationQueue BuildQueue(AnonymizationSettings settings, IEnumerable<string> dcmFiles)
    parameters:
    - id: settings
      type: EvilDICOM.Anonymization.Settings.AnonymizationSettings
    - id: dcmFiles
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: EvilDICOM.Anonymization.AnonymizationQueue
    content.vb: Public Shared Function BuildQueue(settings As AnonymizationSettings, dcmFiles As IEnumerable(Of String)) As AnonymizationQueue
  overload: EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue*
  nameWithType.vb: AnonymizationQueue.BuildQueue(AnonymizationSettings, IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue(EvilDICOM.Anonymization.Settings.AnonymizationSettings, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: BuildQueue(AnonymizationSettings, IEnumerable(Of String))
- uid: EvilDICOM.Anonymization.AnonymizationQueue.Default(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:EvilDICOM.Anonymization.AnonymizationQueue.Default(System.Collections.Generic.IEnumerable{System.String})
  id: Default(System.Collections.Generic.IEnumerable{System.String})
  parent: EvilDICOM.Anonymization.AnonymizationQueue
  langs:
  - csharp
  - vb
  name: Default(IEnumerable<String>)
  nameWithType: AnonymizationQueue.Default(IEnumerable<String>)
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.Default(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Default
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 60
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  summary: "\nInitializes an anonymization queue from a list of DICOM files that need to be anonymized\n"
  example: []
  syntax:
    content: public AnonymizationQueue Default(IEnumerable<string> dcmFiles)
    parameters:
    - id: dcmFiles
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    return:
      type: EvilDICOM.Anonymization.AnonymizationQueue
      description: the anonymization queue with default options
    content.vb: Public Function Default(dcmFiles As IEnumerable(Of String)) As AnonymizationQueue
  overload: EvilDICOM.Anonymization.AnonymizationQueue.Default*
  nameWithType.vb: AnonymizationQueue.Default(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Anonymization.AnonymizationQueue.Default(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Default(IEnumerable(Of String))
- uid: EvilDICOM.Anonymization.AnonymizationQueue.Anonymize(EvilDICOM.Core.DICOMObject)
  commentId: M:EvilDICOM.Anonymization.AnonymizationQueue.Anonymize(EvilDICOM.Core.DICOMObject)
  id: Anonymize(EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Anonymization.AnonymizationQueue
  langs:
  - csharp
  - vb
  name: Anonymize(DICOMObject)
  nameWithType: AnonymizationQueue.Anonymize(DICOMObject)
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.Anonymize(EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Anonymize
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 69
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  summary: "\nThis method needs to be called on each DICOM object (file) to be anonymized with the set options\n"
  example: []
  syntax:
    content: public void Anonymize(DICOMObject dcm)
    parameters:
    - id: dcm
      type: EvilDICOM.Core.DICOMObject
      description: the DICOM object (file) to be anonymized
    content.vb: Public Sub Anonymize(dcm As DICOMObject)
  overload: EvilDICOM.Anonymization.AnonymizationQueue.Anonymize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdated
  commentId: E:EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdated
  id: ProgressUpdated
  parent: EvilDICOM.Anonymization.AnonymizationQueue
  langs:
  - csharp
  - vb
  name: ProgressUpdated
  nameWithType: AnonymizationQueue.ProgressUpdated
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdated
  type: Event
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ProgressUpdated
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 96
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  summary: "\nReports a double value of the current progress from 0 to 100\n"
  example: []
  syntax:
    content: public event AnonymizationQueue.ProgressUpdatedHandler ProgressUpdated
    return:
      type: EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdatedHandler
    content.vb: Public Event ProgressUpdated As AnonymizationQueue.ProgressUpdatedHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated(System.Double)
  commentId: M:EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated(System.Double)
  id: RaiseProgressUpdated(System.Double)
  parent: EvilDICOM.Anonymization.AnonymizationQueue
  langs:
  - csharp
  - vb
  name: RaiseProgressUpdated(Double)
  nameWithType: AnonymizationQueue.RaiseProgressUpdated(Double)
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated(System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/AnonymizationQueue.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: RaiseProgressUpdated
    path: ../EvilDICOM/Anonymization/AnonymizationQueue.cs
    startLine: 98
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization
  syntax:
    content: public void RaiseProgressUpdated(double progress)
    parameters:
    - id: progress
      type: System.Double
    content.vb: Public Sub RaiseProgressUpdated(progress As Double)
  overload: EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Anonymization
  commentId: N:EvilDICOM.Anonymization
  name: EvilDICOM.Anonymization
  nameWithType: EvilDICOM.Anonymization
  fullName: EvilDICOM.Anonymization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Anonymization.AnonymizationQueue.#ctor*
  commentId: Overload:EvilDICOM.Anonymization.AnonymizationQueue.#ctor
  name: AnonymizationQueue
  nameWithType: AnonymizationQueue.AnonymizationQueue
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.AnonymizationQueue
- uid: EvilDICOM.Anonymization.AnonymizationQueue.Queue*
  commentId: Overload:EvilDICOM.Anonymization.AnonymizationQueue.Queue
  name: Queue
  nameWithType: AnonymizationQueue.Queue
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.Queue
- uid: System.Collections.Generic.List{EvilDICOM.Anonymization.IAnonymizer}
  commentId: T:System.Collections.Generic.List{EvilDICOM.Anonymization.IAnonymizer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IAnonymizer>
  nameWithType: List<IAnonymizer>
  fullName: System.Collections.Generic.List<EvilDICOM.Anonymization.IAnonymizer>
  nameWithType.vb: List(Of IAnonymizer)
  fullName.vb: System.Collections.Generic.List(Of EvilDICOM.Anonymization.IAnonymizer)
  name.vb: List(Of IAnonymizer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Anonymization.IAnonymizer
    name: IAnonymizer
    nameWithType: IAnonymizer
    fullName: EvilDICOM.Anonymization.IAnonymizer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Anonymization.IAnonymizer
    name: IAnonymizer
    nameWithType: IAnonymizer
    fullName: EvilDICOM.Anonymization.IAnonymizer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue*
  commentId: Overload:EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue
  name: BuildQueue
  nameWithType: AnonymizationQueue.BuildQueue
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.BuildQueue
- uid: EvilDICOM.Anonymization.Settings.AnonymizationSettings
  commentId: T:EvilDICOM.Anonymization.Settings.AnonymizationSettings
  parent: EvilDICOM.Anonymization.Settings
  name: AnonymizationSettings
  nameWithType: AnonymizationSettings
  fullName: EvilDICOM.Anonymization.Settings.AnonymizationSettings
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Anonymization.AnonymizationQueue
  commentId: T:EvilDICOM.Anonymization.AnonymizationQueue
  parent: EvilDICOM.Anonymization
  name: AnonymizationQueue
  nameWithType: AnonymizationQueue
  fullName: EvilDICOM.Anonymization.AnonymizationQueue
- uid: EvilDICOM.Anonymization.Settings
  commentId: N:EvilDICOM.Anonymization.Settings
  name: EvilDICOM.Anonymization.Settings
  nameWithType: EvilDICOM.Anonymization.Settings
  fullName: EvilDICOM.Anonymization.Settings
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Anonymization.AnonymizationQueue.Default*
  commentId: Overload:EvilDICOM.Anonymization.AnonymizationQueue.Default
  name: Default
  nameWithType: AnonymizationQueue.Default
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.Default
- uid: EvilDICOM.Anonymization.AnonymizationQueue.Anonymize*
  commentId: Overload:EvilDICOM.Anonymization.AnonymizationQueue.Anonymize
  name: Anonymize
  nameWithType: AnonymizationQueue.Anonymize
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.Anonymize
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdatedHandler
  commentId: T:EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdatedHandler
  parent: EvilDICOM.Anonymization
  name: AnonymizationQueue.ProgressUpdatedHandler
  nameWithType: AnonymizationQueue.ProgressUpdatedHandler
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.ProgressUpdatedHandler
- uid: EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated*
  commentId: Overload:EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated
  name: RaiseProgressUpdated
  nameWithType: AnonymizationQueue.RaiseProgressUpdated
  fullName: EvilDICOM.Anonymization.AnonymizationQueue.RaiseProgressUpdated
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
