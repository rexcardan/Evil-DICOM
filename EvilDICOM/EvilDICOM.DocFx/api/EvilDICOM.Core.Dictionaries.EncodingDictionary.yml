### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Dictionaries.EncodingDictionary
  commentId: T:EvilDICOM.Core.Dictionaries.EncodingDictionary
  id: EncodingDictionary
  parent: EvilDICOM.Core.Dictionaries
  children:
  - EvilDICOM.Core.Dictionaries.EncodingDictionary.encodingMap
  - EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(EvilDICOM.Core.Enums.StringEncoding)
  - EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(System.String)
  langs:
  - csharp
  - vb
  name: EncodingDictionary
  nameWithType: EncodingDictionary
  fullName: EvilDICOM.Core.Dictionaries.EncodingDictionary
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: EncodingDictionary
    path: ../EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
    startLine: 6
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  syntax:
    content: public class EncodingDictionary
    content.vb: Public Class EncodingDictionary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.Dictionaries.EncodingDictionary.encodingMap
  commentId: F:EvilDICOM.Core.Dictionaries.EncodingDictionary.encodingMap
  id: encodingMap
  parent: EvilDICOM.Core.Dictionaries.EncodingDictionary
  langs:
  - csharp
  - vb
  name: encodingMap
  nameWithType: EncodingDictionary.encodingMap
  fullName: EvilDICOM.Core.Dictionaries.EncodingDictionary.encodingMap
  type: Field
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: encodingMap
    path: ../EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
    startLine: 8
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  syntax:
    content: public static Dictionary<string, string> encodingMap
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared encodingMap As Dictionary(Of String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(System.String)
  commentId: M:EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(System.String)
  id: GetEncodingFromISO(System.String)
  parent: EvilDICOM.Core.Dictionaries.EncodingDictionary
  langs:
  - csharp
  - vb
  name: GetEncodingFromISO(String)
  nameWithType: EncodingDictionary.GetEncodingFromISO(String)
  fullName: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetEncodingFromISO
    path: ../EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
    startLine: 39
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  syntax:
    content: public static Encoding GetEncodingFromISO(string isoStandard)
    parameters:
    - id: isoStandard
      type: System.String
    return:
      type: System.Text.Encoding
    content.vb: Public Shared Function GetEncodingFromISO(isoStandard As String) As Encoding
  overload: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(EvilDICOM.Core.Enums.StringEncoding)
  commentId: M:EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(EvilDICOM.Core.Enums.StringEncoding)
  id: GetEncodingFromISO(EvilDICOM.Core.Enums.StringEncoding)
  parent: EvilDICOM.Core.Dictionaries.EncodingDictionary
  langs:
  - csharp
  - vb
  name: GetEncodingFromISO(StringEncoding)
  nameWithType: EncodingDictionary.GetEncodingFromISO(StringEncoding)
  fullName: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO(EvilDICOM.Core.Enums.StringEncoding)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetEncodingFromISO
    path: ../EvilDICOM/Core/Dictionaries/EncodingDictionary.cs
    startLine: 46
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  syntax:
    content: public static Encoding GetEncodingFromISO(StringEncoding enc)
    parameters:
    - id: enc
      type: EvilDICOM.Core.Enums.StringEncoding
    return:
      type: System.Text.Encoding
    content.vb: Public Shared Function GetEncodingFromISO(enc As StringEncoding) As Encoding
  overload: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.Dictionaries
  commentId: N:EvilDICOM.Core.Dictionaries
  name: EvilDICOM.Core.Dictionaries
  nameWithType: EvilDICOM.Core.Dictionaries
  fullName: EvilDICOM.Core.Dictionaries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO*
  commentId: Overload:EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO
  name: GetEncodingFromISO
  nameWithType: EncodingDictionary.GetEncodingFromISO
  fullName: EvilDICOM.Core.Dictionaries.EncodingDictionary.GetEncodingFromISO
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: EvilDICOM.Core.Enums.StringEncoding
  commentId: T:EvilDICOM.Core.Enums.StringEncoding
  parent: EvilDICOM.Core.Enums
  name: StringEncoding
  nameWithType: StringEncoding
  fullName: EvilDICOM.Core.Enums.StringEncoding
- uid: EvilDICOM.Core.Enums
  commentId: N:EvilDICOM.Core.Enums
  name: EvilDICOM.Core.Enums
  nameWithType: EvilDICOM.Core.Enums
  fullName: EvilDICOM.Core.Enums
