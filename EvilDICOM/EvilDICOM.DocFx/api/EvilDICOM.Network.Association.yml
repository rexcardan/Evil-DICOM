### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.Association
  commentId: T:EvilDICOM.Network.Association
  id: Association
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,System.Net.Sockets.TcpClient)
  - EvilDICOM.Network.Association.AeTitle
  - EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  - EvilDICOM.Network.Association.IdleClock
  - EvilDICOM.Network.Association.IpAddress
  - EvilDICOM.Network.Association.IsClientConnected
  - EvilDICOM.Network.Association.LastActive
  - EvilDICOM.Network.Association.Listen(System.Nullable{System.TimeSpan})
  - EvilDICOM.Network.Association.Logger
  - EvilDICOM.Network.Association.OutboundMessages
  - EvilDICOM.Network.Association.PDataProcessor
  - EvilDICOM.Network.Association.PDUProcessor
  - EvilDICOM.Network.Association.Port
  - EvilDICOM.Network.Association.PresentationContexts
  - EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  - EvilDICOM.Network.Association.Read(System.Double)
  - EvilDICOM.Network.Association.Reader
  - EvilDICOM.Network.Association.Release
  - EvilDICOM.Network.Association.RequestAbort
  - EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  - EvilDICOM.Network.Association.SendMessage(System.Byte[])
  - EvilDICOM.Network.Association.ServiceClass
  - EvilDICOM.Network.Association.State
  - EvilDICOM.Network.Association.Stream
  - EvilDICOM.Network.Association.ToString
  - EvilDICOM.Network.Association.UserInfo
  langs:
  - csharp
  - vb
  name: Association
  nameWithType: Association
  fullName: EvilDICOM.Network.Association
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Association
    path: ../EvilDICOM/Network/Association.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public class Association
    content.vb: Public Class Association
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  - EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,System.Net.Sockets.TcpClient)
  commentId: M:EvilDICOM.Network.Association.#ctor(EvilDICOM.Network.DICOMServiceClass,System.Net.Sockets.TcpClient)
  id: '#ctor(EvilDICOM.Network.DICOMServiceClass,System.Net.Sockets.TcpClient)'
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Association(DICOMServiceClass, TcpClient)
  nameWithType: Association.Association(DICOMServiceClass, TcpClient)
  fullName: EvilDICOM.Network.Association.Association(EvilDICOM.Network.DICOMServiceClass, System.Net.Sockets.TcpClient)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Network/Association.cs
    startLine: 32
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public Association(DICOMServiceClass serviceClass, TcpClient client)
    parameters:
    - id: serviceClass
      type: EvilDICOM.Network.DICOMServiceClass
    - id: client
      type: System.Net.Sockets.TcpClient
    content.vb: Public Sub New(serviceClass As DICOMServiceClass, client As TcpClient)
  overload: EvilDICOM.Network.Association.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.IsClientConnected
  commentId: P:EvilDICOM.Network.Association.IsClientConnected
  id: IsClientConnected
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: IsClientConnected
  nameWithType: Association.IsClientConnected
  fullName: EvilDICOM.Network.Association.IsClientConnected
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: IsClientConnected
    path: ../EvilDICOM/Network/Association.cs
    startLine: 47
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public bool IsClientConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClientConnected As Boolean
  overload: EvilDICOM.Network.Association.IsClientConnected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.ServiceClass
  commentId: P:EvilDICOM.Network.Association.ServiceClass
  id: ServiceClass
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: ServiceClass
  nameWithType: Association.ServiceClass
  fullName: EvilDICOM.Network.Association.ServiceClass
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ServiceClass
    path: ../EvilDICOM/Network/Association.cs
    startLine: 55
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMServiceClass ServiceClass { get; }
    parameters: []
    return:
      type: EvilDICOM.Network.DICOMServiceClass
    content.vb: Public ReadOnly Property ServiceClass As DICOMServiceClass
  overload: EvilDICOM.Network.Association.ServiceClass*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.PresentationContexts
  commentId: P:EvilDICOM.Network.Association.PresentationContexts
  id: PresentationContexts
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PresentationContexts
  nameWithType: Association.PresentationContexts
  fullName: EvilDICOM.Network.Association.PresentationContexts
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: PresentationContexts
    path: ../EvilDICOM/Network/Association.cs
    startLine: 60
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe agreed upon presentation context of the association\n"
  example: []
  syntax:
    content: public List<PresentationContext> PresentationContexts { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
    content.vb: Public Property PresentationContexts As List(Of PresentationContext)
  overload: EvilDICOM.Network.Association.PresentationContexts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.LastActive
  commentId: P:EvilDICOM.Network.Association.LastActive
  id: LastActive
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: LastActive
  nameWithType: Association.LastActive
  fullName: EvilDICOM.Network.Association.LastActive
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: LastActive
    path: ../EvilDICOM/Network/Association.cs
    startLine: 65
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe last time of communication of this association\n"
  example: []
  syntax:
    content: public DateTime LastActive { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property LastActive As Date
  overload: EvilDICOM.Network.Association.LastActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.UserInfo
  commentId: P:EvilDICOM.Network.Association.UserInfo
  id: UserInfo
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: UserInfo
  nameWithType: Association.UserInfo
  fullName: EvilDICOM.Network.Association.UserInfo
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: UserInfo
    path: ../EvilDICOM/Network/Association.cs
    startLine: 70
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe user info containing maximum PDataTF packet size\n"
  example: []
  syntax:
    content: public UserInfo UserInfo { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.PDUs.Items.UserInfo
    content.vb: Public Property UserInfo As UserInfo
  overload: EvilDICOM.Network.Association.UserInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.PDUProcessor
  commentId: P:EvilDICOM.Network.Association.PDUProcessor
  id: PDUProcessor
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PDUProcessor
  nameWithType: Association.PDUProcessor
  fullName: EvilDICOM.Network.Association.PDUProcessor
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: PDUProcessor
    path: ../EvilDICOM/Network/Association.cs
    startLine: 73
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public PDUProcessor PDUProcessor { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Processors.PDUProcessor
    content.vb: Public Property PDUProcessor As PDUProcessor
  overload: EvilDICOM.Network.Association.PDUProcessor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.PDataProcessor
  commentId: P:EvilDICOM.Network.Association.PDataProcessor
  id: PDataProcessor
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: PDataProcessor
  nameWithType: Association.PDataProcessor
  fullName: EvilDICOM.Network.Association.PDataProcessor
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: PDataProcessor
    path: ../EvilDICOM/Network/Association.cs
    startLine: 74
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public PDataProcessor PDataProcessor { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Processors.PDataProcessor
    content.vb: Public Property PDataProcessor As PDataProcessor
  overload: EvilDICOM.Network.Association.PDataProcessor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Logger
  commentId: P:EvilDICOM.Network.Association.Logger
  id: Logger
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Association.Logger
  fullName: EvilDICOM.Network.Association.Logger
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Logger
    path: ../EvilDICOM/Network/Association.cs
    startLine: 76
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: EvilDICOM.Network.Association.Logger*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.OutboundMessages
  commentId: P:EvilDICOM.Network.Association.OutboundMessages
  id: OutboundMessages
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: OutboundMessages
  nameWithType: Association.OutboundMessages
  fullName: EvilDICOM.Network.Association.OutboundMessages
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: OutboundMessages
    path: ../EvilDICOM/Network/Association.cs
    startLine: 81
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public ConcurrentQueue<AbstractDIMSEBase> OutboundMessages { get; set; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}
    content.vb: Public Property OutboundMessages As ConcurrentQueue(Of AbstractDIMSEBase)
  overload: EvilDICOM.Network.Association.OutboundMessages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Stream
  commentId: P:EvilDICOM.Network.Association.Stream
  id: Stream
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Stream
  nameWithType: Association.Stream
  fullName: EvilDICOM.Network.Association.Stream
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Stream
    path: ../EvilDICOM/Network/Association.cs
    startLine: 82
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public BufferedStream Stream { get; }
    parameters: []
    return:
      type: System.IO.BufferedStream
    content.vb: Public ReadOnly Property Stream As BufferedStream
  overload: EvilDICOM.Network.Association.Stream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.Reader
  commentId: P:EvilDICOM.Network.Association.Reader
  id: Reader
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Reader
  nameWithType: Association.Reader
  fullName: EvilDICOM.Network.Association.Reader
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Reader
    path: ../EvilDICOM/Network/Association.cs
    startLine: 83
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public NetworkBinaryReader Reader { get; }
    parameters: []
    return:
      type: EvilDICOM.Network.Readers.NetworkBinaryReader
    content.vb: Public ReadOnly Property Reader As NetworkBinaryReader
  overload: EvilDICOM.Network.Association.Reader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.State
  commentId: P:EvilDICOM.Network.Association.State
  id: State
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Association.State
  fullName: EvilDICOM.Network.Association.State
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: State
    path: ../EvilDICOM/Network/Association.cs
    startLine: 85
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public NetworkState State { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Enums.NetworkState
    content.vb: Public Property State As NetworkState
  overload: EvilDICOM.Network.Association.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Listen(System.Nullable{System.TimeSpan})
  commentId: M:EvilDICOM.Network.Association.Listen(System.Nullable{System.TimeSpan})
  id: Listen(System.Nullable{System.TimeSpan})
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Listen(Nullable<TimeSpan>)
  nameWithType: Association.Listen(Nullable<TimeSpan>)
  fullName: EvilDICOM.Network.Association.Listen(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Listen
    path: ../EvilDICOM/Network/Association.cs
    startLine: 95
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Listen(TimeSpan? maxWaitTime = default(TimeSpan? ))
    parameters:
    - id: maxWaitTime
      type: System.Nullable{System.TimeSpan}
    content.vb: Public Sub Listen(maxWaitTime As TimeSpan? = Nothing)
  overload: EvilDICOM.Network.Association.Listen*
  nameWithType.vb: Association.Listen(Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.Association.Listen(System.Nullable(Of System.TimeSpan))
  name.vb: Listen(Nullable(Of TimeSpan))
- uid: EvilDICOM.Network.Association.Read(System.Double)
  commentId: M:EvilDICOM.Network.Association.Read(System.Double)
  id: Read(System.Double)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Read(Double)
  nameWithType: Association.Read(Double)
  fullName: EvilDICOM.Network.Association.Read(System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Read
    path: ../EvilDICOM/Network/Association.cs
    startLine: 178
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public IMessage Read(double msToWait)
    parameters:
    - id: msToWait
      type: System.Double
    return:
      type: EvilDICOM.Network.Interfaces.IMessage
    content.vb: Public Function Read(msToWait As Double) As IMessage
  overload: EvilDICOM.Network.Association.Read*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  commentId: M:EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  id: Process(EvilDICOM.Network.Interfaces.IMessage)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Process(IMessage)
  nameWithType: Association.Process(IMessage)
  fullName: EvilDICOM.Network.Association.Process(EvilDICOM.Network.Interfaces.IMessage)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Process
    path: ../EvilDICOM/Network/Association.cs
    startLine: 196
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Process(IMessage message)
    parameters:
    - id: message
      type: EvilDICOM.Network.Interfaces.IMessage
    content.vb: Public Sub Process(message As IMessage)
  overload: EvilDICOM.Network.Association.Process*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Release
  commentId: M:EvilDICOM.Network.Association.Release
  id: Release
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: Association.Release()
  fullName: EvilDICOM.Network.Association.Release()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Release
    path: ../EvilDICOM/Network/Association.cs
    startLine: 213
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Release()
    content.vb: Public Sub Release
  overload: EvilDICOM.Network.Association.Release*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.RequestAbort
  commentId: M:EvilDICOM.Network.Association.RequestAbort
  id: RequestAbort
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: RequestAbort()
  nameWithType: Association.RequestAbort()
  fullName: EvilDICOM.Network.Association.RequestAbort()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: RequestAbort
    path: ../EvilDICOM/Network/Association.cs
    startLine: 227
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void RequestAbort()
    content.vb: Public Sub RequestAbort
  overload: EvilDICOM.Network.Association.RequestAbort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.ToString
  commentId: M:EvilDICOM.Network.Association.ToString
  id: ToString
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Association.ToString()
  fullName: EvilDICOM.Network.Association.ToString()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ToString
    path: ../EvilDICOM/Network/Association.cs
    startLine: 232
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EvilDICOM.Network.Association.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  commentId: M:EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  id: Cancel(EvilDICOM.Network.DIMSE.CCancel)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Cancel(CCancel)
  nameWithType: Association.Cancel(CCancel)
  fullName: EvilDICOM.Network.Association.Cancel(EvilDICOM.Network.DIMSE.CCancel)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Cancel
    path: ../EvilDICOM/Network/Association.cs
    startLine: 237
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void Cancel(CCancel cancel)
    parameters:
    - id: cancel
      type: EvilDICOM.Network.DIMSE.CCancel
    content.vb: Public Sub Cancel(cancel As CCancel)
  overload: EvilDICOM.Network.Association.Cancel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.AeTitle
  commentId: P:EvilDICOM.Network.Association.AeTitle
  id: AeTitle
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: AeTitle
  nameWithType: Association.AeTitle
  fullName: EvilDICOM.Network.Association.AeTitle
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: AeTitle
    path: ../EvilDICOM/Network/Association.cs
    startLine: 248
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe foreign AeTitle\n"
  example: []
  syntax:
    content: public string AeTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AeTitle As String
  overload: EvilDICOM.Network.Association.AeTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.IpAddress
  commentId: P:EvilDICOM.Network.Association.IpAddress
  id: IpAddress
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: IpAddress
  nameWithType: Association.IpAddress
  fullName: EvilDICOM.Network.Association.IpAddress
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: IpAddress
    path: ../EvilDICOM/Network/Association.cs
    startLine: 253
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe ip address of the foreign service class\n"
  example: []
  syntax:
    content: public string IpAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IpAddress As String
  overload: EvilDICOM.Network.Association.IpAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.Port
  commentId: P:EvilDICOM.Network.Association.Port
  id: Port
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: Association.Port
  fullName: EvilDICOM.Network.Association.Port
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Port
    path: ../EvilDICOM/Network/Association.cs
    startLine: 258
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  summary: "\nThe port of the foreign service class\n"
  example: []
  syntax:
    content: public int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Port As Integer
  overload: EvilDICOM.Network.Association.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Association.IdleClock
  commentId: P:EvilDICOM.Network.Association.IdleClock
  id: IdleClock
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: IdleClock
  nameWithType: Association.IdleClock
  fullName: EvilDICOM.Network.Association.IdleClock
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: IdleClock
    path: ../EvilDICOM/Network/Association.cs
    startLine: 260
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public Stopwatch IdleClock { get; }
    parameters: []
    return:
      type: System.Diagnostics.Stopwatch
    content.vb: Public ReadOnly Property IdleClock As Stopwatch
  overload: EvilDICOM.Network.Association.IdleClock*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.Association.SendMessage(System.Byte[])
  commentId: M:EvilDICOM.Network.Association.SendMessage(System.Byte[])
  id: SendMessage(System.Byte[])
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: SendMessage(Byte[])
  nameWithType: Association.SendMessage(Byte[])
  fullName: EvilDICOM.Network.Association.SendMessage(System.Byte[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SendMessage
    path: ../EvilDICOM/Network/Association.cs
    startLine: 266
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(byte[] message)
    parameters:
    - id: message
      type: System.Byte[]
    content.vb: Public Sub SendMessage(message As Byte())
  overload: EvilDICOM.Network.Association.SendMessage*
  nameWithType.vb: Association.SendMessage(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.Association.SendMessage(System.Byte())
  name.vb: SendMessage(Byte())
- uid: EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  commentId: M:EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  id: SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  parent: EvilDICOM.Network.Association
  langs:
  - csharp
  - vb
  name: SendMessage(IPDU)
  nameWithType: Association.SendMessage(IPDU)
  fullName: EvilDICOM.Network.Association.SendMessage(EvilDICOM.Network.Interfaces.IPDU)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Association.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SendMessage
    path: ../EvilDICOM/Network/Association.cs
    startLine: 272
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public void SendMessage(IPDU message)
    parameters:
    - id: message
      type: EvilDICOM.Network.Interfaces.IPDU
    content.vb: Public Sub SendMessage(message As IPDU)
  overload: EvilDICOM.Network.Association.SendMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  parent: EvilDICOM.Network.Extensions.AssociationExtensions
  definition: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  name: GetResponseContexts(IEnumerable<PresentationContext>)
  nameWithType: AssociationExtensions.GetResponseContexts(IEnumerable<PresentationContext>)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(System.Collections.Generic.IEnumerable<EvilDICOM.Network.PDUs.Items.PresentationContext>)
  nameWithType.vb: AssociationExtensions.GetResponseContexts(IEnumerable(Of PresentationContext))
  fullName.vb: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.PDUs.Items.PresentationContext))
  name.vb: GetResponseContexts(IEnumerable(Of PresentationContext))
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  parent: EvilDICOM.Network.Extensions.AssociationExtensions
  definition: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  name: SetFinalContexts(Accept)
  nameWithType: AssociationExtensions.SetFinalContexts(Accept)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  isExternal: true
  name: GetResponseContexts(Association, IEnumerable<PresentationContext>)
  nameWithType: AssociationExtensions.GetResponseContexts(Association, IEnumerable<PresentationContext>)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association, System.Collections.Generic.IEnumerable<EvilDICOM.Network.PDUs.Items.PresentationContext>)
  nameWithType.vb: AssociationExtensions.GetResponseContexts(Association, IEnumerable(Of PresentationContext))
  fullName.vb: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association, System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.PDUs.Items.PresentationContext))
  name.vb: GetResponseContexts(Association, IEnumerable(Of PresentationContext))
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
    name: GetResponseContexts
    nameWithType: AssociationExtensions.GetResponseContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Extensions.AssociationExtensions
  commentId: T:EvilDICOM.Network.Extensions.AssociationExtensions
  parent: EvilDICOM.Network.Extensions
  name: AssociationExtensions
  nameWithType: AssociationExtensions
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  name: SetFinalContexts(Association, Accept)
  nameWithType: AssociationExtensions.SetFinalContexts(Association, Accept)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association, EvilDICOM.Network.PDUs.Accept)
  spec.csharp:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
    name: SetFinalContexts
    nameWithType: AssociationExtensions.SetFinalContexts
    fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Network.PDUs.Accept
    name: Accept
    nameWithType: Accept
    fullName: EvilDICOM.Network.PDUs.Accept
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Extensions
  commentId: N:EvilDICOM.Network.Extensions
  name: EvilDICOM.Network.Extensions
  nameWithType: EvilDICOM.Network.Extensions
  fullName: EvilDICOM.Network.Extensions
- uid: EvilDICOM.Network.Association.#ctor*
  commentId: Overload:EvilDICOM.Network.Association.#ctor
  name: Association
  nameWithType: Association.Association
  fullName: EvilDICOM.Network.Association.Association
- uid: EvilDICOM.Network.DICOMServiceClass
  commentId: T:EvilDICOM.Network.DICOMServiceClass
  parent: EvilDICOM.Network
  name: DICOMServiceClass
  nameWithType: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
- uid: System.Net.Sockets.TcpClient
  commentId: T:System.Net.Sockets.TcpClient
  parent: System.Net.Sockets
  isExternal: true
  name: TcpClient
  nameWithType: TcpClient
  fullName: System.Net.Sockets.TcpClient
- uid: System.Net.Sockets
  commentId: N:System.Net.Sockets
  isExternal: true
  name: System.Net.Sockets
  nameWithType: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: EvilDICOM.Network.Association.IsClientConnected*
  commentId: Overload:EvilDICOM.Network.Association.IsClientConnected
  name: IsClientConnected
  nameWithType: Association.IsClientConnected
  fullName: EvilDICOM.Network.Association.IsClientConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Network.Association.ServiceClass*
  commentId: Overload:EvilDICOM.Network.Association.ServiceClass
  name: ServiceClass
  nameWithType: Association.ServiceClass
  fullName: EvilDICOM.Network.Association.ServiceClass
- uid: EvilDICOM.Network.Association.PresentationContexts*
  commentId: Overload:EvilDICOM.Network.Association.PresentationContexts
  name: PresentationContexts
  nameWithType: Association.PresentationContexts
  fullName: EvilDICOM.Network.Association.PresentationContexts
- uid: System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
  commentId: T:System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PresentationContext>
  nameWithType: List<PresentationContext>
  fullName: System.Collections.Generic.List<EvilDICOM.Network.PDUs.Items.PresentationContext>
  nameWithType.vb: List(Of PresentationContext)
  fullName.vb: System.Collections.Generic.List(Of EvilDICOM.Network.PDUs.Items.PresentationContext)
  name.vb: List(Of PresentationContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Network.Association.LastActive*
  commentId: Overload:EvilDICOM.Network.Association.LastActive
  name: LastActive
  nameWithType: Association.LastActive
  fullName: EvilDICOM.Network.Association.LastActive
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: EvilDICOM.Network.Association.UserInfo*
  commentId: Overload:EvilDICOM.Network.Association.UserInfo
  name: UserInfo
  nameWithType: Association.UserInfo
  fullName: EvilDICOM.Network.Association.UserInfo
- uid: EvilDICOM.Network.PDUs.Items.UserInfo
  commentId: T:EvilDICOM.Network.PDUs.Items.UserInfo
  parent: EvilDICOM.Network.PDUs.Items
  name: UserInfo
  nameWithType: UserInfo
  fullName: EvilDICOM.Network.PDUs.Items.UserInfo
- uid: EvilDICOM.Network.PDUs.Items
  commentId: N:EvilDICOM.Network.PDUs.Items
  name: EvilDICOM.Network.PDUs.Items
  nameWithType: EvilDICOM.Network.PDUs.Items
  fullName: EvilDICOM.Network.PDUs.Items
- uid: EvilDICOM.Network.Association.PDUProcessor*
  commentId: Overload:EvilDICOM.Network.Association.PDUProcessor
  name: PDUProcessor
  nameWithType: Association.PDUProcessor
  fullName: EvilDICOM.Network.Association.PDUProcessor
- uid: EvilDICOM.Network.Processors.PDUProcessor
  commentId: T:EvilDICOM.Network.Processors.PDUProcessor
  parent: EvilDICOM.Network.Processors
  name: PDUProcessor
  nameWithType: PDUProcessor
  fullName: EvilDICOM.Network.Processors.PDUProcessor
- uid: EvilDICOM.Network.Processors
  commentId: N:EvilDICOM.Network.Processors
  name: EvilDICOM.Network.Processors
  nameWithType: EvilDICOM.Network.Processors
  fullName: EvilDICOM.Network.Processors
- uid: EvilDICOM.Network.Association.PDataProcessor*
  commentId: Overload:EvilDICOM.Network.Association.PDataProcessor
  name: PDataProcessor
  nameWithType: Association.PDataProcessor
  fullName: EvilDICOM.Network.Association.PDataProcessor
- uid: EvilDICOM.Network.Processors.PDataProcessor
  commentId: T:EvilDICOM.Network.Processors.PDataProcessor
  parent: EvilDICOM.Network.Processors
  name: PDataProcessor
  nameWithType: PDataProcessor
  fullName: EvilDICOM.Network.Processors.PDataProcessor
- uid: EvilDICOM.Network.Association.Logger*
  commentId: Overload:EvilDICOM.Network.Association.Logger
  name: Logger
  nameWithType: Association.Logger
  fullName: EvilDICOM.Network.Association.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: EvilDICOM.Network.Association.OutboundMessages*
  commentId: Overload:EvilDICOM.Network.Association.OutboundMessages
  name: OutboundMessages
  nameWithType: Association.OutboundMessages
  fullName: EvilDICOM.Network.Association.OutboundMessages
- uid: System.Collections.Concurrent.ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}
  commentId: T:System.Collections.Concurrent.ConcurrentQueue{EvilDICOM.Network.DIMSE.AbstractDIMSEBase}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentQueue`1
  name: ConcurrentQueue<AbstractDIMSEBase>
  nameWithType: ConcurrentQueue<AbstractDIMSEBase>
  fullName: System.Collections.Concurrent.ConcurrentQueue<EvilDICOM.Network.DIMSE.AbstractDIMSEBase>
  nameWithType.vb: ConcurrentQueue(Of AbstractDIMSEBase)
  fullName.vb: System.Collections.Concurrent.ConcurrentQueue(Of EvilDICOM.Network.DIMSE.AbstractDIMSEBase)
  name.vb: ConcurrentQueue(Of AbstractDIMSEBase)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
    name: AbstractDIMSEBase
    nameWithType: AbstractDIMSEBase
    fullName: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
    name: AbstractDIMSEBase
    nameWithType: AbstractDIMSEBase
    fullName: EvilDICOM.Network.DIMSE.AbstractDIMSEBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentQueue`1
  commentId: T:System.Collections.Concurrent.ConcurrentQueue`1
  isExternal: true
  name: ConcurrentQueue<T>
  nameWithType: ConcurrentQueue<T>
  fullName: System.Collections.Concurrent.ConcurrentQueue<T>
  nameWithType.vb: ConcurrentQueue(Of T)
  fullName.vb: System.Collections.Concurrent.ConcurrentQueue(Of T)
  name.vb: ConcurrentQueue(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentQueue`1
    name: ConcurrentQueue
    nameWithType: ConcurrentQueue
    fullName: System.Collections.Concurrent.ConcurrentQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: EvilDICOM.Network.Association.Stream*
  commentId: Overload:EvilDICOM.Network.Association.Stream
  name: Stream
  nameWithType: Association.Stream
  fullName: EvilDICOM.Network.Association.Stream
- uid: System.IO.BufferedStream
  commentId: T:System.IO.BufferedStream
  parent: System.IO
  isExternal: true
  name: BufferedStream
  nameWithType: BufferedStream
  fullName: System.IO.BufferedStream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: EvilDICOM.Network.Association.Reader*
  commentId: Overload:EvilDICOM.Network.Association.Reader
  name: Reader
  nameWithType: Association.Reader
  fullName: EvilDICOM.Network.Association.Reader
- uid: EvilDICOM.Network.Readers.NetworkBinaryReader
  commentId: T:EvilDICOM.Network.Readers.NetworkBinaryReader
  parent: EvilDICOM.Network.Readers
  name: NetworkBinaryReader
  nameWithType: NetworkBinaryReader
  fullName: EvilDICOM.Network.Readers.NetworkBinaryReader
- uid: EvilDICOM.Network.Readers
  commentId: N:EvilDICOM.Network.Readers
  name: EvilDICOM.Network.Readers
  nameWithType: EvilDICOM.Network.Readers
  fullName: EvilDICOM.Network.Readers
- uid: EvilDICOM.Network.Association.State*
  commentId: Overload:EvilDICOM.Network.Association.State
  name: State
  nameWithType: Association.State
  fullName: EvilDICOM.Network.Association.State
- uid: EvilDICOM.Network.Enums.NetworkState
  commentId: T:EvilDICOM.Network.Enums.NetworkState
  parent: EvilDICOM.Network.Enums
  name: NetworkState
  nameWithType: NetworkState
  fullName: EvilDICOM.Network.Enums.NetworkState
- uid: EvilDICOM.Network.Enums
  commentId: N:EvilDICOM.Network.Enums
  name: EvilDICOM.Network.Enums
  nameWithType: EvilDICOM.Network.Enums
  fullName: EvilDICOM.Network.Enums
- uid: EvilDICOM.Network.Association.Listen*
  commentId: Overload:EvilDICOM.Network.Association.Listen
  name: Listen
  nameWithType: Association.Listen
  fullName: EvilDICOM.Network.Association.Listen
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.Read*
  commentId: Overload:EvilDICOM.Network.Association.Read
  name: Read
  nameWithType: Association.Read
  fullName: EvilDICOM.Network.Association.Read
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: EvilDICOM.Network.Interfaces.IMessage
  commentId: T:EvilDICOM.Network.Interfaces.IMessage
  parent: EvilDICOM.Network.Interfaces
  name: IMessage
  nameWithType: IMessage
  fullName: EvilDICOM.Network.Interfaces.IMessage
- uid: EvilDICOM.Network.Interfaces
  commentId: N:EvilDICOM.Network.Interfaces
  name: EvilDICOM.Network.Interfaces
  nameWithType: EvilDICOM.Network.Interfaces
  fullName: EvilDICOM.Network.Interfaces
- uid: EvilDICOM.Network.Association.Process*
  commentId: Overload:EvilDICOM.Network.Association.Process
  name: Process
  nameWithType: Association.Process
  fullName: EvilDICOM.Network.Association.Process
- uid: EvilDICOM.Network.Association.Release*
  commentId: Overload:EvilDICOM.Network.Association.Release
  name: Release
  nameWithType: Association.Release
  fullName: EvilDICOM.Network.Association.Release
- uid: EvilDICOM.Network.Association.RequestAbort*
  commentId: Overload:EvilDICOM.Network.Association.RequestAbort
  name: RequestAbort
  nameWithType: Association.RequestAbort
  fullName: EvilDICOM.Network.Association.RequestAbort
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Association.ToString*
  commentId: Overload:EvilDICOM.Network.Association.ToString
  name: ToString
  nameWithType: Association.ToString
  fullName: EvilDICOM.Network.Association.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Network.Association.Cancel*
  commentId: Overload:EvilDICOM.Network.Association.Cancel
  name: Cancel
  nameWithType: Association.Cancel
  fullName: EvilDICOM.Network.Association.Cancel
- uid: EvilDICOM.Network.DIMSE.CCancel
  commentId: T:EvilDICOM.Network.DIMSE.CCancel
  parent: EvilDICOM.Network.DIMSE
  name: CCancel
  nameWithType: CCancel
  fullName: EvilDICOM.Network.DIMSE.CCancel
- uid: EvilDICOM.Network.DIMSE
  commentId: N:EvilDICOM.Network.DIMSE
  name: EvilDICOM.Network.DIMSE
  nameWithType: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
- uid: EvilDICOM.Network.Association.AeTitle*
  commentId: Overload:EvilDICOM.Network.Association.AeTitle
  name: AeTitle
  nameWithType: Association.AeTitle
  fullName: EvilDICOM.Network.Association.AeTitle
- uid: EvilDICOM.Network.Association.IpAddress*
  commentId: Overload:EvilDICOM.Network.Association.IpAddress
  name: IpAddress
  nameWithType: Association.IpAddress
  fullName: EvilDICOM.Network.Association.IpAddress
- uid: EvilDICOM.Network.Association.Port*
  commentId: Overload:EvilDICOM.Network.Association.Port
  name: Port
  nameWithType: Association.Port
  fullName: EvilDICOM.Network.Association.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: EvilDICOM.Network.Association.IdleClock*
  commentId: Overload:EvilDICOM.Network.Association.IdleClock
  name: IdleClock
  nameWithType: Association.IdleClock
  fullName: EvilDICOM.Network.Association.IdleClock
- uid: System.Diagnostics.Stopwatch
  commentId: T:System.Diagnostics.Stopwatch
  parent: System.Diagnostics
  isExternal: true
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: System.Diagnostics.Stopwatch
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: EvilDICOM.Network.Association.SendMessage*
  commentId: Overload:EvilDICOM.Network.Association.SendMessage
  name: SendMessage
  nameWithType: Association.SendMessage
  fullName: EvilDICOM.Network.Association.SendMessage
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Network.Interfaces.IPDU
  commentId: T:EvilDICOM.Network.Interfaces.IPDU
  parent: EvilDICOM.Network.Interfaces
  name: IPDU
  nameWithType: IPDU
  fullName: EvilDICOM.Network.Interfaces.IPDU
