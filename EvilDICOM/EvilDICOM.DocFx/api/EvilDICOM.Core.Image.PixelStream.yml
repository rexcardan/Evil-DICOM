### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Image.PixelStream
  commentId: T:EvilDICOM.Core.Image.PixelStream
  id: PixelStream
  parent: EvilDICOM.Core.Image
  children:
  - EvilDICOM.Core.Image.PixelStream.#ctor(System.Collections.Generic.IEnumerable{System.Byte})
  - EvilDICOM.Core.Image.PixelStream.GetValues16(System.Boolean)
  - EvilDICOM.Core.Image.PixelStream.GetValues32(System.Boolean)
  - EvilDICOM.Core.Image.PixelStream.GetValues64(System.Boolean)
  - EvilDICOM.Core.Image.PixelStream.SetValues16(System.Int32[],System.Boolean)
  - EvilDICOM.Core.Image.PixelStream.SetValues32(System.Int32[],System.Boolean)
  - EvilDICOM.Core.Image.PixelStream.SetValues32(System.UInt16[],System.Boolean)
  - EvilDICOM.Core.Image.PixelStream.SetValues8(System.Int32[])
  langs:
  - csharp
  - vb
  name: PixelStream
  nameWithType: PixelStream
  fullName: EvilDICOM.Core.Image.PixelStream
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: PixelStream
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 7
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  syntax:
    content: 'public class PixelStream : MemoryStream, IAsyncDisposable, IDisposable'
    content.vb: >-
      Public Class PixelStream
          Inherits MemoryStream
          Implements IAsyncDisposable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  - System.IO.MemoryStream
  implements:
  - System.IAsyncDisposable
  - System.IDisposable
  inheritedMembers:
  - System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.MemoryStream.Dispose(System.Boolean)
  - System.IO.MemoryStream.EndRead(System.IAsyncResult)
  - System.IO.MemoryStream.EndWrite(System.IAsyncResult)
  - System.IO.MemoryStream.Flush
  - System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.MemoryStream.GetBuffer
  - System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.MemoryStream.Read(System.Span{System.Byte})
  - System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  - System.IO.MemoryStream.ReadByte
  - System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.MemoryStream.SetLength(System.Int64)
  - System.IO.MemoryStream.ToArray
  - System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)
  - System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})
  - System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  - System.IO.MemoryStream.WriteByte(System.Byte)
  - System.IO.MemoryStream.WriteTo(System.IO.Stream)
  - System.IO.MemoryStream.CanRead
  - System.IO.MemoryStream.CanSeek
  - System.IO.MemoryStream.CanWrite
  - System.IO.MemoryStream.Capacity
  - System.IO.MemoryStream.Length
  - System.IO.MemoryStream.Position
  - System.IO.Stream.Null
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.DisposeAsync
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.WriteTimeout
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.Image.PixelStream.#ctor(System.Collections.Generic.IEnumerable{System.Byte})
  commentId: M:EvilDICOM.Core.Image.PixelStream.#ctor(System.Collections.Generic.IEnumerable{System.Byte})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Byte})'
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: PixelStream(IEnumerable<Byte>)
  nameWithType: PixelStream.PixelStream(IEnumerable<Byte>)
  fullName: EvilDICOM.Core.Image.PixelStream.PixelStream(System.Collections.Generic.IEnumerable<System.Byte>)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  syntax:
    content: public PixelStream(IEnumerable<byte> bytes)
    parameters:
    - id: bytes
      type: System.Collections.Generic.IEnumerable{System.Byte}
    content.vb: Public Sub New(bytes As IEnumerable(Of Byte))
  overload: EvilDICOM.Core.Image.PixelStream.#ctor*
  nameWithType.vb: PixelStream.PixelStream(IEnumerable(Of Byte))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Image.PixelStream.PixelStream(System.Collections.Generic.IEnumerable(Of System.Byte))
  name.vb: PixelStream(IEnumerable(Of Byte))
- uid: EvilDICOM.Core.Image.PixelStream.GetValues64(System.Boolean)
  commentId: M:EvilDICOM.Core.Image.PixelStream.GetValues64(System.Boolean)
  id: GetValues64(System.Boolean)
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: GetValues64(Boolean)
  nameWithType: PixelStream.GetValues64(Boolean)
  fullName: EvilDICOM.Core.Image.PixelStream.GetValues64(System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetValues64
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  summary: "\nConverts the byte array to 64 bit integer array\n"
  example: []
  syntax:
    content: public long[] GetValues64(bool isDataLittleEndian = true)
    parameters:
    - id: isDataLittleEndian
      type: System.Boolean
    return:
      type: System.Int64[]
      description: ''
    content.vb: Public Function GetValues64(isDataLittleEndian As Boolean = True) As Long()
  overload: EvilDICOM.Core.Image.PixelStream.GetValues64*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Image.PixelStream.SetValues8(System.Int32[])
  commentId: M:EvilDICOM.Core.Image.PixelStream.SetValues8(System.Int32[])
  id: SetValues8(System.Int32[])
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: SetValues8(Int32[])
  nameWithType: PixelStream.SetValues8(Int32[])
  fullName: EvilDICOM.Core.Image.PixelStream.SetValues8(System.Int32[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SetValues8
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 30
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  syntax:
    content: public void SetValues8(int[] pixels)
    parameters:
    - id: pixels
      type: System.Int32[]
    content.vb: Public Sub SetValues8(pixels As Integer())
  overload: EvilDICOM.Core.Image.PixelStream.SetValues8*
  nameWithType.vb: PixelStream.SetValues8(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Image.PixelStream.SetValues8(System.Int32())
  name.vb: SetValues8(Int32())
- uid: EvilDICOM.Core.Image.PixelStream.GetValues32(System.Boolean)
  commentId: M:EvilDICOM.Core.Image.PixelStream.GetValues32(System.Boolean)
  id: GetValues32(System.Boolean)
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: GetValues32(Boolean)
  nameWithType: PixelStream.GetValues32(Boolean)
  fullName: EvilDICOM.Core.Image.PixelStream.GetValues32(System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetValues32
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 45
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  summary: "\nConverts the byte array to 32 bit integer array\n"
  example: []
  syntax:
    content: public int[] GetValues32(bool isDataLittleEndian = true)
    parameters:
    - id: isDataLittleEndian
      type: System.Boolean
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public Function GetValues32(isDataLittleEndian As Boolean = True) As Integer()
  overload: EvilDICOM.Core.Image.PixelStream.GetValues32*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Image.PixelStream.SetValues32(System.Int32[],System.Boolean)
  commentId: M:EvilDICOM.Core.Image.PixelStream.SetValues32(System.Int32[],System.Boolean)
  id: SetValues32(System.Int32[],System.Boolean)
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: SetValues32(Int32[], Boolean)
  nameWithType: PixelStream.SetValues32(Int32[], Boolean)
  fullName: EvilDICOM.Core.Image.PixelStream.SetValues32(System.Int32[], System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SetValues32
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 64
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  summary: "\nConverts the integer pixels into bytes and sets the pixel data\n"
  example: []
  syntax:
    content: public void SetValues32(int[] pixels, bool isDataLittleEndian = true)
    parameters:
    - id: pixels
      type: System.Int32[]
    - id: isDataLittleEndian
      type: System.Boolean
    content.vb: Public Sub SetValues32(pixels As Integer(), isDataLittleEndian As Boolean = True)
  overload: EvilDICOM.Core.Image.PixelStream.SetValues32*
  nameWithType.vb: PixelStream.SetValues32(Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Image.PixelStream.SetValues32(System.Int32(), System.Boolean)
  name.vb: SetValues32(Int32(), Boolean)
- uid: EvilDICOM.Core.Image.PixelStream.SetValues32(System.UInt16[],System.Boolean)
  commentId: M:EvilDICOM.Core.Image.PixelStream.SetValues32(System.UInt16[],System.Boolean)
  id: SetValues32(System.UInt16[],System.Boolean)
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: SetValues32(UInt16[], Boolean)
  nameWithType: PixelStream.SetValues32(UInt16[], Boolean)
  fullName: EvilDICOM.Core.Image.PixelStream.SetValues32(System.UInt16[], System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SetValues32
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 80
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  summary: "\nConverts the integer pixels into bytes and sets the pixel data\n"
  example: []
  syntax:
    content: public void SetValues32(ushort[] pixels, bool isDataLittleEndian = true)
    parameters:
    - id: pixels
      type: System.UInt16[]
    - id: isDataLittleEndian
      type: System.Boolean
    content.vb: Public Sub SetValues32(pixels As UShort(), isDataLittleEndian As Boolean = True)
  overload: EvilDICOM.Core.Image.PixelStream.SetValues32*
  nameWithType.vb: PixelStream.SetValues32(UInt16(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Image.PixelStream.SetValues32(System.UInt16(), System.Boolean)
  name.vb: SetValues32(UInt16(), Boolean)
- uid: EvilDICOM.Core.Image.PixelStream.SetValues16(System.Int32[],System.Boolean)
  commentId: M:EvilDICOM.Core.Image.PixelStream.SetValues16(System.Int32[],System.Boolean)
  id: SetValues16(System.Int32[],System.Boolean)
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: SetValues16(Int32[], Boolean)
  nameWithType: PixelStream.SetValues16(Int32[], Boolean)
  fullName: EvilDICOM.Core.Image.PixelStream.SetValues16(System.Int32[], System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SetValues16
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 95
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  summary: "\nConverts the integer pixels into bytes and sets the pixel data\n"
  example: []
  syntax:
    content: public void SetValues16(int[] pixels, bool isDataLittleEndian = true)
    parameters:
    - id: pixels
      type: System.Int32[]
    - id: isDataLittleEndian
      type: System.Boolean
    content.vb: Public Sub SetValues16(pixels As Integer(), isDataLittleEndian As Boolean = True)
  overload: EvilDICOM.Core.Image.PixelStream.SetValues16*
  nameWithType.vb: PixelStream.SetValues16(Int32(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Image.PixelStream.SetValues16(System.Int32(), System.Boolean)
  name.vb: SetValues16(Int32(), Boolean)
- uid: EvilDICOM.Core.Image.PixelStream.GetValues16(System.Boolean)
  commentId: M:EvilDICOM.Core.Image.PixelStream.GetValues16(System.Boolean)
  id: GetValues16(System.Boolean)
  parent: EvilDICOM.Core.Image.PixelStream
  langs:
  - csharp
  - vb
  name: GetValues16(Boolean)
  nameWithType: PixelStream.GetValues16(Boolean)
  fullName: EvilDICOM.Core.Image.PixelStream.GetValues16(System.Boolean)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Image/PixelStream.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetValues16
    path: ../EvilDICOM/Core/Image/PixelStream.cs
    startLine: 111
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Image
  summary: "\nConverts the byte array to 16 bit integer array\n"
  example: []
  syntax:
    content: public short[] GetValues16(bool isDataLittleEndian = true)
    parameters:
    - id: isDataLittleEndian
      type: System.Boolean
    return:
      type: System.Int16[]
      description: ''
    content.vb: Public Function GetValues16(isDataLittleEndian As Boolean = True) As Short()
  overload: EvilDICOM.Core.Image.PixelStream.GetValues16*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Core.Image
  commentId: N:EvilDICOM.Core.Image
  name: EvilDICOM.Core.Image
  nameWithType: EvilDICOM.Core.Image
  fullName: EvilDICOM.Core.Image
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.MemoryStream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: MemoryStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.MemoryStream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: MemoryStream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName.vb: System.IO.MemoryStream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: MemoryStream.BeginRead
    fullName: System.IO.MemoryStream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: MemoryStream.BeginRead
    fullName: System.IO.MemoryStream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.MemoryStream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: MemoryStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.MemoryStream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: MemoryStream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName.vb: System.IO.MemoryStream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: MemoryStream.BeginWrite
    fullName: System.IO.MemoryStream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: MemoryStream.BeginWrite
    fullName: System.IO.MemoryStream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)
  commentId: M:System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.MemoryStream
  isExternal: true
  name: CopyTo(Stream, Int32)
  nameWithType: MemoryStream.CopyTo(Stream, Int32)
  fullName: System.IO.MemoryStream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: MemoryStream.CopyTo
    fullName: System.IO.MemoryStream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: MemoryStream.CopyTo
    fullName: System.IO.MemoryStream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: CopyToAsync(Stream, Int32, CancellationToken)
  nameWithType: MemoryStream.CopyToAsync(Stream, Int32, CancellationToken)
  fullName: System.IO.MemoryStream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: MemoryStream.CopyToAsync
    fullName: System.IO.MemoryStream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: MemoryStream.CopyToAsync
    fullName: System.IO.MemoryStream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Dispose(System.Boolean)
  commentId: M:System.IO.MemoryStream.Dispose(System.Boolean)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: MemoryStream.Dispose(Boolean)
  fullName: System.IO.MemoryStream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.MemoryStream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: MemoryStream.Dispose
    fullName: System.IO.MemoryStream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: MemoryStream.Dispose
    fullName: System.IO.MemoryStream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.MemoryStream.EndRead(System.IAsyncResult)
  parent: System.IO.MemoryStream
  isExternal: true
  name: EndRead(IAsyncResult)
  nameWithType: MemoryStream.EndRead(IAsyncResult)
  fullName: System.IO.MemoryStream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.MemoryStream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: MemoryStream.EndRead
    fullName: System.IO.MemoryStream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: MemoryStream.EndRead
    fullName: System.IO.MemoryStream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.MemoryStream.EndWrite(System.IAsyncResult)
  parent: System.IO.MemoryStream
  isExternal: true
  name: EndWrite(IAsyncResult)
  nameWithType: MemoryStream.EndWrite(IAsyncResult)
  fullName: System.IO.MemoryStream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.MemoryStream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: MemoryStream.EndWrite
    fullName: System.IO.MemoryStream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: MemoryStream.EndWrite
    fullName: System.IO.MemoryStream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Flush
  commentId: M:System.IO.MemoryStream.Flush
  parent: System.IO.MemoryStream
  isExternal: true
  name: Flush()
  nameWithType: MemoryStream.Flush()
  fullName: System.IO.MemoryStream.Flush()
  spec.csharp:
  - uid: System.IO.MemoryStream.Flush
    name: Flush
    nameWithType: MemoryStream.Flush
    fullName: System.IO.MemoryStream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Flush
    name: Flush
    nameWithType: MemoryStream.Flush
    fullName: System.IO.MemoryStream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: FlushAsync(CancellationToken)
  nameWithType: MemoryStream.FlushAsync(CancellationToken)
  fullName: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    nameWithType: MemoryStream.FlushAsync
    fullName: System.IO.MemoryStream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    nameWithType: MemoryStream.FlushAsync
    fullName: System.IO.MemoryStream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.GetBuffer
  commentId: M:System.IO.MemoryStream.GetBuffer
  parent: System.IO.MemoryStream
  isExternal: true
  name: GetBuffer()
  nameWithType: MemoryStream.GetBuffer()
  fullName: System.IO.MemoryStream.GetBuffer()
  spec.csharp:
  - uid: System.IO.MemoryStream.GetBuffer
    name: GetBuffer
    nameWithType: MemoryStream.GetBuffer
    fullName: System.IO.MemoryStream.GetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.GetBuffer
    name: GetBuffer
    nameWithType: MemoryStream.GetBuffer
    fullName: System.IO.MemoryStream.GetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  nameWithType: MemoryStream.Read(Byte[], Int32, Int32)
  fullName: System.IO.MemoryStream.Read(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: MemoryStream.Read(Byte(), Int32, Int32)
  fullName.vb: System.IO.MemoryStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: MemoryStream.Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: MemoryStream.Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Read(System.Span{System.Byte})
  commentId: M:System.IO.MemoryStream.Read(System.Span{System.Byte})
  parent: System.IO.MemoryStream
  isExternal: true
  name: Read(Span<Byte>)
  nameWithType: MemoryStream.Read(Span<Byte>)
  fullName: System.IO.MemoryStream.Read(System.Span<System.Byte>)
  nameWithType.vb: MemoryStream.Read(Span(Of Byte))
  fullName.vb: System.IO.MemoryStream.Read(System.Span(Of System.Byte))
  name.vb: Read(Span(Of Byte))
  spec.csharp:
  - uid: System.IO.MemoryStream.Read(System.Span{System.Byte})
    name: Read
    nameWithType: MemoryStream.Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Span`1
    name: Span
    nameWithType: Span
    fullName: System.Span
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Read(System.Span{System.Byte})
    name: Read
    nameWithType: MemoryStream.Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Span`1
    name: Span
    nameWithType: Span
    fullName: System.Span
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: MemoryStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.MemoryStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: MemoryStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullName.vb: System.IO.MemoryStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: MemoryStream.ReadAsync
    fullName: System.IO.MemoryStream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: MemoryStream.ReadAsync
    fullName: System.IO.MemoryStream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: ReadAsync(Memory<Byte>, CancellationToken)
  nameWithType: MemoryStream.ReadAsync(Memory<Byte>, CancellationToken)
  fullName: System.IO.MemoryStream.ReadAsync(System.Memory<System.Byte>, System.Threading.CancellationToken)
  nameWithType.vb: MemoryStream.ReadAsync(Memory(Of Byte), CancellationToken)
  fullName.vb: System.IO.MemoryStream.ReadAsync(System.Memory(Of System.Byte), System.Threading.CancellationToken)
  name.vb: ReadAsync(Memory(Of Byte), CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: MemoryStream.ReadAsync
    fullName: System.IO.MemoryStream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Memory`1
    name: Memory
    nameWithType: Memory
    fullName: System.Memory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: MemoryStream.ReadAsync
    fullName: System.IO.MemoryStream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Memory`1
    name: Memory
    nameWithType: Memory
    fullName: System.Memory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.ReadByte
  commentId: M:System.IO.MemoryStream.ReadByte
  parent: System.IO.MemoryStream
  isExternal: true
  name: ReadByte()
  nameWithType: MemoryStream.ReadByte()
  fullName: System.IO.MemoryStream.ReadByte()
  spec.csharp:
  - uid: System.IO.MemoryStream.ReadByte
    name: ReadByte
    nameWithType: MemoryStream.ReadByte
    fullName: System.IO.MemoryStream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ReadByte
    name: ReadByte
    nameWithType: MemoryStream.ReadByte
    fullName: System.IO.MemoryStream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  nameWithType: MemoryStream.Seek(Int64, SeekOrigin)
  fullName: System.IO.MemoryStream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: MemoryStream.Seek
    fullName: System.IO.MemoryStream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: MemoryStream.Seek
    fullName: System.IO.MemoryStream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.SetLength(System.Int64)
  commentId: M:System.IO.MemoryStream.SetLength(System.Int64)
  parent: System.IO.MemoryStream
  isExternal: true
  name: SetLength(Int64)
  nameWithType: MemoryStream.SetLength(Int64)
  fullName: System.IO.MemoryStream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.MemoryStream.SetLength(System.Int64)
    name: SetLength
    nameWithType: MemoryStream.SetLength
    fullName: System.IO.MemoryStream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.SetLength(System.Int64)
    name: SetLength
    nameWithType: MemoryStream.SetLength
    fullName: System.IO.MemoryStream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.ToArray
  commentId: M:System.IO.MemoryStream.ToArray
  parent: System.IO.MemoryStream
  isExternal: true
  name: ToArray()
  nameWithType: MemoryStream.ToArray()
  fullName: System.IO.MemoryStream.ToArray()
  spec.csharp:
  - uid: System.IO.MemoryStream.ToArray
    name: ToArray
    nameWithType: MemoryStream.ToArray
    fullName: System.IO.MemoryStream.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ToArray
    name: ToArray
    nameWithType: MemoryStream.ToArray
    fullName: System.IO.MemoryStream.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)
  commentId: M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)
  parent: System.IO.MemoryStream
  isExternal: true
  name: TryGetBuffer(ArraySegment<Byte>)
  nameWithType: MemoryStream.TryGetBuffer(ArraySegment<Byte>)
  fullName: System.IO.MemoryStream.TryGetBuffer(System.ArraySegment<System.Byte>)
  nameWithType.vb: MemoryStream.TryGetBuffer(ArraySegment(Of Byte))
  fullName.vb: System.IO.MemoryStream.TryGetBuffer(System.ArraySegment(Of System.Byte))
  name.vb: TryGetBuffer(ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)
    name: TryGetBuffer
    nameWithType: MemoryStream.TryGetBuffer
    fullName: System.IO.MemoryStream.TryGetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)
    name: TryGetBuffer
    nameWithType: MemoryStream.TryGetBuffer
    fullName: System.IO.MemoryStream.TryGetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  nameWithType: MemoryStream.Write(Byte[], Int32, Int32)
  fullName: System.IO.MemoryStream.Write(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: MemoryStream.Write(Byte(), Int32, Int32)
  fullName.vb: System.IO.MemoryStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: MemoryStream.Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: MemoryStream.Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})
  commentId: M:System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})
  parent: System.IO.MemoryStream
  isExternal: true
  name: Write(ReadOnlySpan<Byte>)
  nameWithType: MemoryStream.Write(ReadOnlySpan<Byte>)
  fullName: System.IO.MemoryStream.Write(System.ReadOnlySpan<System.Byte>)
  nameWithType.vb: MemoryStream.Write(ReadOnlySpan(Of Byte))
  fullName.vb: System.IO.MemoryStream.Write(System.ReadOnlySpan(Of System.Byte))
  name.vb: Write(ReadOnlySpan(Of Byte))
  spec.csharp:
  - uid: System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})
    name: Write
    nameWithType: MemoryStream.Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    nameWithType: ReadOnlySpan
    fullName: System.ReadOnlySpan
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})
    name: Write
    nameWithType: MemoryStream.Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    nameWithType: ReadOnlySpan
    fullName: System.ReadOnlySpan
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: MemoryStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.MemoryStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: MemoryStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullName.vb: System.IO.MemoryStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: MemoryStream.WriteAsync
    fullName: System.IO.MemoryStream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: MemoryStream.WriteAsync
    fullName: System.IO.MemoryStream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteAsync(ReadOnlyMemory<Byte>, CancellationToken)
  nameWithType: MemoryStream.WriteAsync(ReadOnlyMemory<Byte>, CancellationToken)
  fullName: System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory<System.Byte>, System.Threading.CancellationToken)
  nameWithType.vb: MemoryStream.WriteAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName.vb: System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory(Of System.Byte), System.Threading.CancellationToken)
  name.vb: WriteAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: MemoryStream.WriteAsync
    fullName: System.IO.MemoryStream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    nameWithType: ReadOnlyMemory
    fullName: System.ReadOnlyMemory
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: MemoryStream.WriteAsync
    fullName: System.IO.MemoryStream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    nameWithType: ReadOnlyMemory
    fullName: System.ReadOnlyMemory
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.WriteByte(System.Byte)
  commentId: M:System.IO.MemoryStream.WriteByte(System.Byte)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteByte(Byte)
  nameWithType: MemoryStream.WriteByte(Byte)
  fullName: System.IO.MemoryStream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: MemoryStream.WriteByte
    fullName: System.IO.MemoryStream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: MemoryStream.WriteByte
    fullName: System.IO.MemoryStream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
  commentId: M:System.IO.MemoryStream.WriteTo(System.IO.Stream)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteTo(Stream)
  nameWithType: MemoryStream.WriteTo(Stream)
  fullName: System.IO.MemoryStream.WriteTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
    name: WriteTo
    nameWithType: MemoryStream.WriteTo
    fullName: System.IO.MemoryStream.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
    name: WriteTo
    nameWithType: MemoryStream.WriteTo
    fullName: System.IO.MemoryStream.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.CanRead
  commentId: P:System.IO.MemoryStream.CanRead
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanRead
  nameWithType: MemoryStream.CanRead
  fullName: System.IO.MemoryStream.CanRead
- uid: System.IO.MemoryStream.CanSeek
  commentId: P:System.IO.MemoryStream.CanSeek
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanSeek
  nameWithType: MemoryStream.CanSeek
  fullName: System.IO.MemoryStream.CanSeek
- uid: System.IO.MemoryStream.CanWrite
  commentId: P:System.IO.MemoryStream.CanWrite
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanWrite
  nameWithType: MemoryStream.CanWrite
  fullName: System.IO.MemoryStream.CanWrite
- uid: System.IO.MemoryStream.Capacity
  commentId: P:System.IO.MemoryStream.Capacity
  parent: System.IO.MemoryStream
  isExternal: true
  name: Capacity
  nameWithType: MemoryStream.Capacity
  fullName: System.IO.MemoryStream.Capacity
- uid: System.IO.MemoryStream.Length
  commentId: P:System.IO.MemoryStream.Length
  parent: System.IO.MemoryStream
  isExternal: true
  name: Length
  nameWithType: MemoryStream.Length
  fullName: System.IO.MemoryStream.Length
- uid: System.IO.MemoryStream.Position
  commentId: P:System.IO.MemoryStream.Position
  parent: System.IO.MemoryStream
  isExternal: true
  name: Position
  nameWithType: MemoryStream.Position
  fullName: System.IO.MemoryStream.Position
- uid: System.IO.Stream.Null
  commentId: F:System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  name: "Null"
  nameWithType: Stream.Null
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.Close
  commentId: M:System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  nameWithType: Stream.Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32)
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: CopyToAsync
    nameWithType: Stream.CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CreateWaitHandle
  commentId: M:System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Dispose
  commentId: M:System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.DisposeAsync
  commentId: M:System.IO.Stream.DisposeAsync
  parent: System.IO.Stream
  isExternal: true
  name: DisposeAsync()
  nameWithType: Stream.DisposeAsync()
  fullName: System.IO.Stream.DisposeAsync()
  spec.csharp:
  - uid: System.IO.Stream.DisposeAsync
    name: DisposeAsync
    nameWithType: Stream.DisposeAsync
    fullName: System.IO.Stream.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.DisposeAsync
    name: DisposeAsync
    nameWithType: Stream.DisposeAsync
    fullName: System.IO.Stream.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.FlushAsync
  commentId: M:System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    nameWithType: Stream.FlushAsync
    fullName: System.IO.Stream.FlushAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ObjectInvariant
  commentId: M:System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: true
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: System.IO.Stream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32)
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: Stream.ReadAsync
    fullName: System.IO.Stream.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32)
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)
  fullName.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    nameWithType: Stream.WriteAsync
    fullName: System.IO.Stream.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: System.IO.Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: EvilDICOM.Core.Image.PixelStream.#ctor*
  commentId: Overload:EvilDICOM.Core.Image.PixelStream.#ctor
  name: PixelStream
  nameWithType: PixelStream.PixelStream
  fullName: EvilDICOM.Core.Image.PixelStream.PixelStream
- uid: System.Collections.Generic.IEnumerable{System.Byte}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte>
  nameWithType: IEnumerable<Byte>
  fullName: System.Collections.Generic.IEnumerable<System.Byte>
  nameWithType.vb: IEnumerable(Of Byte)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Byte)
  name.vb: IEnumerable(Of Byte)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Core.Image.PixelStream.GetValues64*
  commentId: Overload:EvilDICOM.Core.Image.PixelStream.GetValues64
  name: GetValues64
  nameWithType: PixelStream.GetValues64
  fullName: EvilDICOM.Core.Image.PixelStream.GetValues64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64[]
  isExternal: true
  name: Int64[]
  nameWithType: Int64[]
  fullName: System.Int64[]
  nameWithType.vb: Int64()
  fullName.vb: System.Int64()
  name.vb: Int64()
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.Image.PixelStream.SetValues8*
  commentId: Overload:EvilDICOM.Core.Image.PixelStream.SetValues8
  name: SetValues8
  nameWithType: PixelStream.SetValues8
  fullName: EvilDICOM.Core.Image.PixelStream.SetValues8
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.Image.PixelStream.GetValues32*
  commentId: Overload:EvilDICOM.Core.Image.PixelStream.GetValues32
  name: GetValues32
  nameWithType: PixelStream.GetValues32
  fullName: EvilDICOM.Core.Image.PixelStream.GetValues32
- uid: EvilDICOM.Core.Image.PixelStream.SetValues32*
  commentId: Overload:EvilDICOM.Core.Image.PixelStream.SetValues32
  name: SetValues32
  nameWithType: PixelStream.SetValues32
  fullName: EvilDICOM.Core.Image.PixelStream.SetValues32
- uid: System.UInt16[]
  isExternal: true
  name: UInt16[]
  nameWithType: UInt16[]
  fullName: System.UInt16[]
  nameWithType.vb: UInt16()
  fullName.vb: System.UInt16()
  name.vb: UInt16()
  spec.csharp:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.Image.PixelStream.SetValues16*
  commentId: Overload:EvilDICOM.Core.Image.PixelStream.SetValues16
  name: SetValues16
  nameWithType: PixelStream.SetValues16
  fullName: EvilDICOM.Core.Image.PixelStream.SetValues16
- uid: EvilDICOM.Core.Image.PixelStream.GetValues16*
  commentId: Overload:EvilDICOM.Core.Image.PixelStream.GetValues16
  name: GetValues16
  nameWithType: PixelStream.GetValues16
  fullName: EvilDICOM.Core.Image.PixelStream.GetValues16
- uid: System.Int16[]
  isExternal: true
  name: Int16[]
  nameWithType: Int16[]
  fullName: System.Int16[]
  nameWithType.vb: Int16()
  fullName.vb: System.Int16()
  name.vb: Int16()
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
