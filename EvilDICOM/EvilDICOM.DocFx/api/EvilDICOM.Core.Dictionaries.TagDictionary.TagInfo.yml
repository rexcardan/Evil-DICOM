### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo
  commentId: T:EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo
  id: TagDictionary.TagInfo
  parent: EvilDICOM.Core.Dictionaries
  children:
  - EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description
  - EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR
  langs:
  - csharp
  - vb
  name: TagDictionary.TagInfo
  nameWithType: TagDictionary.TagInfo
  fullName: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/TagDictionary.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: TagInfo
    path: ../EvilDICOM/Core/Dictionaries/TagDictionary.cs
    startLine: 3792
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  syntax:
    content: public class TagInfo
    content.vb: Public Class TagInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description
  commentId: P:EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description
  id: Description
  parent: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TagDictionary.TagInfo.Description
  fullName: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/TagDictionary.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Description
    path: ../EvilDICOM/Core/Dictionaries/TagDictionary.cs
    startLine: 3794
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR
  commentId: P:EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR
  id: VR
  parent: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo
  langs:
  - csharp
  - vb
  name: VR
  nameWithType: TagDictionary.TagInfo.VR
  fullName: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Dictionaries/TagDictionary.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: VR
    path: ../EvilDICOM/Core/Dictionaries/TagDictionary.cs
    startLine: 3795
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Dictionaries
  syntax:
    content: public string VR { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VR As String
  overload: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Core.Dictionaries
  commentId: N:EvilDICOM.Core.Dictionaries
  name: EvilDICOM.Core.Dictionaries
  nameWithType: EvilDICOM.Core.Dictionaries
  fullName: EvilDICOM.Core.Dictionaries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description*
  commentId: Overload:EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description
  name: Description
  nameWithType: TagDictionary.TagInfo.Description
  fullName: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR*
  commentId: Overload:EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR
  name: VR
  nameWithType: TagDictionary.TagInfo.VR
  fullName: EvilDICOM.Core.Dictionaries.TagDictionary.TagInfo.VR
