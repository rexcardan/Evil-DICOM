### YamlMime:ManagedReference
items:
- uid: EvilDICOM.CV.Helpers.Plane
  commentId: T:EvilDICOM.CV.Helpers.Plane
  id: Plane
  parent: EvilDICOM.CV.Helpers
  children:
  - EvilDICOM.CV.Helpers.Plane.Origin
  - EvilDICOM.CV.Helpers.Plane.XDir
  - EvilDICOM.CV.Helpers.Plane.YDir
  langs:
  - csharp
  - vb
  name: Plane
  nameWithType: Plane
  fullName: EvilDICOM.CV.Helpers.Plane
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Helpers/Plane.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Plane
    path: ../EvilDICOM.CV/Helpers/Plane.cs
    startLine: 9
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Helpers
  syntax:
    content: public class Plane
    content.vb: Public Class Plane
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.CV.Helpers.Plane.Origin
  commentId: P:EvilDICOM.CV.Helpers.Plane.Origin
  id: Origin
  parent: EvilDICOM.CV.Helpers.Plane
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: Plane.Origin
  fullName: EvilDICOM.CV.Helpers.Plane.Origin
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Helpers/Plane.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Origin
    path: ../EvilDICOM.CV/Helpers/Plane.cs
    startLine: 11
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Helpers
  syntax:
    content: public Point3f Origin { get; set; }
    parameters: []
    return:
      type: OpenCvSharp.Point3f
    content.vb: Public Property Origin As Point3f
  overload: EvilDICOM.CV.Helpers.Plane.Origin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.Helpers.Plane.XDir
  commentId: P:EvilDICOM.CV.Helpers.Plane.XDir
  id: XDir
  parent: EvilDICOM.CV.Helpers.Plane
  langs:
  - csharp
  - vb
  name: XDir
  nameWithType: Plane.XDir
  fullName: EvilDICOM.CV.Helpers.Plane.XDir
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Helpers/Plane.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: XDir
    path: ../EvilDICOM.CV/Helpers/Plane.cs
    startLine: 12
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Helpers
  syntax:
    content: public Point3f XDir { get; set; }
    parameters: []
    return:
      type: OpenCvSharp.Point3f
    content.vb: Public Property XDir As Point3f
  overload: EvilDICOM.CV.Helpers.Plane.XDir*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.Helpers.Plane.YDir
  commentId: P:EvilDICOM.CV.Helpers.Plane.YDir
  id: YDir
  parent: EvilDICOM.CV.Helpers.Plane
  langs:
  - csharp
  - vb
  name: YDir
  nameWithType: Plane.YDir
  fullName: EvilDICOM.CV.Helpers.Plane.YDir
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Helpers/Plane.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: YDir
    path: ../EvilDICOM.CV/Helpers/Plane.cs
    startLine: 13
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Helpers
  syntax:
    content: public Point3f YDir { get; set; }
    parameters: []
    return:
      type: OpenCvSharp.Point3f
    content.vb: Public Property YDir As Point3f
  overload: EvilDICOM.CV.Helpers.Plane.YDir*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.CV.Helpers
  commentId: N:EvilDICOM.CV.Helpers
  name: EvilDICOM.CV.Helpers
  nameWithType: EvilDICOM.CV.Helpers
  fullName: EvilDICOM.CV.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.CV.Helpers.Plane.Origin*
  commentId: Overload:EvilDICOM.CV.Helpers.Plane.Origin
  name: Origin
  nameWithType: Plane.Origin
  fullName: EvilDICOM.CV.Helpers.Plane.Origin
- uid: OpenCvSharp.Point3f
  commentId: T:OpenCvSharp.Point3f
  parent: OpenCvSharp
  isExternal: true
  name: Point3f
  nameWithType: Point3f
  fullName: OpenCvSharp.Point3f
- uid: OpenCvSharp
  commentId: N:OpenCvSharp
  isExternal: true
  name: OpenCvSharp
  nameWithType: OpenCvSharp
  fullName: OpenCvSharp
- uid: EvilDICOM.CV.Helpers.Plane.XDir*
  commentId: Overload:EvilDICOM.CV.Helpers.Plane.XDir
  name: XDir
  nameWithType: Plane.XDir
  fullName: EvilDICOM.CV.Helpers.Plane.XDir
- uid: EvilDICOM.CV.Helpers.Plane.YDir*
  commentId: Overload:EvilDICOM.CV.Helpers.Plane.YDir
  name: YDir
  nameWithType: Plane.YDir
  fullName: EvilDICOM.CV.Helpers.Plane.YDir
