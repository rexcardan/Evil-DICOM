### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.SCUOps.CStorer
  commentId: T:EvilDICOM.Network.SCUOps.CStorer
  id: CStorer
  parent: EvilDICOM.Network.SCUOps
  children:
  - EvilDICOM.Network.SCUOps.CStorer.#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)
  - EvilDICOM.Network.SCUOps.CStorer.Logger
  - EvilDICOM.Network.SCUOps.CStorer.SendCStore(EvilDICOM.Core.DICOMObject,System.UInt16@)
  langs:
  - csharp
  - vb
  name: CStorer
  nameWithType: CStorer
  fullName: EvilDICOM.Network.SCUOps.CStorer
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CStorer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: CStorer
    path: ../EvilDICOM/Network/SCUOps/CStorer.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public class CStorer
    content.vb: Public Class CStorer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.SCUOps.CStorer.#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.SCUOps.CStorer.#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)
  id: '#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)'
  parent: EvilDICOM.Network.SCUOps.CStorer
  langs:
  - csharp
  - vb
  name: CStorer(DICOMSCU, Entity)
  nameWithType: CStorer.CStorer(DICOMSCU, Entity)
  fullName: EvilDICOM.Network.SCUOps.CStorer.CStorer(EvilDICOM.Network.DICOMSCU, EvilDICOM.Network.Entity)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CStorer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Network/SCUOps/CStorer.cs
    startLine: 18
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public CStorer(DICOMSCU dICOMSCU, Entity callingEntity)
    parameters:
    - id: dICOMSCU
      type: EvilDICOM.Network.DICOMSCU
    - id: callingEntity
      type: EvilDICOM.Network.Entity
    content.vb: Public Sub New(dICOMSCU As DICOMSCU, callingEntity As Entity)
  overload: EvilDICOM.Network.SCUOps.CStorer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.SCUOps.CStorer.Logger
  commentId: P:EvilDICOM.Network.SCUOps.CStorer.Logger
  id: Logger
  parent: EvilDICOM.Network.SCUOps.CStorer
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: CStorer.Logger
  fullName: EvilDICOM.Network.SCUOps.CStorer.Logger
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CStorer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Logger
    path: ../EvilDICOM/Network/SCUOps/CStorer.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: EvilDICOM.Network.SCUOps.CStorer.Logger*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.SCUOps.CStorer.SendCStore(EvilDICOM.Core.DICOMObject,System.UInt16@)
  commentId: M:EvilDICOM.Network.SCUOps.CStorer.SendCStore(EvilDICOM.Core.DICOMObject,System.UInt16@)
  id: SendCStore(EvilDICOM.Core.DICOMObject,System.UInt16@)
  parent: EvilDICOM.Network.SCUOps.CStorer
  langs:
  - csharp
  - vb
  name: SendCStore(DICOMObject, ref UInt16)
  nameWithType: CStorer.SendCStore(DICOMObject, ref UInt16)
  fullName: EvilDICOM.Network.SCUOps.CStorer.SendCStore(EvilDICOM.Core.DICOMObject, ref System.UInt16)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CStorer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SendCStore
    path: ../EvilDICOM/Network/SCUOps/CStorer.cs
    startLine: 32
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  summary: "\nEmits a CStore operation to an entity which moves an image to the specified entity\n"
  example: []
  syntax:
    content: public CStoreResponse SendCStore(DICOMObject dcm, ref ushort msgId)
    parameters:
    - id: dcm
      type: EvilDICOM.Core.DICOMObject
      description: the DICOM object to send
    - id: msgId
      type: System.UInt16
      description: the message Id of this message
    return:
      type: EvilDICOM.Network.DIMSE.CStoreResponse
      description: a C-Store response of the operation
    content.vb: Public Function SendCStore(dcm As DICOMObject, ByRef msgId As UShort) As CStoreResponse
  overload: EvilDICOM.Network.SCUOps.CStorer.SendCStore*
  nameWithType.vb: CStorer.SendCStore(DICOMObject, ByRef UInt16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CStorer.SendCStore(EvilDICOM.Core.DICOMObject, ByRef System.UInt16)
  name.vb: SendCStore(DICOMObject, ByRef UInt16)
references:
- uid: EvilDICOM.Network.SCUOps
  commentId: N:EvilDICOM.Network.SCUOps
  name: EvilDICOM.Network.SCUOps
  nameWithType: EvilDICOM.Network.SCUOps
  fullName: EvilDICOM.Network.SCUOps
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.SCUOps.CStorer.#ctor*
  commentId: Overload:EvilDICOM.Network.SCUOps.CStorer.#ctor
  name: CStorer
  nameWithType: CStorer.CStorer
  fullName: EvilDICOM.Network.SCUOps.CStorer.CStorer
- uid: EvilDICOM.Network.DICOMSCU
  commentId: T:EvilDICOM.Network.DICOMSCU
  parent: EvilDICOM.Network
  name: DICOMSCU
  nameWithType: DICOMSCU
  fullName: EvilDICOM.Network.DICOMSCU
- uid: EvilDICOM.Network.Entity
  commentId: T:EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  name: Entity
  nameWithType: Entity
  fullName: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: EvilDICOM.Network.SCUOps.CStorer.Logger*
  commentId: Overload:EvilDICOM.Network.SCUOps.CStorer.Logger
  name: Logger
  nameWithType: CStorer.Logger
  fullName: EvilDICOM.Network.SCUOps.CStorer.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: EvilDICOM.Network.SCUOps.CStorer.SendCStore*
  commentId: Overload:EvilDICOM.Network.SCUOps.CStorer.SendCStore
  name: SendCStore
  nameWithType: CStorer.SendCStore
  fullName: EvilDICOM.Network.SCUOps.CStorer.SendCStore
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: EvilDICOM.Network.DIMSE.CStoreResponse
  commentId: T:EvilDICOM.Network.DIMSE.CStoreResponse
  parent: EvilDICOM.Network.DIMSE
  name: CStoreResponse
  nameWithType: CStoreResponse
  fullName: EvilDICOM.Network.DIMSE.CStoreResponse
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
- uid: EvilDICOM.Network.DIMSE
  commentId: N:EvilDICOM.Network.DIMSE
  name: EvilDICOM.Network.DIMSE
  nameWithType: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
