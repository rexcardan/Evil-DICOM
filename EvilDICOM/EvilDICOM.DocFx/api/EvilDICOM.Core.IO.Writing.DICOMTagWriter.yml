### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Writing.DICOMTagWriter
  commentId: T:EvilDICOM.Core.IO.Writing.DICOMTagWriter
  id: DICOMTagWriter
  parent: EvilDICOM.Core.IO.Writing
  children:
  - EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.Element.Tag)
  - EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  - EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.Element.Tag)
  - EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  langs:
  - csharp
  - vb
  name: DICOMTagWriter
  nameWithType: DICOMTagWriter
  fullName: EvilDICOM.Core.IO.Writing.DICOMTagWriter
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DICOMTagWriter
    path: ../EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public class DICOMTagWriter
    content.vb: Public Class DICOMTagWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.Element.Tag)
  commentId: M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.Element.Tag)
  id: WriteLittleEndian(EvilDICOM.Core.Element.Tag)
  parent: EvilDICOM.Core.IO.Writing.DICOMTagWriter
  langs:
  - csharp
  - vb
  name: WriteLittleEndian(Tag)
  nameWithType: DICOMTagWriter.WriteLittleEndian(Tag)
  fullName: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.Element.Tag)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: WriteLittleEndian
    path: ../EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
    startLine: 11
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static byte[] WriteLittleEndian(Tag tag)
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    return:
      type: System.Byte[]
    content.vb: Public Shared Function WriteLittleEndian(tag As Tag) As Byte()
  overload: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  commentId: M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  id: WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  parent: EvilDICOM.Core.IO.Writing.DICOMTagWriter
  langs:
  - csharp
  - vb
  name: WriteLittleEndian(DICOMBinaryWriter, Tag)
  nameWithType: DICOMTagWriter.WriteLittleEndian(DICOMBinaryWriter, Tag)
  fullName: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, EvilDICOM.Core.Element.Tag)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: WriteLittleEndian
    path: ../EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
    startLine: 18
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static void WriteLittleEndian(DICOMBinaryWriter dw, Tag tag)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    content.vb: Public Shared Sub WriteLittleEndian(dw As DICOMBinaryWriter, tag As Tag)
  overload: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.Element.Tag)
  commentId: M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.Element.Tag)
  id: WriteBigEndian(EvilDICOM.Core.Element.Tag)
  parent: EvilDICOM.Core.IO.Writing.DICOMTagWriter
  langs:
  - csharp
  - vb
  name: WriteBigEndian(Tag)
  nameWithType: DICOMTagWriter.WriteBigEndian(Tag)
  fullName: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.Element.Tag)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: WriteBigEndian
    path: ../EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
    startLine: 24
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static byte[] WriteBigEndian(Tag tag)
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    return:
      type: System.Byte[]
    content.vb: Public Shared Function WriteBigEndian(tag As Tag) As Byte()
  overload: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  commentId: M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  id: WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)
  parent: EvilDICOM.Core.IO.Writing.DICOMTagWriter
  langs:
  - csharp
  - vb
  name: WriteBigEndian(DICOMBinaryWriter, Tag)
  nameWithType: DICOMTagWriter.WriteBigEndian(DICOMBinaryWriter, Tag)
  fullName: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter, EvilDICOM.Core.Element.Tag)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: WriteBigEndian
    path: ../EvilDICOM/Core/IO/Writing/DICOMTagWriter.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Writing
  syntax:
    content: public static void WriteBigEndian(DICOMBinaryWriter dw, Tag tag)
    parameters:
    - id: dw
      type: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    content.vb: Public Shared Sub WriteBigEndian(dw As DICOMBinaryWriter, tag As Tag)
  overload: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.IO.Writing
  commentId: N:EvilDICOM.Core.IO.Writing
  name: EvilDICOM.Core.IO.Writing
  nameWithType: EvilDICOM.Core.IO.Writing
  fullName: EvilDICOM.Core.IO.Writing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian*
  commentId: Overload:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian
  name: WriteLittleEndian
  nameWithType: DICOMTagWriter.WriteLittleEndian
  fullName: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian
- uid: EvilDICOM.Core.Element.Tag
  commentId: T:EvilDICOM.Core.Element.Tag
  parent: EvilDICOM.Core.Element
  name: Tag
  nameWithType: Tag
  fullName: EvilDICOM.Core.Element.Tag
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.Element
  commentId: N:EvilDICOM.Core.Element
  name: EvilDICOM.Core.Element
  nameWithType: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
  commentId: T:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
  parent: EvilDICOM.Core.IO.Writing
  name: DICOMBinaryWriter
  nameWithType: DICOMBinaryWriter
  fullName: EvilDICOM.Core.IO.Writing.DICOMBinaryWriter
- uid: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian*
  commentId: Overload:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian
  name: WriteBigEndian
  nameWithType: DICOMTagWriter.WriteBigEndian
  fullName: EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian
