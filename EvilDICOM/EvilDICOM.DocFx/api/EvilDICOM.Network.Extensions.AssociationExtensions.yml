### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.Extensions.AssociationExtensions
  commentId: T:EvilDICOM.Network.Extensions.AssociationExtensions
  id: AssociationExtensions
  parent: EvilDICOM.Network.Extensions
  children:
  - EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  - EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  langs:
  - csharp
  - vb
  name: AssociationExtensions
  nameWithType: AssociationExtensions
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Extensions/AssociationExtensions.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: AssociationExtensions
    path: ../EvilDICOM/Network/Extensions/AssociationExtensions.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Extensions
  syntax:
    content: public static class AssociationExtensions
    content.vb: Public Module AssociationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  id: GetResponseContexts(EvilDICOM.Network.Association,System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext})
  isExtensionMethod: true
  parent: EvilDICOM.Network.Extensions.AssociationExtensions
  langs:
  - csharp
  - vb
  name: GetResponseContexts(Association, IEnumerable<PresentationContext>)
  nameWithType: AssociationExtensions.GetResponseContexts(Association, IEnumerable<PresentationContext>)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association, System.Collections.Generic.IEnumerable<EvilDICOM.Network.PDUs.Items.PresentationContext>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Extensions/AssociationExtensions.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetResponseContexts
    path: ../EvilDICOM/Network/Extensions/AssociationExtensions.cs
    startLine: 21
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Extensions
  summary: "\nTakes two sets of presentation contexts (typically from a request and a DICOM Service) and creates the \nagreed presentation context list for the accept response\n"
  example: []
  syntax:
    content: public static List<PresentationContext> GetResponseContexts(this Association asc, IEnumerable<PresentationContext> reqContexts)
    parameters:
    - id: asc
      type: EvilDICOM.Network.Association
    - id: reqContexts
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext}
    return:
      type: System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetResponseContexts(asc As Association, reqContexts As IEnumerable(Of PresentationContext)) As List(Of PresentationContext)
  overload: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts*
  nameWithType.vb: AssociationExtensions.GetResponseContexts(Association, IEnumerable(Of PresentationContext))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts(EvilDICOM.Network.Association, System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.PDUs.Items.PresentationContext))
  name.vb: GetResponseContexts(Association, IEnumerable(Of PresentationContext))
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  commentId: M:EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  id: SetFinalContexts(EvilDICOM.Network.Association,EvilDICOM.Network.PDUs.Accept)
  isExtensionMethod: true
  parent: EvilDICOM.Network.Extensions.AssociationExtensions
  langs:
  - csharp
  - vb
  name: SetFinalContexts(Association, Accept)
  nameWithType: AssociationExtensions.SetFinalContexts(Association, Accept)
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts(EvilDICOM.Network.Association, EvilDICOM.Network.PDUs.Accept)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Extensions/AssociationExtensions.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SetFinalContexts
    path: ../EvilDICOM/Network/Extensions/AssociationExtensions.cs
    startLine: 70
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Extensions
  syntax:
    content: public static void SetFinalContexts(this Association asc, Accept accept)
    parameters:
    - id: asc
      type: EvilDICOM.Network.Association
    - id: accept
      type: EvilDICOM.Network.PDUs.Accept
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetFinalContexts(asc As Association, accept As Accept)
  overload: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Network.Extensions
  commentId: N:EvilDICOM.Network.Extensions
  name: EvilDICOM.Network.Extensions
  nameWithType: EvilDICOM.Network.Extensions
  fullName: EvilDICOM.Network.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts*
  commentId: Overload:EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
  name: GetResponseContexts
  nameWithType: AssociationExtensions.GetResponseContexts
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.GetResponseContexts
- uid: EvilDICOM.Network.Association
  commentId: T:EvilDICOM.Network.Association
  parent: EvilDICOM.Network
  name: Association
  nameWithType: Association
  fullName: EvilDICOM.Network.Association
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.PDUs.Items.PresentationContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PresentationContext>
  nameWithType: IEnumerable<PresentationContext>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.PDUs.Items.PresentationContext>
  nameWithType.vb: IEnumerable(Of PresentationContext)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.PDUs.Items.PresentationContext)
  name.vb: IEnumerable(Of PresentationContext)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
  commentId: T:System.Collections.Generic.List{EvilDICOM.Network.PDUs.Items.PresentationContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PresentationContext>
  nameWithType: List<PresentationContext>
  fullName: System.Collections.Generic.List<EvilDICOM.Network.PDUs.Items.PresentationContext>
  nameWithType.vb: List(Of PresentationContext)
  fullName.vb: System.Collections.Generic.List(Of EvilDICOM.Network.PDUs.Items.PresentationContext)
  name.vb: List(Of PresentationContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.PDUs.Items.PresentationContext
    name: PresentationContext
    nameWithType: PresentationContext
    fullName: EvilDICOM.Network.PDUs.Items.PresentationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts*
  commentId: Overload:EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
  name: SetFinalContexts
  nameWithType: AssociationExtensions.SetFinalContexts
  fullName: EvilDICOM.Network.Extensions.AssociationExtensions.SetFinalContexts
- uid: EvilDICOM.Network.PDUs.Accept
  commentId: T:EvilDICOM.Network.PDUs.Accept
  parent: EvilDICOM.Network.PDUs
  name: Accept
  nameWithType: Accept
  fullName: EvilDICOM.Network.PDUs.Accept
- uid: EvilDICOM.Network.PDUs
  commentId: N:EvilDICOM.Network.PDUs
  name: EvilDICOM.Network.PDUs
  nameWithType: EvilDICOM.Network.PDUs
  fullName: EvilDICOM.Network.PDUs
