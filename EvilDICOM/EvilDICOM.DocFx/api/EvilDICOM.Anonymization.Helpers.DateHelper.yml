### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Anonymization.Helpers.DateHelper
  commentId: T:EvilDICOM.Anonymization.Helpers.DateHelper
  id: DateHelper
  parent: EvilDICOM.Anonymization.Helpers
  children:
  - EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate
  - EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate
  - EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89(System.String)
  langs:
  - csharp
  - vb
  name: DateHelper
  nameWithType: DateHelper
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Helpers/DateHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DateHelper
    path: ../EvilDICOM/Anonymization/Helpers/DateHelper.cs
    startLine: 11
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Helpers
  syntax:
    content: public class DateHelper
    content.vb: Public Class DateHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate
  commentId: P:EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate
  id: BaseDate
  parent: EvilDICOM.Anonymization.Helpers.DateHelper
  langs:
  - csharp
  - vb
  name: BaseDate
  nameWithType: DateHelper.BaseDate
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Helpers/DateHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: BaseDate
    path: ../EvilDICOM/Anonymization/Helpers/DateHelper.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Helpers
  syntax:
    content: public static DateTime BaseDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Shared ReadOnly Property BaseDate As Date
  overload: EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate
  commentId: P:EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate
  id: RandomDate
  parent: EvilDICOM.Anonymization.Helpers.DateHelper
  langs:
  - csharp
  - vb
  name: RandomDate
  nameWithType: DateHelper.RandomDate
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Helpers/DateHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: RandomDate
    path: ../EvilDICOM/Anonymization/Helpers/DateHelper.cs
    startLine: 19
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Helpers
  syntax:
    content: public static DateTime RandomDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Shared ReadOnly Property RandomDate As Date
  overload: EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89(System.String)
  commentId: M:EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89(System.String)
  id: YoungerThan89(System.String)
  parent: EvilDICOM.Anonymization.Helpers.DateHelper
  langs:
  - csharp
  - vb
  name: YoungerThan89(String)
  nameWithType: DateHelper.YoungerThan89(String)
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Helpers/DateHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: YoungerThan89
    path: ../EvilDICOM/Anonymization/Helpers/DateHelper.cs
    startLine: 36
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Helpers
  summary: "\nChecks to see if the patient age is less than 89 years old\n"
  example: []
  syntax:
    content: public static bool YoungerThan89(string file)
    parameters:
    - id: file
      type: System.String
      description: Path to DICOM file containing patient information
    return:
      type: System.Boolean
      description: boolean indication test
    content.vb: Public Shared Function YoungerThan89(file As String) As Boolean
  overload: EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  commentId: M:EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: DateRelativeBaseDate(System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: EvilDICOM.Anonymization.Helpers.DateHelper
  langs:
  - csharp
  - vb
  name: DateRelativeBaseDate(Nullable<DateTime>, Nullable<DateTime>)
  nameWithType: DateHelper.DateRelativeBaseDate(Nullable<DateTime>, Nullable<DateTime>)
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Helpers/DateHelper.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DateRelativeBaseDate
    path: ../EvilDICOM/Anonymization/Helpers/DateHelper.cs
    startLine: 68
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Helpers
  syntax:
    content: public static DateTime? DateRelativeBaseDate(DateTime? original, DateTime? reference)
    parameters:
    - id: original
      type: System.Nullable{System.DateTime}
    - id: reference
      type: System.Nullable{System.DateTime}
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Function DateRelativeBaseDate(original As Date?, reference As Date?) As Date?
  overload: EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate*
  nameWithType.vb: DateHelper.DateRelativeBaseDate(Nullable(Of DateTime), Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime))
  name.vb: DateRelativeBaseDate(Nullable(Of DateTime), Nullable(Of DateTime))
references:
- uid: EvilDICOM.Anonymization.Helpers
  commentId: N:EvilDICOM.Anonymization.Helpers
  name: EvilDICOM.Anonymization.Helpers
  nameWithType: EvilDICOM.Anonymization.Helpers
  fullName: EvilDICOM.Anonymization.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate*
  commentId: Overload:EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate
  name: BaseDate
  nameWithType: DateHelper.BaseDate
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.BaseDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate*
  commentId: Overload:EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate
  name: RandomDate
  nameWithType: DateHelper.RandomDate
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.RandomDate
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89*
  commentId: Overload:EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89
  name: YoungerThan89
  nameWithType: DateHelper.YoungerThan89
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.YoungerThan89
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate*
  commentId: Overload:EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate
  name: DateRelativeBaseDate
  nameWithType: DateHelper.DateRelativeBaseDate
  fullName: EvilDICOM.Anonymization.Helpers.DateHelper.DateRelativeBaseDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
