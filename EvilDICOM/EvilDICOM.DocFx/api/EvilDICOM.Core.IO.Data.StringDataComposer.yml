### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Data.StringDataComposer
  commentId: T:EvilDICOM.Core.IO.Data.StringDataComposer
  id: StringDataComposer
  parent: EvilDICOM.Core.IO.Data
  children:
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString(EvilDICOM.Core.Element.Age)
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate(System.Nullable{System.DateTime})
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime(System.Nullable{System.DateTime})
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString(System.Double[])
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString(System.Int32[])
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString(System.Collections.Generic.List{System.String})
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime(System.Nullable{System.DateTime})
  - EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  langs:
  - csharp
  - vb
  name: StringDataComposer
  nameWithType: StringDataComposer
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: StringDataComposer
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public class StringDataComposer
    content.vb: Public Class StringDataComposer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString(EvilDICOM.Core.Element.Age)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString(EvilDICOM.Core.Element.Age)
  id: ComposeAgeString(EvilDICOM.Core.Element.Age)
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeAgeString(Age)
  nameWithType: StringDataComposer.ComposeAgeString(Age)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString(EvilDICOM.Core.Element.Age)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeAgeString
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeAgeString(Age data)
    parameters:
    - id: data
      type: EvilDICOM.Core.Element.Age
    return:
      type: System.String
    content.vb: Public Shared Function ComposeAgeString(data As Age) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate(System.Nullable{System.DateTime})
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate(System.Nullable{System.DateTime})
  id: ComposeDate(System.Nullable{System.DateTime})
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeDate(Nullable<DateTime>)
  nameWithType: StringDataComposer.ComposeDate(Nullable<DateTime>)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeDate
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 39
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeDate(DateTime? data)
    parameters:
    - id: data
      type: System.Nullable{System.DateTime}
    return:
      type: System.String
    content.vb: Public Shared Function ComposeDate(data As Date?) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate*
  nameWithType.vb: StringDataComposer.ComposeDate(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate(System.Nullable(Of System.DateTime))
  name.vb: ComposeDate(Nullable(Of DateTime))
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime(System.Nullable{System.DateTime})
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime(System.Nullable{System.DateTime})
  id: ComposeDateTime(System.Nullable{System.DateTime})
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeDateTime(Nullable<DateTime>)
  nameWithType: StringDataComposer.ComposeDateTime(Nullable<DateTime>)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeDateTime
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 49
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeDateTime(DateTime? data)
    parameters:
    - id: data
      type: System.Nullable{System.DateTime}
    return:
      type: System.String
    content.vb: Public Shared Function ComposeDateTime(data As Date?) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime*
  nameWithType.vb: StringDataComposer.ComposeDateTime(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime(System.Nullable(Of System.DateTime))
  name.vb: ComposeDateTime(Nullable(Of DateTime))
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString(System.Double[])
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString(System.Double[])
  id: ComposeDecimalString(System.Double[])
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeDecimalString(Double[])
  nameWithType: StringDataComposer.ComposeDecimalString(Double[])
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString(System.Double[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeDecimalString
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 59
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeDecimalString(double[] data)
    parameters:
    - id: data
      type: System.Double[]
    return:
      type: System.String
    content.vb: Public Shared Function ComposeDecimalString(data As Double()) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString*
  nameWithType.vb: StringDataComposer.ComposeDecimalString(Double())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString(System.Double())
  name.vb: ComposeDecimalString(Double())
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString(System.Int32[])
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString(System.Int32[])
  id: ComposeIntegerString(System.Int32[])
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeIntegerString(Int32[])
  nameWithType: StringDataComposer.ComposeIntegerString(Int32[])
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString(System.Int32[])
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeIntegerString
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 77
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeIntegerString(int[] data)
    parameters:
    - id: data
      type: System.Int32[]
    return:
      type: System.String
    content.vb: Public Shared Function ComposeIntegerString(data As Integer()) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString*
  nameWithType.vb: StringDataComposer.ComposeIntegerString(Int32())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString(System.Int32())
  name.vb: ComposeIntegerString(Int32())
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime(System.Nullable{System.DateTime})
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime(System.Nullable{System.DateTime})
  id: ComposeTime(System.Nullable{System.DateTime})
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeTime(Nullable<DateTime>)
  nameWithType: StringDataComposer.ComposeTime(Nullable<DateTime>)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeTime
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 84
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeTime(DateTime? data)
    parameters:
    - id: data
      type: System.Nullable{System.DateTime}
    return:
      type: System.String
    content.vb: Public Shared Function ComposeTime(data As Date?) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime*
  nameWithType.vb: StringDataComposer.ComposeTime(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime(System.Nullable(Of System.DateTime))
  name.vb: ComposeTime(Nullable(Of DateTime))
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString(System.Collections.Generic.List{System.String})
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString(System.Collections.Generic.List{System.String})
  id: ComposeMultipleString(System.Collections.Generic.List{System.String})
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeMultipleString(List<String>)
  nameWithType: StringDataComposer.ComposeMultipleString(List<String>)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString(System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeMultipleString
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 94
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeMultipleString(List<string> data_)
    parameters:
    - id: data_
      type: System.Collections.Generic.List{System.String}
    return:
      type: System.String
    content.vb: Public Shared Function ComposeMultipleString(data_ As List(Of String)) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString*
  nameWithType.vb: StringDataComposer.ComposeMultipleString(List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString(System.Collections.Generic.List(Of System.String))
  name.vb: ComposeMultipleString(List(Of String))
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  id: ComposeDates(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeDates(List<Nullable<DateTime>>)
  nameWithType: StringDataComposer.ComposeDates(List<Nullable<DateTime>>)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates(System.Collections.Generic.List<System.Nullable<System.DateTime>>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeDates
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 101
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeDates(List<DateTime?> data_)
    parameters:
    - id: data_
      type: System.Collections.Generic.List{System.Nullable{System.DateTime}}
    return:
      type: System.String
    content.vb: Public Shared Function ComposeDates(data_ As List(Of Date?)) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates*
  nameWithType.vb: StringDataComposer.ComposeDates(List(Of Nullable(Of DateTime)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates(System.Collections.Generic.List(Of System.Nullable(Of System.DateTime)))
  name.vb: ComposeDates(List(Of Nullable(Of DateTime)))
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  id: ComposeDateTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeDateTimes(List<Nullable<DateTime>>)
  nameWithType: StringDataComposer.ComposeDateTimes(List<Nullable<DateTime>>)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes(System.Collections.Generic.List<System.Nullable<System.DateTime>>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeDateTimes
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 108
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeDateTimes(List<DateTime?> data_)
    parameters:
    - id: data_
      type: System.Collections.Generic.List{System.Nullable{System.DateTime}}
    return:
      type: System.String
    content.vb: Public Shared Function ComposeDateTimes(data_ As List(Of Date?)) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes*
  nameWithType.vb: StringDataComposer.ComposeDateTimes(List(Of Nullable(Of DateTime)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes(System.Collections.Generic.List(Of System.Nullable(Of System.DateTime)))
  name.vb: ComposeDateTimes(List(Of Nullable(Of DateTime)))
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  commentId: M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  id: ComposeTimes(System.Collections.Generic.List{System.Nullable{System.DateTime}})
  parent: EvilDICOM.Core.IO.Data.StringDataComposer
  langs:
  - csharp
  - vb
  name: ComposeTimes(List<Nullable<DateTime>>)
  nameWithType: StringDataComposer.ComposeTimes(List<Nullable<DateTime>>)
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes(System.Collections.Generic.List<System.Nullable<System.DateTime>>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataComposer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ComposeTimes
    path: ../EvilDICOM/Core/IO/Data/StringDataComposer.cs
    startLine: 115
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static string ComposeTimes(List<DateTime?> data_)
    parameters:
    - id: data_
      type: System.Collections.Generic.List{System.Nullable{System.DateTime}}
    return:
      type: System.String
    content.vb: Public Shared Function ComposeTimes(data_ As List(Of Date?)) As String
  overload: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes*
  nameWithType.vb: StringDataComposer.ComposeTimes(List(Of Nullable(Of DateTime)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes(System.Collections.Generic.List(Of System.Nullable(Of System.DateTime)))
  name.vb: ComposeTimes(List(Of Nullable(Of DateTime)))
references:
- uid: EvilDICOM.Core.IO.Data
  commentId: N:EvilDICOM.Core.IO.Data
  name: EvilDICOM.Core.IO.Data
  nameWithType: EvilDICOM.Core.IO.Data
  fullName: EvilDICOM.Core.IO.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString
  name: ComposeAgeString
  nameWithType: StringDataComposer.ComposeAgeString
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString
- uid: EvilDICOM.Core.Element.Age
  commentId: T:EvilDICOM.Core.Element.Age
  parent: EvilDICOM.Core.Element
  name: Age
  nameWithType: Age
  fullName: EvilDICOM.Core.Element.Age
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.Element
  commentId: N:EvilDICOM.Core.Element
  name: EvilDICOM.Core.Element
  nameWithType: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate
  name: ComposeDate
  nameWithType: StringDataComposer.ComposeDate
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime
  name: ComposeDateTime
  nameWithType: StringDataComposer.ComposeDateTime
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString
  name: ComposeDecimalString
  nameWithType: StringDataComposer.ComposeDecimalString
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString
  name: ComposeIntegerString
  nameWithType: StringDataComposer.ComposeIntegerString
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime
  name: ComposeTime
  nameWithType: StringDataComposer.ComposeTime
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString
  name: ComposeMultipleString
  nameWithType: StringDataComposer.ComposeMultipleString
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeMultipleString
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates
  name: ComposeDates
  nameWithType: StringDataComposer.ComposeDates
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDates
- uid: System.Collections.Generic.List{System.Nullable{System.DateTime}}
  commentId: T:System.Collections.Generic.List{System.Nullable{System.DateTime}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Nullable<DateTime>>
  nameWithType: List<Nullable<DateTime>>
  fullName: System.Collections.Generic.List<System.Nullable<System.DateTime>>
  nameWithType.vb: List(Of Nullable(Of DateTime))
  fullName.vb: System.Collections.Generic.List(Of System.Nullable(Of System.DateTime))
  name.vb: List(Of Nullable(Of DateTime))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes
  name: ComposeDateTimes
  nameWithType: StringDataComposer.ComposeDateTimes
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTimes
- uid: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes
  name: ComposeTimes
  nameWithType: StringDataComposer.ComposeTimes
  fullName: EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTimes
