### YamlMime:ManagedReference
items:
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta
  commentId: T:EvilDICOM.CV.RT.Meta.SliceContourMeta
  id: SliceContourMeta
  parent: EvilDICOM.CV.RT.Meta
  children:
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint(OpenCvSharp.Point3f)
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.Children
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains(EvilDICOM.CV.RT.Meta.SliceContourMeta)
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Double)
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage(OpenCvSharp.Mat,OpenCvSharp.Vec2f[],System.Byte)
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Byte,System.Double)
  - EvilDICOM.CV.RT.Meta.SliceContourMeta.Z
  langs:
  - csharp
  - vb
  name: SliceContourMeta
  nameWithType: SliceContourMeta
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SliceContourMeta
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 15
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  summary: "\nRepresents a closed contour on a given slice \n(can be multiple for the same stucture on the same slice)\n"
  example: []
  syntax:
    content: public class SliceContourMeta
    content.vb: Public Class SliceContourMeta
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint(OpenCvSharp.Point3f)
  commentId: M:EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint(OpenCvSharp.Point3f)
  id: AddPoint(OpenCvSharp.Point3f)
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: AddPoint(Point3f)
  nameWithType: SliceContourMeta.AddPoint(Point3f)
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint(OpenCvSharp.Point3f)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: AddPoint
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 17
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  syntax:
    content: public void AddPoint(Point3f pt)
    parameters:
    - id: pt
      type: OpenCvSharp.Point3f
    content.vb: Public Sub AddPoint(pt As Point3f)
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains(EvilDICOM.CV.RT.Meta.SliceContourMeta)
  commentId: M:EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains(EvilDICOM.CV.RT.Meta.SliceContourMeta)
  id: CompletelyContains(EvilDICOM.CV.RT.Meta.SliceContourMeta)
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: CompletelyContains(SliceContourMeta)
  nameWithType: SliceContourMeta.CompletelyContains(SliceContourMeta)
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains(EvilDICOM.CV.RT.Meta.SliceContourMeta)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: CompletelyContains
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 26
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  syntax:
    content: public bool CompletelyContains(SliceContourMeta smaller)
    parameters:
    - id: smaller
      type: EvilDICOM.CV.RT.Meta.SliceContourMeta
    return:
      type: System.Boolean
    content.vb: Public Function CompletelyContains(smaller As SliceContourMeta) As Boolean
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints
  commentId: P:EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints
  id: ContourPoints
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: ContourPoints
  nameWithType: SliceContourMeta.ContourPoints
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ContourPoints
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 34
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  syntax:
    content: public List<Point2f> ContourPoints { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{OpenCvSharp.Point2f}
    content.vb: Public ReadOnly Property ContourPoints As List(Of Point2f)
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.Z
  commentId: P:EvilDICOM.CV.RT.Meta.SliceContourMeta.Z
  id: Z
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: SliceContourMeta.Z
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.Z
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Z
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 35
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  syntax:
    content: public float Z { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Z As Single
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.Z*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea
  commentId: M:EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea
  id: CalculateArea
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: CalculateArea()
  nameWithType: SliceContourMeta.CalculateArea()
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: CalculateArea
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 37
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  syntax:
    content: public double CalculateArea()
    return:
      type: System.Double
    content.vb: Public Function CalculateArea As Double
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.Children
  commentId: P:EvilDICOM.CV.RT.Meta.SliceContourMeta.Children
  id: Children
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: SliceContourMeta.Children
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.Children
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Children
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 54
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  summary: "\nA container for contours within this contour\n"
  example: []
  syntax:
    content: public List<SliceContourMeta> Children { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{EvilDICOM.CV.RT.Meta.SliceContourMeta}
    content.vb: Public Property Children As List(Of SliceContourMeta)
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.Children*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Double)
  commentId: M:EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Double)
  id: DrawOnSlice(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Double)
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: DrawOnSlice(Mat, Mat, Double)
  nameWithType: SliceContourMeta.DrawOnSlice(Mat, Mat, Double)
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice(OpenCvSharp.Mat, OpenCvSharp.Mat, System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DrawOnSlice
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 56
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  syntax:
    content: public Mat DrawOnSlice(Mat txMatrix, Mat slice, double scale = 1)
    parameters:
    - id: txMatrix
      type: OpenCvSharp.Mat
    - id: slice
      type: OpenCvSharp.Mat
    - id: scale
      type: System.Double
    return:
      type: OpenCvSharp.Mat
    content.vb: Public Function DrawOnSlice(txMatrix As Mat, slice As Mat, scale As Double = 1) As Mat
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Byte,System.Double)
  commentId: M:EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Byte,System.Double)
  id: MaskImageFast(OpenCvSharp.Mat,OpenCvSharp.Mat,System.Byte,System.Double)
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: MaskImageFast(Mat, Mat, Byte, Double)
  nameWithType: SliceContourMeta.MaskImageFast(Mat, Mat, Byte, Double)
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast(OpenCvSharp.Mat, OpenCvSharp.Mat, System.Byte, System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: MaskImageFast
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 85
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  summary: "\nMasks an image of the same voxel count as the input doseGrid. Voxels inside the\ncontour are filled with the specified color. Intent is white (0x255) on inside and outside\nareas/holes are left black (0x00)\n"
  example: []
  syntax:
    content: public void MaskImageFast(Mat mask, Mat txMatrix, byte color = 255, double scale = 1)
    parameters:
    - id: mask
      type: OpenCvSharp.Mat
      description: the mask to fill or modify (recursively)
    - id: txMatrix
      type: OpenCvSharp.Mat
      description: the patient transform matrix from the imagematrix/dosematrix
    - id: color
      type: System.Byte
      description: the color to fill the contour
    - id: scale
      type: System.Double
      description: the scale of the image (in case the image has been resampled)
    content.vb: Public Sub MaskImageFast(mask As Mat, txMatrix As Mat, color As Byte = 255, scale As Double = 1)
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage(OpenCvSharp.Mat,OpenCvSharp.Vec2f[],System.Byte)
  commentId: M:EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage(OpenCvSharp.Mat,OpenCvSharp.Vec2f[],System.Byte)
  id: MaskImage(OpenCvSharp.Mat,OpenCvSharp.Vec2f[],System.Byte)
  parent: EvilDICOM.CV.RT.Meta.SliceContourMeta
  langs:
  - csharp
  - vb
  name: MaskImage(Mat, Vec2f[], Byte)
  nameWithType: SliceContourMeta.MaskImage(Mat, Vec2f[], Byte)
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage(OpenCvSharp.Mat, OpenCvSharp.Vec2f[], System.Byte)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: MaskImage
    path: ../EvilDICOM.CV/RT/Meta/SliceContourMeta.cs
    startLine: 119
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.RT.Meta
  summary: "\nMasks an image of the same voxel count as the input doseGrid. Voxels inside the\ncontour are filled with the specified color. Intent is white (0x255) on inside and outside\nareas/holes are left black (0x00)\n"
  example: []
  syntax:
    content: public void MaskImage(Mat mask, Vec2f[] doseGridPts, byte color = 255)
    parameters:
    - id: mask
      type: OpenCvSharp.Mat
      description: the mask to fill or modify (recursively)
    - id: doseGridPts
      type: OpenCvSharp.Vec2f[]
      description: the 2d (x,y) patient coordinates of the dose matrix slices
    - id: color
      type: System.Byte
      description: the color to fill the contour
    content.vb: Public Sub MaskImage(mask As Mat, doseGridPts As Vec2f(), color As Byte = 255)
  overload: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage*
  nameWithType.vb: SliceContourMeta.MaskImage(Mat, Vec2f(), Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage(OpenCvSharp.Mat, OpenCvSharp.Vec2f(), System.Byte)
  name.vb: MaskImage(Mat, Vec2f(), Byte)
references:
- uid: EvilDICOM.CV.RT.Meta
  commentId: N:EvilDICOM.CV.RT.Meta
  name: EvilDICOM.CV.RT.Meta
  nameWithType: EvilDICOM.CV.RT.Meta
  fullName: EvilDICOM.CV.RT.Meta
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint
  name: AddPoint
  nameWithType: SliceContourMeta.AddPoint
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.AddPoint
- uid: OpenCvSharp.Point3f
  commentId: T:OpenCvSharp.Point3f
  parent: OpenCvSharp
  isExternal: true
  name: Point3f
  nameWithType: Point3f
  fullName: OpenCvSharp.Point3f
- uid: OpenCvSharp
  commentId: N:OpenCvSharp
  isExternal: true
  name: OpenCvSharp
  nameWithType: OpenCvSharp
  fullName: OpenCvSharp
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains
  name: CompletelyContains
  nameWithType: SliceContourMeta.CompletelyContains
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.CompletelyContains
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta
  commentId: T:EvilDICOM.CV.RT.Meta.SliceContourMeta
  parent: EvilDICOM.CV.RT.Meta
  name: SliceContourMeta
  nameWithType: SliceContourMeta
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints
  name: ContourPoints
  nameWithType: SliceContourMeta.ContourPoints
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.ContourPoints
- uid: System.Collections.Generic.List{OpenCvSharp.Point2f}
  commentId: T:System.Collections.Generic.List{OpenCvSharp.Point2f}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Point2f>
  nameWithType: List<Point2f>
  fullName: System.Collections.Generic.List<OpenCvSharp.Point2f>
  nameWithType.vb: List(Of Point2f)
  fullName.vb: System.Collections.Generic.List(Of OpenCvSharp.Point2f)
  name.vb: List(Of Point2f)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenCvSharp.Point2f
    name: Point2f
    nameWithType: Point2f
    fullName: OpenCvSharp.Point2f
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenCvSharp.Point2f
    name: Point2f
    nameWithType: Point2f
    fullName: OpenCvSharp.Point2f
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.Z*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.Z
  name: Z
  nameWithType: SliceContourMeta.Z
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.Z
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea
  name: CalculateArea
  nameWithType: SliceContourMeta.CalculateArea
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.CalculateArea
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.Children*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.Children
  name: Children
  nameWithType: SliceContourMeta.Children
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.Children
- uid: System.Collections.Generic.List{EvilDICOM.CV.RT.Meta.SliceContourMeta}
  commentId: T:System.Collections.Generic.List{EvilDICOM.CV.RT.Meta.SliceContourMeta}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SliceContourMeta>
  nameWithType: List<SliceContourMeta>
  fullName: System.Collections.Generic.List<EvilDICOM.CV.RT.Meta.SliceContourMeta>
  nameWithType.vb: List(Of SliceContourMeta)
  fullName.vb: System.Collections.Generic.List(Of EvilDICOM.CV.RT.Meta.SliceContourMeta)
  name.vb: List(Of SliceContourMeta)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.CV.RT.Meta.SliceContourMeta
    name: SliceContourMeta
    nameWithType: SliceContourMeta
    fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.CV.RT.Meta.SliceContourMeta
    name: SliceContourMeta
    nameWithType: SliceContourMeta
    fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice
  name: DrawOnSlice
  nameWithType: SliceContourMeta.DrawOnSlice
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.DrawOnSlice
- uid: OpenCvSharp.Mat
  commentId: T:OpenCvSharp.Mat
  parent: OpenCvSharp
  isExternal: true
  name: Mat
  nameWithType: Mat
  fullName: OpenCvSharp.Mat
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast
  name: MaskImageFast
  nameWithType: SliceContourMeta.MaskImageFast
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImageFast
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage*
  commentId: Overload:EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage
  name: MaskImage
  nameWithType: SliceContourMeta.MaskImage
  fullName: EvilDICOM.CV.RT.Meta.SliceContourMeta.MaskImage
- uid: OpenCvSharp.Vec2f[]
  isExternal: true
  name: Vec2f[]
  nameWithType: Vec2f[]
  fullName: OpenCvSharp.Vec2f[]
  nameWithType.vb: Vec2f()
  fullName.vb: OpenCvSharp.Vec2f()
  name.vb: Vec2f()
  spec.csharp:
  - uid: OpenCvSharp.Vec2f
    name: Vec2f
    nameWithType: Vec2f
    fullName: OpenCvSharp.Vec2f
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: OpenCvSharp.Vec2f
    name: Vec2f
    nameWithType: Vec2f
    fullName: OpenCvSharp.Vec2f
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
