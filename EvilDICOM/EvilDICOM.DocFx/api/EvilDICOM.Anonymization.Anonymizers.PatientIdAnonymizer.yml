### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  commentId: T:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  id: PatientIdAnonymizer
  parent: EvilDICOM.Anonymization.Anonymizers
  children:
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor(System.String,System.String,System.String)
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  - EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  langs:
  - csharp
  - vb
  name: PatientIdAnonymizer
  nameWithType: PatientIdAnonymizer
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: PatientIdAnonymizer
    path: ../EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: "\nReplaces patient identifier with specified name and id\n"
  example: []
  syntax:
    content: 'public class PatientIdAnonymizer : IAnonymizer'
    content.vb: >-
      Public Class PatientIdAnonymizer
          Implements IAnonymizer
  inheritance:
  - System.Object
  implements:
  - EvilDICOM.Anonymization.IAnonymizer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor(System.String,System.String,System.String)
  commentId: M:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: PatientIdAnonymizer(String, String, String)
  nameWithType: PatientIdAnonymizer.PatientIdAnonymizer(String, String, String)
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.PatientIdAnonymizer(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public PatientIdAnonymizer(string firstName, string lastName, string id)
    parameters:
    - id: firstName
      type: System.String
    - id: lastName
      type: System.String
    - id: id
      type: System.String
    content.vb: Public Sub New(firstName As String, lastName As String, id As String)
  overload: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  commentId: P:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  id: FirstName
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: PatientIdAnonymizer.FirstName
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FirstName
    path: ../EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: "\nThe first name to make the new patient Id\n"
  example: []
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FirstName As String
  overload: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  commentId: P:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  id: LastName
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: PatientIdAnonymizer.LastName
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: LastName
    path: ../EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 31
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: "\nThe last name to make the new patient Id\n"
  example: []
  syntax:
    content: public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastName As String
  overload: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  commentId: P:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  id: Id
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PatientIdAnonymizer.Id
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Id
    path: ../EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 36
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  summary: "\nThe new id for the anonymized file\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  commentId: M:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  id: Anonymize(EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer
  langs:
  - csharp
  - vb
  name: Anonymize(DICOMObject)
  nameWithType: PatientIdAnonymizer.Anonymize(DICOMObject)
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Anonymize
    path: ../EvilDICOM/Anonymization/Anonymizers/PatientIdAnonymizer.cs
    startLine: 38
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Anonymization.Anonymizers
  syntax:
    content: public void Anonymize(DICOMObject d)
    parameters:
    - id: d
      type: EvilDICOM.Core.DICOMObject
    content.vb: Public Sub Anonymize(d As DICOMObject)
  overload: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize*
  implements:
  - EvilDICOM.Anonymization.IAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Anonymization.Anonymizers
  commentId: N:EvilDICOM.Anonymization.Anonymizers
  name: EvilDICOM.Anonymization.Anonymizers
  nameWithType: EvilDICOM.Anonymization.Anonymizers
  fullName: EvilDICOM.Anonymization.Anonymizers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Anonymization.IAnonymizer
  commentId: T:EvilDICOM.Anonymization.IAnonymizer
  parent: EvilDICOM.Anonymization
  name: IAnonymizer
  nameWithType: IAnonymizer
  fullName: EvilDICOM.Anonymization.IAnonymizer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Anonymization
  commentId: N:EvilDICOM.Anonymization
  name: EvilDICOM.Anonymization
  nameWithType: EvilDICOM.Anonymization
  fullName: EvilDICOM.Anonymization
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor*
  commentId: Overload:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.#ctor
  name: PatientIdAnonymizer
  nameWithType: PatientIdAnonymizer.PatientIdAnonymizer
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.PatientIdAnonymizer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName*
  commentId: Overload:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
  name: FirstName
  nameWithType: PatientIdAnonymizer.FirstName
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.FirstName
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName*
  commentId: Overload:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
  name: LastName
  nameWithType: PatientIdAnonymizer.LastName
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.LastName
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id*
  commentId: Overload:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
  name: Id
  nameWithType: PatientIdAnonymizer.Id
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Id
- uid: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize*
  commentId: Overload:EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize
  name: Anonymize
  nameWithType: PatientIdAnonymizer.Anonymize
  fullName: EvilDICOM.Anonymization.Anonymizers.PatientIdAnonymizer.Anonymize
- uid: EvilDICOM.Anonymization.IAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  commentId: M:EvilDICOM.Anonymization.IAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  parent: EvilDICOM.Anonymization.IAnonymizer
  name: Anonymize(DICOMObject)
  nameWithType: IAnonymizer.Anonymize(DICOMObject)
  fullName: EvilDICOM.Anonymization.IAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
  spec.csharp:
  - uid: EvilDICOM.Anonymization.IAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
    name: Anonymize
    nameWithType: IAnonymizer.Anonymize
    fullName: EvilDICOM.Anonymization.IAnonymizer.Anonymize
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.DICOMObject
    name: DICOMObject
    nameWithType: DICOMObject
    fullName: EvilDICOM.Core.DICOMObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Anonymization.IAnonymizer.Anonymize(EvilDICOM.Core.DICOMObject)
    name: Anonymize
    nameWithType: IAnonymizer.Anonymize
    fullName: EvilDICOM.Anonymization.IAnonymizer.Anonymize
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.DICOMObject
    name: DICOMObject
    nameWithType: DICOMObject
    fullName: EvilDICOM.Core.DICOMObject
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.DICOMObject
  commentId: T:EvilDICOM.Core.DICOMObject
  parent: EvilDICOM.Core
  name: DICOMObject
  nameWithType: DICOMObject
  fullName: EvilDICOM.Core.DICOMObject
- uid: EvilDICOM.Core
  commentId: N:EvilDICOM.Core
  name: EvilDICOM.Core
  nameWithType: EvilDICOM.Core
  fullName: EvilDICOM.Core
