### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.Services.CStoreService
  commentId: T:EvilDICOM.Network.Services.CStoreService
  id: CStoreService
  parent: EvilDICOM.Network.Services
  children:
  - EvilDICOM.Network.Services.CStoreService.#ctor(EvilDICOM.Network.Services.DIMSEService)
  - EvilDICOM.Network.Services.CStoreService.CStorePayloadAction
  - EvilDICOM.Network.Services.CStoreService.OnRequestRecieved(EvilDICOM.Network.DIMSE.CStoreRequest,EvilDICOM.Network.Association)
  - EvilDICOM.Network.Services.CStoreService.OnResponseRecieved(EvilDICOM.Network.DIMSE.CStoreResponse,EvilDICOM.Network.Association)
  langs:
  - csharp
  - vb
  name: CStoreService
  nameWithType: CStoreService
  fullName: EvilDICOM.Network.Services.CStoreService
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Services/CStoreService.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: CStoreService
    path: ../EvilDICOM/Network/Services/CStoreService.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Services
  syntax:
    content: public class CStoreService
    content.vb: Public Class CStoreService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.Services.CStoreService.#ctor(EvilDICOM.Network.Services.DIMSEService)
  commentId: M:EvilDICOM.Network.Services.CStoreService.#ctor(EvilDICOM.Network.Services.DIMSEService)
  id: '#ctor(EvilDICOM.Network.Services.DIMSEService)'
  parent: EvilDICOM.Network.Services.CStoreService
  langs:
  - csharp
  - vb
  name: CStoreService(DIMSEService)
  nameWithType: CStoreService.CStoreService(DIMSEService)
  fullName: EvilDICOM.Network.Services.CStoreService.CStoreService(EvilDICOM.Network.Services.DIMSEService)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Services/CStoreService.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Network/Services/CStoreService.cs
    startLine: 19
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Services
  syntax:
    content: public CStoreService(DIMSEService dIMSEService)
    parameters:
    - id: dIMSEService
      type: EvilDICOM.Network.Services.DIMSEService
    content.vb: Public Sub New(dIMSEService As DIMSEService)
  overload: EvilDICOM.Network.Services.CStoreService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Services.CStoreService.CStorePayloadAction
  commentId: P:EvilDICOM.Network.Services.CStoreService.CStorePayloadAction
  id: CStorePayloadAction
  parent: EvilDICOM.Network.Services.CStoreService
  langs:
  - csharp
  - vb
  name: CStorePayloadAction
  nameWithType: CStoreService.CStorePayloadAction
  fullName: EvilDICOM.Network.Services.CStoreService.CStorePayloadAction
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Services/CStoreService.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: CStorePayloadAction
    path: ../EvilDICOM/Network/Services/CStoreService.cs
    startLine: 25
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Services
  syntax:
    content: public Func<DICOMObject, Association, bool> CStorePayloadAction { get; set; }
    parameters: []
    return:
      type: System.Func{EvilDICOM.Core.DICOMObject,EvilDICOM.Network.Association,System.Boolean}
    content.vb: Public Property CStorePayloadAction As Func(Of DICOMObject, Association, Boolean)
  overload: EvilDICOM.Network.Services.CStoreService.CStorePayloadAction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Services.CStoreService.OnRequestRecieved(EvilDICOM.Network.DIMSE.CStoreRequest,EvilDICOM.Network.Association)
  commentId: M:EvilDICOM.Network.Services.CStoreService.OnRequestRecieved(EvilDICOM.Network.DIMSE.CStoreRequest,EvilDICOM.Network.Association)
  id: OnRequestRecieved(EvilDICOM.Network.DIMSE.CStoreRequest,EvilDICOM.Network.Association)
  parent: EvilDICOM.Network.Services.CStoreService
  langs:
  - csharp
  - vb
  name: OnRequestRecieved(CStoreRequest, Association)
  nameWithType: CStoreService.OnRequestRecieved(CStoreRequest, Association)
  fullName: EvilDICOM.Network.Services.CStoreService.OnRequestRecieved(EvilDICOM.Network.DIMSE.CStoreRequest, EvilDICOM.Network.Association)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Services/CStoreService.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: OnRequestRecieved
    path: ../EvilDICOM/Network/Services/CStoreService.cs
    startLine: 27
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Services
  syntax:
    content: public void OnRequestRecieved(CStoreRequest req, Association asc)
    parameters:
    - id: req
      type: EvilDICOM.Network.DIMSE.CStoreRequest
    - id: asc
      type: EvilDICOM.Network.Association
    content.vb: Public Sub OnRequestRecieved(req As CStoreRequest, asc As Association)
  overload: EvilDICOM.Network.Services.CStoreService.OnRequestRecieved*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.Services.CStoreService.OnResponseRecieved(EvilDICOM.Network.DIMSE.CStoreResponse,EvilDICOM.Network.Association)
  commentId: M:EvilDICOM.Network.Services.CStoreService.OnResponseRecieved(EvilDICOM.Network.DIMSE.CStoreResponse,EvilDICOM.Network.Association)
  id: OnResponseRecieved(EvilDICOM.Network.DIMSE.CStoreResponse,EvilDICOM.Network.Association)
  parent: EvilDICOM.Network.Services.CStoreService
  langs:
  - csharp
  - vb
  name: OnResponseRecieved(CStoreResponse, Association)
  nameWithType: CStoreService.OnResponseRecieved(CStoreResponse, Association)
  fullName: EvilDICOM.Network.Services.CStoreService.OnResponseRecieved(EvilDICOM.Network.DIMSE.CStoreResponse, EvilDICOM.Network.Association)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/Services/CStoreService.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: OnResponseRecieved
    path: ../EvilDICOM/Network/Services/CStoreService.cs
    startLine: 61
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.Services
  syntax:
    content: public void OnResponseRecieved(CStoreResponse resp, Association asc)
    parameters:
    - id: resp
      type: EvilDICOM.Network.DIMSE.CStoreResponse
    - id: asc
      type: EvilDICOM.Network.Association
    content.vb: Public Sub OnResponseRecieved(resp As CStoreResponse, asc As Association)
  overload: EvilDICOM.Network.Services.CStoreService.OnResponseRecieved*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Network.Services
  commentId: N:EvilDICOM.Network.Services
  name: EvilDICOM.Network.Services
  nameWithType: EvilDICOM.Network.Services
  fullName: EvilDICOM.Network.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.Services.CStoreService.#ctor*
  commentId: Overload:EvilDICOM.Network.Services.CStoreService.#ctor
  name: CStoreService
  nameWithType: CStoreService.CStoreService
  fullName: EvilDICOM.Network.Services.CStoreService.CStoreService
- uid: EvilDICOM.Network.Services.DIMSEService
  commentId: T:EvilDICOM.Network.Services.DIMSEService
  parent: EvilDICOM.Network.Services
  name: DIMSEService
  nameWithType: DIMSEService
  fullName: EvilDICOM.Network.Services.DIMSEService
- uid: EvilDICOM.Network.Services.CStoreService.CStorePayloadAction*
  commentId: Overload:EvilDICOM.Network.Services.CStoreService.CStorePayloadAction
  name: CStorePayloadAction
  nameWithType: CStoreService.CStorePayloadAction
  fullName: EvilDICOM.Network.Services.CStoreService.CStorePayloadAction
- uid: System.Func{EvilDICOM.Core.DICOMObject,EvilDICOM.Network.Association,System.Boolean}
  commentId: T:System.Func{EvilDICOM.Core.DICOMObject,EvilDICOM.Network.Association,System.Boolean}
  parent: System
  definition: System.Func`3
  name: Func<DICOMObject, Association, Boolean>
  nameWithType: Func<DICOMObject, Association, Boolean>
  fullName: System.Func<EvilDICOM.Core.DICOMObject, EvilDICOM.Network.Association, System.Boolean>
  nameWithType.vb: Func(Of DICOMObject, Association, Boolean)
  fullName.vb: System.Func(Of EvilDICOM.Core.DICOMObject, EvilDICOM.Network.Association, System.Boolean)
  name.vb: Func(Of DICOMObject, Association, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Core.DICOMObject
    name: DICOMObject
    nameWithType: DICOMObject
    fullName: EvilDICOM.Core.DICOMObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Core.DICOMObject
    name: DICOMObject
    nameWithType: DICOMObject
    fullName: EvilDICOM.Core.DICOMObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Network.Association
    name: Association
    nameWithType: Association
    fullName: EvilDICOM.Network.Association
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.Services.CStoreService.OnRequestRecieved*
  commentId: Overload:EvilDICOM.Network.Services.CStoreService.OnRequestRecieved
  name: OnRequestRecieved
  nameWithType: CStoreService.OnRequestRecieved
  fullName: EvilDICOM.Network.Services.CStoreService.OnRequestRecieved
- uid: EvilDICOM.Network.DIMSE.CStoreRequest
  commentId: T:EvilDICOM.Network.DIMSE.CStoreRequest
  parent: EvilDICOM.Network.DIMSE
  name: CStoreRequest
  nameWithType: CStoreRequest
  fullName: EvilDICOM.Network.DIMSE.CStoreRequest
- uid: EvilDICOM.Network.Association
  commentId: T:EvilDICOM.Network.Association
  parent: EvilDICOM.Network
  name: Association
  nameWithType: Association
  fullName: EvilDICOM.Network.Association
- uid: EvilDICOM.Network.DIMSE
  commentId: N:EvilDICOM.Network.DIMSE
  name: EvilDICOM.Network.DIMSE
  nameWithType: EvilDICOM.Network.DIMSE
  fullName: EvilDICOM.Network.DIMSE
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: EvilDICOM.Network.Services.CStoreService.OnResponseRecieved*
  commentId: Overload:EvilDICOM.Network.Services.CStoreService.OnResponseRecieved
  name: OnResponseRecieved
  nameWithType: CStoreService.OnResponseRecieved
  fullName: EvilDICOM.Network.Services.CStoreService.OnResponseRecieved
- uid: EvilDICOM.Network.DIMSE.CStoreResponse
  commentId: T:EvilDICOM.Network.DIMSE.CStoreResponse
  parent: EvilDICOM.Network.DIMSE
  name: CStoreResponse
  nameWithType: CStoreResponse
  fullName: EvilDICOM.Network.DIMSE.CStoreResponse
