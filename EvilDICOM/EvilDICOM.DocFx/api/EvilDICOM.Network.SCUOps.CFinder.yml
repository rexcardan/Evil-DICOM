### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.SCUOps.CFinder
  commentId: T:EvilDICOM.Network.SCUOps.CFinder
  id: CFinder
  parent: EvilDICOM.Network.SCUOps
  children:
  - EvilDICOM.Network.SCUOps.CFinder.#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)
  - EvilDICOM.Network.SCUOps.CFinder.Find``1(``0)
  - EvilDICOM.Network.SCUOps.CFinder.FindDoses(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindImages(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  - EvilDICOM.Network.SCUOps.CFinder.FindImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindImages``1(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  - EvilDICOM.Network.SCUOps.CFinder.FindImages``1(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindInstances(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  - EvilDICOM.Network.SCUOps.CFinder.FindInstances(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindPatient(System.String,System.String,System.Nullable{System.DateTime})
  - EvilDICOM.Network.SCUOps.CFinder.FindPlans(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindRTImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindRTRecords(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindSeries(EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD)
  - EvilDICOM.Network.SCUOps.CFinder.FindSeries(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindStructures(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  - EvilDICOM.Network.SCUOps.CFinder.FindStudies(System.String)
  langs:
  - csharp
  - vb
  name: CFinder
  nameWithType: CFinder
  fullName: EvilDICOM.Network.SCUOps.CFinder
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: CFinder
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 20
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  summary: "\nA class to help with CFind and CMove operations\n"
  example: []
  syntax:
    content: public class CFinder
    content.vb: Public Class CFinder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.SCUOps.CFinder.#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)
  id: '#ctor(EvilDICOM.Network.DICOMSCU,EvilDICOM.Network.Entity)'
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: CFinder(DICOMSCU, Entity)
  nameWithType: CFinder.CFinder(DICOMSCU, Entity)
  fullName: EvilDICOM.Network.SCUOps.CFinder.CFinder(EvilDICOM.Network.DICOMSCU, EvilDICOM.Network.Entity)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 30
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  summary: "\nA Query builder constructor which requires a SCU and SCP entity\n"
  example: []
  syntax:
    content: public CFinder(DICOMSCU scu, Entity scp)
    parameters:
    - id: scu
      type: EvilDICOM.Network.DICOMSCU
      description: The SCU client which will perform the operations and queries
    - id: scp
      type: EvilDICOM.Network.Entity
      description: the SCP which will send the results
    content.vb: Public Sub New(scu As DICOMSCU, scp As Entity)
  overload: EvilDICOM.Network.SCUOps.CFinder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.SCUOps.CFinder.FindStudies(System.String)
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindStudies(System.String)
  id: FindStudies(System.String)
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindStudies(String)
  nameWithType: CFinder.FindStudies(String)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindStudies(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindStudies
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 36
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindStudyIOD> FindStudies(string patientId)
    parameters:
    - id: patientId
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD}
    content.vb: Public Function FindStudies(patientId As String) As IEnumerable(Of CFindStudyIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindStudies*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.SCUOps.CFinder.FindSeries(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindSeries(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD})
  id: FindSeries(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindSeries(IEnumerable<CFindStudyIOD>)
  nameWithType: CFinder.FindSeries(IEnumerable<CFindStudyIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindSeries(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindSeries
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 47
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindSeriesIOD> FindSeries(IEnumerable<CFindStudyIOD> studies)
    parameters:
    - id: studies
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    content.vb: Public Function FindSeries(studies As IEnumerable(Of CFindStudyIOD)) As IEnumerable(Of CFindSeriesIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindSeries*
  nameWithType.vb: CFinder.FindSeries(IEnumerable(Of CFindStudyIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindSeries(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD))
  name.vb: FindSeries(IEnumerable(Of CFindStudyIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindSeries(EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD)
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindSeries(EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD)
  id: FindSeries(EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD)
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindSeries(CFindStudyIOD)
  nameWithType: CFinder.FindSeries(CFindStudyIOD)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindSeries(EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindSeries
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 66
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindSeriesIOD> FindSeries(CFindStudyIOD study)
    parameters:
    - id: study
      type: EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    content.vb: Public Function FindSeries(study As CFindStudyIOD) As IEnumerable(Of CFindSeriesIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindSeries*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.SCUOps.CFinder.FindImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindImages(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindImages(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindImages(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindImages
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 71
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindInstanceIOD> FindImages(IEnumerable<CFindSeriesIOD> series)
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD}
    content.vb: Public Function FindImages(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of CFindInstanceIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindImages*
  nameWithType.vb: CFinder.FindImages(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindImages(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindImages(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindInstances(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindInstances(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  id: FindInstances(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindInstances(CFindSeriesIOD)
  nameWithType: CFinder.FindInstances(CFindSeriesIOD)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindInstances(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindInstances
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 111
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindInstanceIOD> FindInstances(CFindSeriesIOD ser)
    parameters:
    - id: ser
      type: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD}
    content.vb: Public Function FindInstances(ser As CFindSeriesIOD) As IEnumerable(Of CFindInstanceIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindInstances*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.SCUOps.CFinder.FindInstances(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindInstances(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindInstances(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindInstances(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindInstances(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindInstances(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindInstances
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 116
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindInstanceIOD> FindInstances(IEnumerable<CFindSeriesIOD> series)
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD}
    content.vb: Public Function FindInstances(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of CFindInstanceIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindInstances*
  nameWithType.vb: CFinder.FindInstances(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindInstances(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindInstances(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindImages(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindImages(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  id: FindImages(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindImages(CFindSeriesIOD)
  nameWithType: CFinder.FindImages(CFindSeriesIOD)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindImages(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindImages
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 141
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindInstanceIOD> FindImages(CFindSeriesIOD series)
    parameters:
    - id: series
      type: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD}
    content.vb: Public Function FindImages(series As CFindSeriesIOD) As IEnumerable(Of CFindInstanceIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindImages*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.SCUOps.CFinder.FindPatient(System.String,System.String,System.Nullable{System.DateTime})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindPatient(System.String,System.String,System.Nullable{System.DateTime})
  id: FindPatient(System.String,System.String,System.Nullable{System.DateTime})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindPatient(String, String, Nullable<DateTime>)
  nameWithType: CFinder.FindPatient(String, String, Nullable<DateTime>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindPatient(System.String, System.String, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindPatient
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 146
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindPatientIOD> FindPatient(string patientId = "", string patientName = "", DateTime? dob = default(DateTime? ))
    parameters:
    - id: patientId
      type: System.String
    - id: patientName
      type: System.String
    - id: dob
      type: System.Nullable{System.DateTime}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD}
    content.vb: Public Function FindPatient(patientId As String = "", patientName As String = "", dob As Date? = Nothing) As IEnumerable(Of CFindPatientIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindPatient*
  nameWithType.vb: CFinder.FindPatient(String, String, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindPatient(System.String, System.String, System.Nullable(Of System.DateTime))
  name.vb: FindPatient(String, String, Nullable(Of DateTime))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindImages``1(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindImages``1(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindImages``1(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindImages<T>(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindImages<T>(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindImages<T>(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindImages
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 156
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: >-
      public IEnumerable<T> FindImages<T>(IEnumerable<CFindSeriesIOD> series)
          where T : CFindInstanceIOD
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function FindImages(Of T As CFindInstanceIOD)(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of T)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindImages*
  nameWithType.vb: CFinder.FindImages(Of T)(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindImages(Of T)(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindImages(Of T)(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindImages``1(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindImages``1(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  id: FindImages``1(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindImages<T>(CFindSeriesIOD)
  nameWithType: CFinder.FindImages<T>(CFindSeriesIOD)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindImages<T>(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindImages
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 178
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: >-
      public IEnumerable<T> FindImages<T>(CFindSeriesIOD series)
          where T : CFindImageIOD
    parameters:
    - id: series
      type: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function FindImages(Of T As CFindImageIOD)(series As CFindSeriesIOD) As IEnumerable(Of T)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindImages*
  nameWithType.vb: CFinder.FindImages(Of T)(CFindSeriesIOD)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindImages(Of T)(EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  name.vb: FindImages(Of T)(CFindSeriesIOD)
- uid: EvilDICOM.Network.SCUOps.CFinder.FindPlans(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindPlans(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindPlans(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindPlans(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindPlans(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindPlans(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindPlans
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 183
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindPlanIOD> FindPlans(IEnumerable<CFindSeriesIOD> series)
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD}
    content.vb: Public Function FindPlans(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of CFindPlanIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindPlans*
  nameWithType.vb: CFinder.FindPlans(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindPlans(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindPlans(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindDoses(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindDoses(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindDoses(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindDoses(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindDoses(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindDoses(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindDoses
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 188
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindDoseIOD> FindDoses(IEnumerable<CFindSeriesIOD> series)
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD}
    content.vb: Public Function FindDoses(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of CFindDoseIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindDoses*
  nameWithType.vb: CFinder.FindDoses(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindDoses(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindDoses(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindStructures(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindStructures(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindStructures(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindStructures(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindStructures(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindStructures(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindStructures
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 193
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindInstanceIOD> FindStructures(IEnumerable<CFindSeriesIOD> series)
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD}
    content.vb: Public Function FindStructures(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of CFindInstanceIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindStructures*
  nameWithType.vb: CFinder.FindStructures(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindStructures(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindStructures(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindRTImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindRTImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindRTImages(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindRTImages(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindRTImages(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindRTImages(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindRTImages
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 198
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindRTImageIOD> FindRTImages(IEnumerable<CFindSeriesIOD> series)
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD}
    content.vb: Public Function FindRTImages(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of CFindRTImageIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindRTImages*
  nameWithType.vb: CFinder.FindRTImages(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindRTImages(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindRTImages(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.FindRTRecords(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.FindRTRecords(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  id: FindRTRecords(System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD})
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: FindRTRecords(IEnumerable<CFindSeriesIOD>)
  nameWithType: CFinder.FindRTRecords(IEnumerable<CFindSeriesIOD>)
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindRTRecords(System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: FindRTRecords
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 203
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: public IEnumerable<CFindTreatmentRecordIOD> FindRTRecords(IEnumerable<CFindSeriesIOD> series)
    parameters:
    - id: series
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
    return:
      type: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD}
    content.vb: Public Function FindRTRecords(series As IEnumerable(Of CFindSeriesIOD)) As IEnumerable(Of CFindTreatmentRecordIOD)
  overload: EvilDICOM.Network.SCUOps.CFinder.FindRTRecords*
  nameWithType.vb: CFinder.FindRTRecords(IEnumerable(Of CFindSeriesIOD))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.FindRTRecords(System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD))
  name.vb: FindRTRecords(IEnumerable(Of CFindSeriesIOD))
- uid: EvilDICOM.Network.SCUOps.CFinder.Find``1(``0)
  commentId: M:EvilDICOM.Network.SCUOps.CFinder.Find``1(``0)
  id: Find``1(``0)
  parent: EvilDICOM.Network.SCUOps.CFinder
  langs:
  - csharp
  - vb
  name: Find<T>(T)
  nameWithType: CFinder.Find<T>(T)
  fullName: EvilDICOM.Network.SCUOps.CFinder.Find<T>(T)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/SCUOps/CFinder.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Find
    path: ../EvilDICOM/Network/SCUOps/CFinder.cs
    startLine: 208
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.SCUOps
  syntax:
    content: >-
      public IEnumerable<T> Find<T>(T iodQuery)
          where T : CFindInstanceIOD
    parameters:
    - id: iodQuery
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function Find(Of T As CFindInstanceIOD)(iodQuery As T) As IEnumerable(Of T)
  overload: EvilDICOM.Network.SCUOps.CFinder.Find*
  nameWithType.vb: CFinder.Find(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Network.SCUOps.CFinder.Find(Of T)(T)
  name.vb: Find(Of T)(T)
references:
- uid: EvilDICOM.Network.SCUOps
  commentId: N:EvilDICOM.Network.SCUOps
  name: EvilDICOM.Network.SCUOps
  nameWithType: EvilDICOM.Network.SCUOps
  fullName: EvilDICOM.Network.SCUOps
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.SCUOps.CFinder.#ctor*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.#ctor
  name: CFinder
  nameWithType: CFinder.CFinder
  fullName: EvilDICOM.Network.SCUOps.CFinder.CFinder
- uid: EvilDICOM.Network.DICOMSCU
  commentId: T:EvilDICOM.Network.DICOMSCU
  parent: EvilDICOM.Network
  name: DICOMSCU
  nameWithType: DICOMSCU
  fullName: EvilDICOM.Network.DICOMSCU
- uid: EvilDICOM.Network.Entity
  commentId: T:EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  name: Entity
  nameWithType: Entity
  fullName: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: EvilDICOM.Network.SCUOps.CFinder.FindStudies*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindStudies
  name: FindStudies
  nameWithType: CFinder.FindStudies
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindStudies
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindStudyIOD>
  nameWithType: IEnumerable<CFindStudyIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD>
  nameWithType.vb: IEnumerable(Of CFindStudyIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD)
  name.vb: IEnumerable(Of CFindStudyIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
    name: CFindStudyIOD
    nameWithType: CFindStudyIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
    name: CFindStudyIOD
    nameWithType: CFindStudyIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Network.SCUOps.CFinder.FindSeries*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindSeries
  name: FindSeries
  nameWithType: CFinder.FindSeries
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindSeries
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindSeriesIOD>
  nameWithType: IEnumerable<CFindSeriesIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD>
  nameWithType.vb: IEnumerable(Of CFindSeriesIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD)
  name.vb: IEnumerable(Of CFindSeriesIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
    name: CFindSeriesIOD
    nameWithType: CFindSeriesIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
    name: CFindSeriesIOD
    nameWithType: CFindSeriesIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
  commentId: T:EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
  parent: EvilDICOM.Network.DIMSE.IOD
  name: CFindStudyIOD
  nameWithType: CFindStudyIOD
  fullName: EvilDICOM.Network.DIMSE.IOD.CFindStudyIOD
- uid: EvilDICOM.Network.DIMSE.IOD
  commentId: N:EvilDICOM.Network.DIMSE.IOD
  name: EvilDICOM.Network.DIMSE.IOD
  nameWithType: EvilDICOM.Network.DIMSE.IOD
  fullName: EvilDICOM.Network.DIMSE.IOD
- uid: EvilDICOM.Network.SCUOps.CFinder.FindImages*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindImages
  name: FindImages
  nameWithType: CFinder.FindImages
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindImages
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindInstanceIOD>
  nameWithType: IEnumerable<CFindInstanceIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD>
  nameWithType.vb: IEnumerable(Of CFindInstanceIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD)
  name.vb: IEnumerable(Of CFindInstanceIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD
    name: CFindInstanceIOD
    nameWithType: CFindInstanceIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD
    name: CFindInstanceIOD
    nameWithType: CFindInstanceIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindInstanceIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.SCUOps.CFinder.FindInstances*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindInstances
  name: FindInstances
  nameWithType: CFinder.FindInstances
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindInstances
- uid: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
  commentId: T:EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
  parent: EvilDICOM.Network.DIMSE.IOD
  name: CFindSeriesIOD
  nameWithType: CFindSeriesIOD
  fullName: EvilDICOM.Network.DIMSE.IOD.CFindSeriesIOD
- uid: EvilDICOM.Network.SCUOps.CFinder.FindPatient*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindPatient
  name: FindPatient
  nameWithType: CFinder.FindPatient
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindPatient
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindPatientIOD>
  nameWithType: IEnumerable<CFindPatientIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD>
  nameWithType.vb: IEnumerable(Of CFindPatientIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD)
  name.vb: IEnumerable(Of CFindPatientIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD
    name: CFindPatientIOD
    nameWithType: CFindPatientIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD
    name: CFindPatientIOD
    nameWithType: CFindPatientIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindPatientIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.SCUOps.CFinder.FindPlans*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindPlans
  name: FindPlans
  nameWithType: CFinder.FindPlans
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindPlans
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindPlanIOD>
  nameWithType: IEnumerable<CFindPlanIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD>
  nameWithType.vb: IEnumerable(Of CFindPlanIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD)
  name.vb: IEnumerable(Of CFindPlanIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD
    name: CFindPlanIOD
    nameWithType: CFindPlanIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD
    name: CFindPlanIOD
    nameWithType: CFindPlanIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindPlanIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.SCUOps.CFinder.FindDoses*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindDoses
  name: FindDoses
  nameWithType: CFinder.FindDoses
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindDoses
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindDoseIOD>
  nameWithType: IEnumerable<CFindDoseIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD>
  nameWithType.vb: IEnumerable(Of CFindDoseIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD)
  name.vb: IEnumerable(Of CFindDoseIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD
    name: CFindDoseIOD
    nameWithType: CFindDoseIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD
    name: CFindDoseIOD
    nameWithType: CFindDoseIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindDoseIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.SCUOps.CFinder.FindStructures*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindStructures
  name: FindStructures
  nameWithType: CFinder.FindStructures
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindStructures
- uid: EvilDICOM.Network.SCUOps.CFinder.FindRTImages*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindRTImages
  name: FindRTImages
  nameWithType: CFinder.FindRTImages
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindRTImages
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindRTImageIOD>
  nameWithType: IEnumerable<CFindRTImageIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD>
  nameWithType.vb: IEnumerable(Of CFindRTImageIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD)
  name.vb: IEnumerable(Of CFindRTImageIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD
    name: CFindRTImageIOD
    nameWithType: CFindRTImageIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD
    name: CFindRTImageIOD
    nameWithType: CFindRTImageIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindRTImageIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.SCUOps.CFinder.FindRTRecords*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.FindRTRecords
  name: FindRTRecords
  nameWithType: CFinder.FindRTRecords
  fullName: EvilDICOM.Network.SCUOps.CFinder.FindRTRecords
- uid: System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD}
  commentId: T:System.Collections.Generic.IEnumerable{EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CFindTreatmentRecordIOD>
  nameWithType: IEnumerable<CFindTreatmentRecordIOD>
  fullName: System.Collections.Generic.IEnumerable<EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD>
  nameWithType.vb: IEnumerable(Of CFindTreatmentRecordIOD)
  fullName.vb: System.Collections.Generic.IEnumerable(Of EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD)
  name.vb: IEnumerable(Of CFindTreatmentRecordIOD)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD
    name: CFindTreatmentRecordIOD
    nameWithType: CFindTreatmentRecordIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD
    name: CFindTreatmentRecordIOD
    nameWithType: CFindTreatmentRecordIOD
    fullName: EvilDICOM.Network.DIMSE.IOD.CFindTreatmentRecordIOD
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.SCUOps.CFinder.Find*
  commentId: Overload:EvilDICOM.Network.SCUOps.CFinder.Find
  name: Find
  nameWithType: CFinder.Find
  fullName: EvilDICOM.Network.SCUOps.CFinder.Find
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
