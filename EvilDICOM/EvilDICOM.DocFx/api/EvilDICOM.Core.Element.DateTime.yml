### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.Element.DateTime
  commentId: T:EvilDICOM.Core.Element.DateTime
  id: DateTime
  parent: EvilDICOM.Core.Element
  children:
  - EvilDICOM.Core.Element.DateTime.#ctor
  - EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime})
  - EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime}[])
  - EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.String)
  langs:
  - csharp
  - vb
  name: DateTime
  nameWithType: DateTime
  fullName: EvilDICOM.Core.Element.DateTime
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/DateTime.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DateTime
    path: ../EvilDICOM/Core/Element/DateTime.cs
    startLine: 13
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  summary: "\nEncapsulates the DateTime VR type\n"
  example: []
  syntax:
    content: 'public class DateTime : RangeableDateTime, IDICOMElement'
    content.vb: >-
      Public Class DateTime
          Inherits RangeableDateTime
          Implements IDICOMElement
  inheritance:
  - System.Object
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  - EvilDICOM.Core.Element.RangeableDateTime
  implements:
  - EvilDICOM.Core.Interfaces.IDICOMElement
  inheritedMembers:
  - EvilDICOM.Core.Element.RangeableDateTime.IsRange
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.VR
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Data
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Data_
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Tag
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DatType
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DData
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DData_
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.ToString
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.SetData(System.Nullable{System.DateTime})
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.SetData(System.Nullable{System.DateTime}[])
  - EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.GetDataOrDefault
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - EvilDICOM.Core.Interfaces.IDICOMElement.EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Enums.VR)
  - EvilDICOM.Core.Interfaces.IDICOMElement.EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.Element.DateTime.#ctor
  commentId: M:EvilDICOM.Core.Element.DateTime.#ctor
  id: '#ctor'
  parent: EvilDICOM.Core.Element.DateTime
  langs:
  - csharp
  - vb
  name: DateTime()
  nameWithType: DateTime.DateTime()
  fullName: EvilDICOM.Core.Element.DateTime.DateTime()
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/DateTime.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Core/Element/DateTime.cs
    startLine: 15
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public DateTime()
    content.vb: Public Sub New
  overload: EvilDICOM.Core.Element.DateTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.String)
  commentId: M:EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.String)
  id: '#ctor(EvilDICOM.Core.Element.Tag,System.String)'
  parent: EvilDICOM.Core.Element.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Tag, String)
  nameWithType: DateTime.DateTime(Tag, String)
  fullName: EvilDICOM.Core.Element.DateTime.DateTime(EvilDICOM.Core.Element.Tag, System.String)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/DateTime.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Core/Element/DateTime.cs
    startLine: 20
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public DateTime(Tag tag, string data)
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    - id: data
      type: System.String
    content.vb: Public Sub New(tag As Tag, data As String)
  overload: EvilDICOM.Core.Element.DateTime.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime})
  commentId: M:EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime})
  id: '#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime})'
  parent: EvilDICOM.Core.Element.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Tag, Nullable<DateTime>)
  nameWithType: DateTime.DateTime(Tag, Nullable<DateTime>)
  fullName: EvilDICOM.Core.Element.DateTime.DateTime(EvilDICOM.Core.Element.Tag, System.Nullable<System.DateTime>)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/DateTime.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Core/Element/DateTime.cs
    startLine: 26
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public DateTime(Tag tag, DateTime? data)
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    - id: data
      type: System.Nullable{System.DateTime}
    content.vb: Public Sub New(tag As Tag, data As Date?)
  overload: EvilDICOM.Core.Element.DateTime.#ctor*
  nameWithType.vb: DateTime.DateTime(Tag, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Element.DateTime.DateTime(EvilDICOM.Core.Element.Tag, System.Nullable(Of System.DateTime))
  name.vb: DateTime(Tag, Nullable(Of DateTime))
- uid: EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime}[])
  commentId: M:EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime}[])
  id: '#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.DateTime}[])'
  parent: EvilDICOM.Core.Element.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Tag, Nullable<DateTime>[])
  nameWithType: DateTime.DateTime(Tag, Nullable<DateTime>[])
  fullName: EvilDICOM.Core.Element.DateTime.DateTime(EvilDICOM.Core.Element.Tag, System.Nullable<System.DateTime>[])
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/Element/DateTime.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Core/Element/DateTime.cs
    startLine: 32
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.Element
  syntax:
    content: public DateTime(Tag tag, DateTime? [] data)
    parameters:
    - id: tag
      type: EvilDICOM.Core.Element.Tag
    - id: data
      type: System.Nullable{System.DateTime}[]
    content.vb: Public Sub New(tag As Tag, data As Date?())
  overload: EvilDICOM.Core.Element.DateTime.#ctor*
  nameWithType.vb: DateTime.DateTime(Tag, Nullable(Of DateTime)())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: EvilDICOM.Core.Element.DateTime.DateTime(EvilDICOM.Core.Element.Tag, System.Nullable(Of System.DateTime)())
  name.vb: DateTime(Tag, Nullable(Of DateTime)())
references:
- uid: EvilDICOM.Core.Element
  commentId: N:EvilDICOM.Core.Element
  name: EvilDICOM.Core.Element
  nameWithType: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  commentId: T:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  parent: EvilDICOM.Core.Element
  definition: EvilDICOM.Core.Element.AbstractElement`1
  name: AbstractElement<Nullable<DateTime>>
  nameWithType: AbstractElement<Nullable<DateTime>>
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime))
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime))
  name.vb: AbstractElement(Of Nullable(Of DateTime))
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.RangeableDateTime
  commentId: T:EvilDICOM.Core.Element.RangeableDateTime
  parent: EvilDICOM.Core.Element
  name: RangeableDateTime
  nameWithType: RangeableDateTime
  fullName: EvilDICOM.Core.Element.RangeableDateTime
- uid: EvilDICOM.Core.Interfaces.IDICOMElement
  commentId: T:EvilDICOM.Core.Interfaces.IDICOMElement
  parent: EvilDICOM.Core.Interfaces
  name: IDICOMElement
  nameWithType: IDICOMElement
  fullName: EvilDICOM.Core.Interfaces.IDICOMElement
- uid: EvilDICOM.Core.Element.RangeableDateTime.IsRange
  commentId: P:EvilDICOM.Core.Element.RangeableDateTime.IsRange
  parent: EvilDICOM.Core.Element.RangeableDateTime
  name: IsRange
  nameWithType: RangeableDateTime.IsRange
  fullName: EvilDICOM.Core.Element.RangeableDateTime.IsRange
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.VR
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.VR
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.VR
  name: VR
  nameWithType: AbstractElement<Nullable<DateTime>>.VR
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.VR
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).VR
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).VR
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Data
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Data
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Data
  name: Data
  nameWithType: AbstractElement<Nullable<DateTime>>.Data
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.Data
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).Data
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).Data
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Data_
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Data_
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Data_
  name: Data_
  nameWithType: AbstractElement<Nullable<DateTime>>.Data_
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.Data_
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).Data_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).Data_
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Tag
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.Tag
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.Tag
  name: Tag
  nameWithType: AbstractElement<Nullable<DateTime>>.Tag
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.Tag
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).Tag
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).Tag
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DatType
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DatType
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DatType
  name: DatType
  nameWithType: AbstractElement<Nullable<DateTime>>.DatType
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.DatType
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).DatType
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).DatType
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DData
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DData
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DData
  name: DData
  nameWithType: AbstractElement<Nullable<DateTime>>.DData
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.DData
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).DData
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).DData
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DData_
  commentId: P:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.DData_
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.DData_
  name: DData_
  nameWithType: AbstractElement<Nullable<DateTime>>.DData_
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.DData_
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).DData_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).DData_
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.ToString
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.ToString
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.ToString
  name: ToString()
  nameWithType: AbstractElement<Nullable<DateTime>>.ToString()
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.ToString()
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).ToString()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).ToString()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement<Nullable<DateTime>>.ToString
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement(Of Nullable(Of DateTime)).ToString
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.SetData(System.Nullable{System.DateTime})
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.SetData(System.Nullable{System.DateTime})
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
  name: SetData(Nullable<DateTime>)
  nameWithType: AbstractElement<Nullable<DateTime>>.SetData(Nullable<DateTime>)
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.SetData(System.Nullable<System.DateTime>)
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).SetData(Nullable(Of DateTime))
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).SetData(System.Nullable(Of System.DateTime))
  name.vb: SetData(Nullable(Of DateTime))
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement<Nullable<DateTime>>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement(Of Nullable(Of DateTime)).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.SetData(System.Nullable{System.DateTime}[])
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.SetData(System.Nullable{System.DateTime}[])
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
  name: SetData(Nullable<DateTime>[])
  nameWithType: AbstractElement<Nullable<DateTime>>.SetData(Nullable<DateTime>[])
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.SetData(System.Nullable<System.DateTime>[])
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).SetData(Nullable(Of DateTime)())
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).SetData(System.Nullable(Of System.DateTime)())
  name.vb: SetData(Nullable(Of DateTime)())
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement<Nullable<DateTime>>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement(Of Nullable(Of DateTime)).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).SetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.GetDataOrDefault
  commentId: M:EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}.GetDataOrDefault
  parent: EvilDICOM.Core.Element.AbstractElement{System.Nullable{System.DateTime}}
  definition: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  name: GetDataOrDefault()
  nameWithType: AbstractElement<Nullable<DateTime>>.GetDataOrDefault()
  fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.GetDataOrDefault()
  nameWithType.vb: AbstractElement(Of Nullable(Of DateTime)).GetDataOrDefault()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).GetDataOrDefault()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement<Nullable<DateTime>>.GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement<System.Nullable<System.DateTime>>.GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement(Of Nullable(Of DateTime)).GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement(Of System.Nullable(Of System.DateTime)).GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Interfaces.IDICOMElement.EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Enums.VR)
  commentId: M:EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Enums.VR)
  parent: EvilDICOM.Core.Extensions.IDICOMElementExtensions
  definition: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Enums.VR)
  name: IsVR(VR)
  nameWithType: IDICOMElementExtensions.IsVR(VR)
  fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Enums.VR)
  spec.csharp:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Enums.VR)
    name: IsVR
    nameWithType: IDICOMElementExtensions.IsVR
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.Enums.VR
    name: VR
    nameWithType: VR
    fullName: EvilDICOM.Core.Enums.VR
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Enums.VR)
    name: IsVR
    nameWithType: IDICOMElementExtensions.IsVR
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.Enums.VR
    name: VR
    nameWithType: VR
    fullName: EvilDICOM.Core.Enums.VR
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Interfaces.IDICOMElement.EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
  commentId: M:EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement(EvilDICOM.Core.Interfaces.IDICOMElement)
  parent: EvilDICOM.Core.Extensions.IDICOMElementExtensions
  definition: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement(EvilDICOM.Core.Interfaces.IDICOMElement)
  name: ToXElement()
  nameWithType: IDICOMElementExtensions.ToXElement()
  fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement()
  spec.csharp:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
    name: ToXElement
    nameWithType: IDICOMElementExtensions.ToXElement
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
    name: ToXElement
    nameWithType: IDICOMElementExtensions.ToXElement
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Core.Element.AbstractElement`1
  commentId: T:EvilDICOM.Core.Element.AbstractElement`1
  name: AbstractElement<T>
  nameWithType: AbstractElement<T>
  fullName: EvilDICOM.Core.Element.AbstractElement<T>
  nameWithType.vb: AbstractElement(Of T)
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T)
  name.vb: AbstractElement(Of T)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1
    name: AbstractElement
    nameWithType: AbstractElement
    fullName: EvilDICOM.Core.Element.AbstractElement
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Interfaces
  commentId: N:EvilDICOM.Core.Interfaces
  name: EvilDICOM.Core.Interfaces
  nameWithType: EvilDICOM.Core.Interfaces
  fullName: EvilDICOM.Core.Interfaces
- uid: EvilDICOM.Core.Element.AbstractElement`1.VR
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.VR
  name: VR
  nameWithType: AbstractElement<T>.VR
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.VR
  nameWithType.vb: AbstractElement(Of T).VR
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).VR
- uid: EvilDICOM.Core.Element.AbstractElement`1.Data
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.Data
  name: Data
  nameWithType: AbstractElement<T>.Data
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Data
  nameWithType.vb: AbstractElement(Of T).Data
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Data
- uid: EvilDICOM.Core.Element.AbstractElement`1.Data_
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.Data_
  name: Data_
  nameWithType: AbstractElement<T>.Data_
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Data_
  nameWithType.vb: AbstractElement(Of T).Data_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Data_
- uid: EvilDICOM.Core.Element.AbstractElement`1.Tag
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.Tag
  name: Tag
  nameWithType: AbstractElement<T>.Tag
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.Tag
  nameWithType.vb: AbstractElement(Of T).Tag
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).Tag
- uid: EvilDICOM.Core.Element.AbstractElement`1.DatType
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.DatType
  name: DatType
  nameWithType: AbstractElement<T>.DatType
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DatType
  nameWithType.vb: AbstractElement(Of T).DatType
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DatType
- uid: EvilDICOM.Core.Element.AbstractElement`1.DData
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.DData
  name: DData
  nameWithType: AbstractElement<T>.DData
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DData
  nameWithType.vb: AbstractElement(Of T).DData
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DData
- uid: EvilDICOM.Core.Element.AbstractElement`1.DData_
  commentId: P:EvilDICOM.Core.Element.AbstractElement`1.DData_
  name: DData_
  nameWithType: AbstractElement<T>.DData_
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.DData_
  nameWithType.vb: AbstractElement(Of T).DData_
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).DData_
- uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.ToString
  name: ToString()
  nameWithType: AbstractElement<T>.ToString()
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.ToString()
  nameWithType.vb: AbstractElement(Of T).ToString()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).ToString()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement<T>.ToString
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.ToString
    name: ToString
    nameWithType: AbstractElement(Of T).ToString
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
  name: SetData(T)
  nameWithType: AbstractElement<T>.SetData(T)
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData(T)
  nameWithType.vb: AbstractElement(Of T).SetData(T)
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).SetData(T)
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement<T>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0)
    name: SetData
    nameWithType: AbstractElement(Of T).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
  name: SetData(T[])
  nameWithType: AbstractElement<T>.SetData(T[])
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData(T[])
  nameWithType.vb: AbstractElement(Of T).SetData(T())
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).SetData(T())
  name.vb: SetData(T())
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement<T>.SetData
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.SetData(`0[])
    name: SetData
    nameWithType: AbstractElement(Of T).SetData
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).SetData
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  commentId: M:EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
  name: GetDataOrDefault()
  nameWithType: AbstractElement<T>.GetDataOrDefault()
  fullName: EvilDICOM.Core.Element.AbstractElement<T>.GetDataOrDefault()
  nameWithType.vb: AbstractElement(Of T).GetDataOrDefault()
  fullName.vb: EvilDICOM.Core.Element.AbstractElement(Of T).GetDataOrDefault()
  spec.csharp:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement<T>.GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement<T>.GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Element.AbstractElement`1.GetDataOrDefault
    name: GetDataOrDefault
    nameWithType: AbstractElement(Of T).GetDataOrDefault
    fullName: EvilDICOM.Core.Element.AbstractElement(Of T).GetDataOrDefault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Enums.VR)
  commentId: M:EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Enums.VR)
  name: IsVR(IDICOMElement, VR)
  nameWithType: IDICOMElementExtensions.IsVR(IDICOMElement, VR)
  fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement, EvilDICOM.Core.Enums.VR)
  spec.csharp:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Enums.VR)
    name: IsVR
    nameWithType: IDICOMElementExtensions.IsVR
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.Interfaces.IDICOMElement
    name: IDICOMElement
    nameWithType: IDICOMElement
    fullName: EvilDICOM.Core.Interfaces.IDICOMElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Core.Enums.VR
    name: VR
    nameWithType: VR
    fullName: EvilDICOM.Core.Enums.VR
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Enums.VR)
    name: IsVR
    nameWithType: IDICOMElementExtensions.IsVR
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.Interfaces.IDICOMElement
    name: IDICOMElement
    nameWithType: IDICOMElement
    fullName: EvilDICOM.Core.Interfaces.IDICOMElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EvilDICOM.Core.Enums.VR
    name: VR
    nameWithType: VR
    fullName: EvilDICOM.Core.Enums.VR
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions
  commentId: T:EvilDICOM.Core.Extensions.IDICOMElementExtensions
  parent: EvilDICOM.Core.Extensions
  name: IDICOMElementExtensions
  nameWithType: IDICOMElementExtensions
  fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions
- uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement(EvilDICOM.Core.Interfaces.IDICOMElement)
  commentId: M:EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement(EvilDICOM.Core.Interfaces.IDICOMElement)
  name: ToXElement(IDICOMElement)
  nameWithType: IDICOMElementExtensions.ToXElement(IDICOMElement)
  fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement(EvilDICOM.Core.Interfaces.IDICOMElement)
  spec.csharp:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement(EvilDICOM.Core.Interfaces.IDICOMElement)
    name: ToXElement
    nameWithType: IDICOMElementExtensions.ToXElement
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.Interfaces.IDICOMElement
    name: IDICOMElement
    nameWithType: IDICOMElement
    fullName: EvilDICOM.Core.Interfaces.IDICOMElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement(EvilDICOM.Core.Interfaces.IDICOMElement)
    name: ToXElement
    nameWithType: IDICOMElementExtensions.ToXElement
    fullName: EvilDICOM.Core.Extensions.IDICOMElementExtensions.ToXElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: EvilDICOM.Core.Interfaces.IDICOMElement
    name: IDICOMElement
    nameWithType: IDICOMElement
    fullName: EvilDICOM.Core.Interfaces.IDICOMElement
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.Extensions
  commentId: N:EvilDICOM.Core.Extensions
  name: EvilDICOM.Core.Extensions
  nameWithType: EvilDICOM.Core.Extensions
  fullName: EvilDICOM.Core.Extensions
- uid: EvilDICOM.Core.Element.DateTime.#ctor*
  commentId: Overload:EvilDICOM.Core.Element.DateTime.#ctor
  name: DateTime
  nameWithType: DateTime.DateTime
  fullName: EvilDICOM.Core.Element.DateTime.DateTime
- uid: EvilDICOM.Core.Element.Tag
  commentId: T:EvilDICOM.Core.Element.Tag
  parent: EvilDICOM.Core.Element
  name: Tag
  nameWithType: Tag
  fullName: EvilDICOM.Core.Element.Tag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}[]
  isExternal: true
  name: Nullable<DateTime>[]
  nameWithType: Nullable<DateTime>[]
  fullName: System.Nullable<System.DateTime>[]
  nameWithType.vb: Nullable(Of DateTime)()
  fullName.vb: System.Nullable(Of System.DateTime)()
  name.vb: Nullable(Of DateTime)()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
