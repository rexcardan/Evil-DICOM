### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Core.IO.Data.StringDataParser
  commentId: T:EvilDICOM.Core.IO.Data.StringDataParser
  id: StringDataParser
  parent: EvilDICOM.Core.IO.Data
  children:
  - EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate(System.String)
  - EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString(System.String)
  - EvilDICOM.Core.IO.Data.StringDataParser.ParseDate(System.String)
  - EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime(System.String)
  - EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString(System.String)
  - EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString(System.String)
  - EvilDICOM.Core.IO.Data.StringDataParser.ParseTime(System.String)
  langs:
  - csharp
  - vb
  name: StringDataParser
  nameWithType: StringDataParser
  fullName: EvilDICOM.Core.IO.Data.StringDataParser
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: StringDataParser
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public class StringDataParser
    content.vb: Public Class StringDataParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString(System.String)
  id: ParseAgeString(System.String)
  parent: EvilDICOM.Core.IO.Data.StringDataParser
  langs:
  - csharp
  - vb
  name: ParseAgeString(String)
  nameWithType: StringDataParser.ParseAgeString(String)
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ParseAgeString
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 17
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static Age ParseAgeString(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: EvilDICOM.Core.Element.Age
    content.vb: Public Shared Function ParseAgeString(data As String) As Age
  overload: EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseDate(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataParser.ParseDate(System.String)
  id: ParseDate(System.String)
  parent: EvilDICOM.Core.IO.Data.StringDataParser
  langs:
  - csharp
  - vb
  name: ParseDate(String)
  nameWithType: StringDataParser.ParseDate(String)
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseDate(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ParseDate
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 41
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static DateTime? ParseDate(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Function ParseDate(data As String) As Date?
  overload: EvilDICOM.Core.IO.Data.StringDataParser.ParseDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime(System.String)
  id: ParseDateTime(System.String)
  parent: EvilDICOM.Core.IO.Data.StringDataParser
  langs:
  - csharp
  - vb
  name: ParseDateTime(String)
  nameWithType: StringDataParser.ParseDateTime(String)
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ParseDateTime
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 55
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static DateTime? ParseDateTime(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Function ParseDateTime(data As String) As Date?
  overload: EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString(System.String)
  id: ParseDecimalString(System.String)
  parent: EvilDICOM.Core.IO.Data.StringDataParser
  langs:
  - csharp
  - vb
  name: ParseDecimalString(String)
  nameWithType: StringDataParser.ParseDecimalString(String)
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ParseDecimalString
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 84
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static double[] ParseDecimalString(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: System.Double[]
    content.vb: Public Shared Function ParseDecimalString(data As String) As Double()
  overload: EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString(System.String)
  id: ParseIntegerString(System.String)
  parent: EvilDICOM.Core.IO.Data.StringDataParser
  langs:
  - csharp
  - vb
  name: ParseIntegerString(String)
  nameWithType: StringDataParser.ParseIntegerString(String)
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ParseIntegerString
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 97
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static int[] ParseIntegerString(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: System.Int32[]
    content.vb: Public Shared Function ParseIntegerString(data As String) As Integer()
  overload: EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseTime(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataParser.ParseTime(System.String)
  id: ParseTime(System.String)
  parent: EvilDICOM.Core.IO.Data.StringDataParser
  langs:
  - csharp
  - vb
  name: ParseTime(String)
  nameWithType: StringDataParser.ParseTime(String)
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseTime(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ParseTime
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 108
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  syntax:
    content: public static DateTime? ParseTime(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Function ParseTime(data As String) As Date?
  overload: EvilDICOM.Core.IO.Data.StringDataParser.ParseTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate(System.String)
  commentId: M:EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate(System.String)
  id: GetNullableDate(System.String)
  parent: EvilDICOM.Core.IO.Data.StringDataParser
  langs:
  - csharp
  - vb
  name: GetNullableDate(String)
  nameWithType: StringDataParser.GetNullableDate(String)
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate(System.String)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Core/IO/Data/StringDataParser.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: GetNullableDate
    path: ../EvilDICOM/Core/IO/Data/StringDataParser.cs
    startLine: 139
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Core.IO.Data
  summary: "\nUsed in XML parsing\n"
  example: []
  syntax:
    content: public static DateTime? GetNullableDate(string data)
    parameters:
    - id: data
      type: System.String
      description: ''
    return:
      type: System.Nullable{System.DateTime}
      description: ''
    content.vb: Public Shared Function GetNullableDate(data As String) As Date?
  overload: EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.Core.IO.Data
  commentId: N:EvilDICOM.Core.IO.Data
  name: EvilDICOM.Core.IO.Data
  nameWithType: EvilDICOM.Core.IO.Data
  fullName: EvilDICOM.Core.IO.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString
  name: ParseAgeString
  nameWithType: StringDataParser.ParseAgeString
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: EvilDICOM.Core.Element.Age
  commentId: T:EvilDICOM.Core.Element.Age
  parent: EvilDICOM.Core.Element
  name: Age
  nameWithType: Age
  fullName: EvilDICOM.Core.Element.Age
- uid: EvilDICOM.Core.Element
  commentId: N:EvilDICOM.Core.Element
  name: EvilDICOM.Core.Element
  nameWithType: EvilDICOM.Core.Element
  fullName: EvilDICOM.Core.Element
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseDate*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataParser.ParseDate
  name: ParseDate
  nameWithType: StringDataParser.ParseDate
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime
  name: ParseDateTime
  nameWithType: StringDataParser.ParseDateTime
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString
  name: ParseDecimalString
  nameWithType: StringDataParser.ParseDecimalString
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString
  name: ParseIntegerString
  nameWithType: StringDataParser.ParseIntegerString
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Core.IO.Data.StringDataParser.ParseTime*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataParser.ParseTime
  name: ParseTime
  nameWithType: StringDataParser.ParseTime
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.ParseTime
- uid: EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate*
  commentId: Overload:EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate
  name: GetNullableDate
  nameWithType: StringDataParser.GetNullableDate
  fullName: EvilDICOM.Core.IO.Data.StringDataParser.GetNullableDate
