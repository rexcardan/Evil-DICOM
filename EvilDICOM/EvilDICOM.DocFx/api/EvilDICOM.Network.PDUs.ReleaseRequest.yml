### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.PDUs.ReleaseRequest
  commentId: T:EvilDICOM.Network.PDUs.ReleaseRequest
  id: ReleaseRequest
  parent: EvilDICOM.Network.PDUs
  children:
  - EvilDICOM.Network.PDUs.ReleaseRequest.ToString
  - EvilDICOM.Network.PDUs.ReleaseRequest.Type
  - EvilDICOM.Network.PDUs.ReleaseRequest.Write
  langs:
  - csharp
  - vb
  name: ReleaseRequest
  nameWithType: ReleaseRequest
  fullName: EvilDICOM.Network.PDUs.ReleaseRequest
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/ReleaseRequest.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ReleaseRequest
    path: ../EvilDICOM/Network/PDUs/ReleaseRequest.cs
    startLine: 9
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs
  syntax:
    content: 'public class ReleaseRequest : IPDU'
    content.vb: >-
      Public Class ReleaseRequest
          Implements IPDU
  inheritance:
  - System.Object
  implements:
  - EvilDICOM.Network.Interfaces.IPDU
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.Network.PDUs.ReleaseRequest.Write
  commentId: M:EvilDICOM.Network.PDUs.ReleaseRequest.Write
  id: Write
  parent: EvilDICOM.Network.PDUs.ReleaseRequest
  langs:
  - csharp
  - vb
  name: Write()
  nameWithType: ReleaseRequest.Write()
  fullName: EvilDICOM.Network.PDUs.ReleaseRequest.Write()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/ReleaseRequest.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Write
    path: ../EvilDICOM/Network/PDUs/ReleaseRequest.cs
    startLine: 11
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs
  syntax:
    content: public byte[] Write()
    return:
      type: System.Byte[]
    content.vb: Public Function Write As Byte()
  overload: EvilDICOM.Network.PDUs.ReleaseRequest.Write*
  implements:
  - EvilDICOM.Network.Interfaces.IPDU.Write
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.PDUs.ReleaseRequest.Type
  commentId: P:EvilDICOM.Network.PDUs.ReleaseRequest.Type
  id: Type
  parent: EvilDICOM.Network.PDUs.ReleaseRequest
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ReleaseRequest.Type
  fullName: EvilDICOM.Network.PDUs.ReleaseRequest.Type
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/ReleaseRequest.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Type
    path: ../EvilDICOM/Network/PDUs/ReleaseRequest.cs
    startLine: 16
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs
  syntax:
    content: public PDUType Type { get; }
    parameters: []
    return:
      type: EvilDICOM.Network.Enums.PDUType
    content.vb: Public ReadOnly Property Type As PDUType
  overload: EvilDICOM.Network.PDUs.ReleaseRequest.Type*
  implements:
  - EvilDICOM.Network.Interfaces.IPDU.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: EvilDICOM.Network.PDUs.ReleaseRequest.ToString
  commentId: M:EvilDICOM.Network.PDUs.ReleaseRequest.ToString
  id: ToString
  parent: EvilDICOM.Network.PDUs.ReleaseRequest
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReleaseRequest.ToString()
  fullName: EvilDICOM.Network.PDUs.ReleaseRequest.ToString()
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/PDUs/ReleaseRequest.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ToString
    path: ../EvilDICOM/Network/PDUs/ReleaseRequest.cs
    startLine: 21
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network.PDUs
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: EvilDICOM.Network.PDUs.ReleaseRequest.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: EvilDICOM.Network.PDUs
  commentId: N:EvilDICOM.Network.PDUs
  name: EvilDICOM.Network.PDUs
  nameWithType: EvilDICOM.Network.PDUs
  fullName: EvilDICOM.Network.PDUs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: EvilDICOM.Network.Interfaces.IPDU
  commentId: T:EvilDICOM.Network.Interfaces.IPDU
  parent: EvilDICOM.Network.Interfaces
  name: IPDU
  nameWithType: IPDU
  fullName: EvilDICOM.Network.Interfaces.IPDU
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.Interfaces
  commentId: N:EvilDICOM.Network.Interfaces
  name: EvilDICOM.Network.Interfaces
  nameWithType: EvilDICOM.Network.Interfaces
  fullName: EvilDICOM.Network.Interfaces
- uid: EvilDICOM.Network.PDUs.ReleaseRequest.Write*
  commentId: Overload:EvilDICOM.Network.PDUs.ReleaseRequest.Write
  name: Write
  nameWithType: ReleaseRequest.Write
  fullName: EvilDICOM.Network.PDUs.ReleaseRequest.Write
- uid: EvilDICOM.Network.Interfaces.IPDU.Write
  commentId: M:EvilDICOM.Network.Interfaces.IPDU.Write
  parent: EvilDICOM.Network.Interfaces.IPDU
  name: Write()
  nameWithType: IPDU.Write()
  fullName: EvilDICOM.Network.Interfaces.IPDU.Write()
  spec.csharp:
  - uid: EvilDICOM.Network.Interfaces.IPDU.Write
    name: Write
    nameWithType: IPDU.Write
    fullName: EvilDICOM.Network.Interfaces.IPDU.Write
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EvilDICOM.Network.Interfaces.IPDU.Write
    name: Write
    nameWithType: IPDU.Write
    fullName: EvilDICOM.Network.Interfaces.IPDU.Write
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: EvilDICOM.Network.PDUs.ReleaseRequest.Type*
  commentId: Overload:EvilDICOM.Network.PDUs.ReleaseRequest.Type
  name: Type
  nameWithType: ReleaseRequest.Type
  fullName: EvilDICOM.Network.PDUs.ReleaseRequest.Type
- uid: EvilDICOM.Network.Interfaces.IPDU.Type
  commentId: P:EvilDICOM.Network.Interfaces.IPDU.Type
  parent: EvilDICOM.Network.Interfaces.IPDU
  name: Type
  nameWithType: IPDU.Type
  fullName: EvilDICOM.Network.Interfaces.IPDU.Type
- uid: EvilDICOM.Network.Enums.PDUType
  commentId: T:EvilDICOM.Network.Enums.PDUType
  parent: EvilDICOM.Network.Enums
  name: PDUType
  nameWithType: PDUType
  fullName: EvilDICOM.Network.Enums.PDUType
- uid: EvilDICOM.Network.Enums
  commentId: N:EvilDICOM.Network.Enums
  name: EvilDICOM.Network.Enums
  nameWithType: EvilDICOM.Network.Enums
  fullName: EvilDICOM.Network.Enums
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EvilDICOM.Network.PDUs.ReleaseRequest.ToString*
  commentId: Overload:EvilDICOM.Network.PDUs.ReleaseRequest.ToString
  name: ToString
  nameWithType: ReleaseRequest.ToString
  fullName: EvilDICOM.Network.PDUs.ReleaseRequest.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
