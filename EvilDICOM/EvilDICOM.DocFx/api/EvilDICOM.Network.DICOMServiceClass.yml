### YamlMime:ManagedReference
items:
- uid: EvilDICOM.Network.DICOMServiceClass
  commentId: T:EvilDICOM.Network.DICOMServiceClass
  id: DICOMServiceClass
  parent: EvilDICOM.Network
  children:
  - EvilDICOM.Network.DICOMServiceClass.#ctor(EvilDICOM.Network.Entity)
  - EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  - EvilDICOM.Network.DICOMServiceClass.AssociationService
  - EvilDICOM.Network.DICOMServiceClass.DIMSEService
  - EvilDICOM.Network.DICOMServiceClass.Logger
  - EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  - EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  langs:
  - csharp
  - vb
  name: DICOMServiceClass
  nameWithType: DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DICOMServiceClass
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 12
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public abstract class DICOMServiceClass
    content.vb: Public MustInherit Class DICOMServiceClass
  inheritance:
  - System.Object
  derivedClasses:
  - EvilDICOM.Network.DICOMSCP
  - EvilDICOM.Network.DICOMSCU
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: EvilDICOM.Network.DICOMServiceClass.#ctor(EvilDICOM.Network.Entity)
  commentId: M:EvilDICOM.Network.DICOMServiceClass.#ctor(EvilDICOM.Network.Entity)
  id: '#ctor(EvilDICOM.Network.Entity)'
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: DICOMServiceClass(Entity)
  nameWithType: DICOMServiceClass.DICOMServiceClass(Entity)
  fullName: EvilDICOM.Network.DICOMServiceClass.DICOMServiceClass(EvilDICOM.Network.Entity)
  type: Constructor
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: .ctor
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 14
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DICOMServiceClass(Entity ae)
    parameters:
    - id: ae
      type: EvilDICOM.Network.Entity
    content.vb: Public Sub New(ae As Entity)
  overload: EvilDICOM.Network.DICOMServiceClass.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMServiceClass.AssociationService
  commentId: P:EvilDICOM.Network.DICOMServiceClass.AssociationService
  id: AssociationService
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: AssociationService
  nameWithType: DICOMServiceClass.AssociationService
  fullName: EvilDICOM.Network.DICOMServiceClass.AssociationService
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: AssociationService
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 28
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public AssociationService AssociationService { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Services.AssociationService
    content.vb: Public Property AssociationService As AssociationService
  overload: EvilDICOM.Network.DICOMServiceClass.AssociationService*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMServiceClass.DIMSEService
  commentId: P:EvilDICOM.Network.DICOMServiceClass.DIMSEService
  id: DIMSEService
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: DIMSEService
  nameWithType: DICOMServiceClass.DIMSEService
  fullName: EvilDICOM.Network.DICOMServiceClass.DIMSEService
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: DIMSEService
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 29
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public DIMSEService DIMSEService { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Services.DIMSEService
    content.vb: Public Property DIMSEService As DIMSEService
  overload: EvilDICOM.Network.DICOMServiceClass.DIMSEService*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  commentId: P:EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  id: ApplicationEntity
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: ApplicationEntity
  nameWithType: DICOMServiceClass.ApplicationEntity
  fullName: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: ApplicationEntity
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 30
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public Entity ApplicationEntity { get; set; }
    parameters: []
    return:
      type: EvilDICOM.Network.Entity
    content.vb: Public Property ApplicationEntity As Entity
  overload: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  commentId: P:EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  id: SupportedTransferSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: SupportedTransferSyntaxes
  nameWithType: DICOMServiceClass.SupportedTransferSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SupportedTransferSyntaxes
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 31
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public List<string> SupportedTransferSyntaxes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property SupportedTransferSyntaxes As List(Of String)
  overload: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  commentId: P:EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  id: SupportedAbstractSyntaxes
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: SupportedAbstractSyntaxes
  nameWithType: DICOMServiceClass.SupportedAbstractSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: SupportedAbstractSyntaxes
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 32
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public List<string> SupportedAbstractSyntaxes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property SupportedAbstractSyntaxes As List(Of String)
  overload: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: EvilDICOM.Network.DICOMServiceClass.Logger
  commentId: P:EvilDICOM.Network.DICOMServiceClass.Logger
  id: Logger
  parent: EvilDICOM.Network.DICOMServiceClass
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: DICOMServiceClass.Logger
  fullName: EvilDICOM.Network.DICOMServiceClass.Logger
  type: Property
  source:
    remote:
      path: EvilDICOM/EvilDICOM/Network/DICOMServiceClass.cs
      branch: master
      repo: https://github.com/isachpaz/Evil-DICOM.git
    id: Logger
    path: ../EvilDICOM/Network/DICOMServiceClass.cs
    startLine: 33
  assemblies:
  - EvilDICOM
  namespace: EvilDICOM.Network
  syntax:
    content: public ILogger Logger { get; set; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Property Logger As ILogger
  overload: EvilDICOM.Network.DICOMServiceClass.Logger*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: EvilDICOM.Network
  commentId: N:EvilDICOM.Network
  name: EvilDICOM.Network
  nameWithType: EvilDICOM.Network
  fullName: EvilDICOM.Network
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.Network.DICOMServiceClass.#ctor*
  commentId: Overload:EvilDICOM.Network.DICOMServiceClass.#ctor
  name: DICOMServiceClass
  nameWithType: DICOMServiceClass.DICOMServiceClass
  fullName: EvilDICOM.Network.DICOMServiceClass.DICOMServiceClass
- uid: EvilDICOM.Network.Entity
  commentId: T:EvilDICOM.Network.Entity
  parent: EvilDICOM.Network
  name: Entity
  nameWithType: Entity
  fullName: EvilDICOM.Network.Entity
- uid: EvilDICOM.Network.DICOMServiceClass.AssociationService*
  commentId: Overload:EvilDICOM.Network.DICOMServiceClass.AssociationService
  name: AssociationService
  nameWithType: DICOMServiceClass.AssociationService
  fullName: EvilDICOM.Network.DICOMServiceClass.AssociationService
- uid: EvilDICOM.Network.Services.AssociationService
  commentId: T:EvilDICOM.Network.Services.AssociationService
  parent: EvilDICOM.Network.Services
  name: AssociationService
  nameWithType: AssociationService
  fullName: EvilDICOM.Network.Services.AssociationService
- uid: EvilDICOM.Network.Services
  commentId: N:EvilDICOM.Network.Services
  name: EvilDICOM.Network.Services
  nameWithType: EvilDICOM.Network.Services
  fullName: EvilDICOM.Network.Services
- uid: EvilDICOM.Network.DICOMServiceClass.DIMSEService*
  commentId: Overload:EvilDICOM.Network.DICOMServiceClass.DIMSEService
  name: DIMSEService
  nameWithType: DICOMServiceClass.DIMSEService
  fullName: EvilDICOM.Network.DICOMServiceClass.DIMSEService
- uid: EvilDICOM.Network.Services.DIMSEService
  commentId: T:EvilDICOM.Network.Services.DIMSEService
  parent: EvilDICOM.Network.Services
  name: DIMSEService
  nameWithType: DIMSEService
  fullName: EvilDICOM.Network.Services.DIMSEService
- uid: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity*
  commentId: Overload:EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
  name: ApplicationEntity
  nameWithType: DICOMServiceClass.ApplicationEntity
  fullName: EvilDICOM.Network.DICOMServiceClass.ApplicationEntity
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes*
  commentId: Overload:EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
  name: SupportedTransferSyntaxes
  nameWithType: DICOMServiceClass.SupportedTransferSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedTransferSyntaxes
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes*
  commentId: Overload:EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
  name: SupportedAbstractSyntaxes
  nameWithType: DICOMServiceClass.SupportedAbstractSyntaxes
  fullName: EvilDICOM.Network.DICOMServiceClass.SupportedAbstractSyntaxes
- uid: EvilDICOM.Network.DICOMServiceClass.Logger*
  commentId: Overload:EvilDICOM.Network.DICOMServiceClass.Logger
  name: Logger
  nameWithType: DICOMServiceClass.Logger
  fullName: EvilDICOM.Network.DICOMServiceClass.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
