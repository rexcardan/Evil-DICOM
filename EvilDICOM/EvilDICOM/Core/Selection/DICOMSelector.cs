using System.Collections.Generic;
using System.Linq;
using EvilDICOM.Core.Element;

#pragma warning disable 1591

namespace EvilDICOM.Core.Selection
{
    public class DICOMSelector
    {
        private readonly DICOMObject _dicom;

        public DICOMSelector(DICOMObject d)
        {
            _dicom = d;
        }

        public DICOMObject ToDICOMObject()
        {
            return _dicom;
        }

        public AbstractElement<T> Forge<T>(AbstractElement<T> el)
        {
            _dicom.ReplaceOrAdd(el);
            return el;
        }

        #region SELECTORS

        public UnsignedLong CommandGroupLength
        {
            get { return _dicom.FindFirst("00000000") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> CommandGroupLength_
        {
            get { return _dicom.FindAll("00000000").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong CommandLengthToEndRetired
        {
            get { return _dicom.FindFirst("00000001") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> CommandLengthToEndRetired_
        {
            get { return _dicom.FindAll("00000001").Select(d => d as UnsignedLong).ToList(); }
        }

        public UniqueIdentifier AffectedSOPClassUID
        {
            get { return _dicom.FindFirst("00000002") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> AffectedSOPClassUID_
        {
            get { return _dicom.FindAll("00000002").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier RequestedSOPClassUID
        {
            get { return _dicom.FindFirst("00000003") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> RequestedSOPClassUID_
        {
            get { return _dicom.FindAll("00000003").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public ShortString CommandRecognitionCodeRetired
        {
            get { return _dicom.FindFirst("00000010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CommandRecognitionCodeRetired_
        {
            get { return _dicom.FindAll("00000010").Select(d => d as ShortString).ToList(); }
        }

        public UnsignedShort CommandField
        {
            get { return _dicom.FindFirst("00000100") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CommandField_
        {
            get { return _dicom.FindAll("00000100").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MessageID
        {
            get { return _dicom.FindFirst("00000110") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MessageID_
        {
            get { return _dicom.FindAll("00000110").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MessageIDBeingRespondedTo
        {
            get { return _dicom.FindFirst("00000120") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MessageIDBeingRespondedTo_
        {
            get { return _dicom.FindAll("00000120").Select(d => d as UnsignedShort).ToList(); }
        }

        public ApplicationEntity InitiatorRetired
        {
            get { return _dicom.FindFirst("00000200") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> InitiatorRetired_
        {
            get { return _dicom.FindAll("00000200").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ApplicationEntity ReceiverRetired
        {
            get { return _dicom.FindFirst("00000300") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> ReceiverRetired_
        {
            get { return _dicom.FindAll("00000300").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ApplicationEntity FindLocationRetired
        {
            get { return _dicom.FindFirst("00000400") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> FindLocationRetired_
        {
            get { return _dicom.FindAll("00000400").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ApplicationEntity MoveDestination
        {
            get { return _dicom.FindFirst("00000600") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> MoveDestination_
        {
            get { return _dicom.FindAll("00000600").Select(d => d as ApplicationEntity).ToList(); }
        }

        public UnsignedShort Priority
        {
            get { return _dicom.FindFirst("00000700") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Priority_
        {
            get { return _dicom.FindAll("00000700").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort CommandDataSetType
        {
            get { return _dicom.FindFirst("00000800") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CommandDataSetType_
        {
            get { return _dicom.FindAll("00000800").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfMatchesRetired
        {
            get { return _dicom.FindFirst("00000850") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfMatchesRetired_
        {
            get { return _dicom.FindAll("00000850").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ResponseSequenceNumberRetired
        {
            get { return _dicom.FindFirst("00000860") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ResponseSequenceNumberRetired_
        {
            get { return _dicom.FindAll("00000860").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort Status
        {
            get { return _dicom.FindFirst("00000900") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Status_
        {
            get { return _dicom.FindAll("00000900").Select(d => d as UnsignedShort).ToList(); }
        }

        public AttributeTag OffendingElement
        {
            get { return _dicom.FindFirst("00000901") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> OffendingElement_
        {
            get { return _dicom.FindAll("00000901").Select(d => d as AttributeTag).ToList(); }
        }

        public LongString ErrorComment
        {
            get { return _dicom.FindFirst("00000902") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ErrorComment_
        {
            get { return _dicom.FindAll("00000902").Select(d => d as LongString).ToList(); }
        }

        public UnsignedShort ErrorID
        {
            get { return _dicom.FindFirst("00000903") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ErrorID_
        {
            get { return _dicom.FindAll("00000903").Select(d => d as UnsignedShort).ToList(); }
        }

        public UniqueIdentifier AffectedSOPInstanceUID
        {
            get { return _dicom.FindFirst("00001000") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> AffectedSOPInstanceUID_
        {
            get { return _dicom.FindAll("00001000").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier RequestedSOPInstanceUID
        {
            get { return _dicom.FindFirst("00001001") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> RequestedSOPInstanceUID_
        {
            get { return _dicom.FindAll("00001001").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UnsignedShort EventTypeID
        {
            get { return _dicom.FindFirst("00001002") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> EventTypeID_
        {
            get { return _dicom.FindAll("00001002").Select(d => d as UnsignedShort).ToList(); }
        }

        public AttributeTag AttributeIdentifierList
        {
            get { return _dicom.FindFirst("00001005") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> AttributeIdentifierList_
        {
            get { return _dicom.FindAll("00001005").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort ActionTypeID
        {
            get { return _dicom.FindFirst("00001008") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ActionTypeID_
        {
            get { return _dicom.FindAll("00001008").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfRemainingSuboperations
        {
            get { return _dicom.FindFirst("00001020") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfRemainingSuboperations_
        {
            get { return _dicom.FindAll("00001020").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfCompletedSuboperations
        {
            get { return _dicom.FindFirst("00001021") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfCompletedSuboperations_
        {
            get { return _dicom.FindAll("00001021").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfFailedSuboperations
        {
            get { return _dicom.FindFirst("00001022") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfFailedSuboperations_
        {
            get { return _dicom.FindAll("00001022").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfWarningSuboperations
        {
            get { return _dicom.FindFirst("00001023") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfWarningSuboperations_
        {
            get { return _dicom.FindAll("00001023").Select(d => d as UnsignedShort).ToList(); }
        }

        public ApplicationEntity MoveOriginatorApplicationEntityTitle
        {
            get { return _dicom.FindFirst("00001030") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> MoveOriginatorApplicationEntityTitle_
        {
            get { return _dicom.FindAll("00001030").Select(d => d as ApplicationEntity).ToList(); }
        }

        public UnsignedShort MoveOriginatorMessageID
        {
            get { return _dicom.FindFirst("00001031") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MoveOriginatorMessageID_
        {
            get { return _dicom.FindAll("00001031").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongText DialogReceiverRetired
        {
            get { return _dicom.FindFirst("00004000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> DialogReceiverRetired_
        {
            get { return _dicom.FindAll("00004000").Select(d => d as LongText).ToList(); }
        }

        public LongText TerminalTypeRetired
        {
            get { return _dicom.FindFirst("00004010") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> TerminalTypeRetired_
        {
            get { return _dicom.FindAll("00004010").Select(d => d as LongText).ToList(); }
        }

        public ShortString MessageSetIDRetired
        {
            get { return _dicom.FindFirst("00005010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> MessageSetIDRetired_
        {
            get { return _dicom.FindAll("00005010").Select(d => d as ShortString).ToList(); }
        }

        public ShortString EndMessageIDRetired
        {
            get { return _dicom.FindFirst("00005020") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> EndMessageIDRetired_
        {
            get { return _dicom.FindAll("00005020").Select(d => d as ShortString).ToList(); }
        }

        public LongText DisplayFormatRetired
        {
            get { return _dicom.FindFirst("00005110") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> DisplayFormatRetired_
        {
            get { return _dicom.FindAll("00005110").Select(d => d as LongText).ToList(); }
        }

        public LongText PagePositionIDRetired
        {
            get { return _dicom.FindFirst("00005120") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> PagePositionIDRetired_
        {
            get { return _dicom.FindAll("00005120").Select(d => d as LongText).ToList(); }
        }

        public CodeString TextFormatIDRetired
        {
            get { return _dicom.FindFirst("00005130") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TextFormatIDRetired_
        {
            get { return _dicom.FindAll("00005130").Select(d => d as CodeString).ToList(); }
        }

        public CodeString NormalReverseRetired
        {
            get { return _dicom.FindFirst("00005140") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> NormalReverseRetired_
        {
            get { return _dicom.FindAll("00005140").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AddGrayScaleRetired
        {
            get { return _dicom.FindFirst("00005150") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AddGrayScaleRetired_
        {
            get { return _dicom.FindAll("00005150").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BordersRetired
        {
            get { return _dicom.FindFirst("00005160") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BordersRetired_
        {
            get { return _dicom.FindAll("00005160").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString CopiesRetired
        {
            get { return _dicom.FindFirst("00005170") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CopiesRetired_
        {
            get { return _dicom.FindAll("00005170").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString CommandMagnificationTypeRetired
        {
            get { return _dicom.FindFirst("00005180") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CommandMagnificationTypeRetired_
        {
            get { return _dicom.FindAll("00005180").Select(d => d as CodeString).ToList(); }
        }

        public CodeString EraseRetired
        {
            get { return _dicom.FindFirst("00005190") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> EraseRetired_
        {
            get { return _dicom.FindAll("00005190").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PrintRetired
        {
            get { return _dicom.FindFirst("000051A0") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PrintRetired_
        {
            get { return _dicom.FindAll("000051A0").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort OverlaysRetired
        {
            get { return _dicom.FindFirst("000051B0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlaysRetired_
        {
            get { return _dicom.FindAll("000051B0").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong FileMetaInformationGroupLength
        {
            get { return _dicom.FindFirst("00020000") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> FileMetaInformationGroupLength_
        {
            get { return _dicom.FindAll("00020000").Select(d => d as UnsignedLong).ToList(); }
        }

        public OtherByteString FileMetaInformationVersion
        {
            get { return _dicom.FindFirst("00020001") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> FileMetaInformationVersion_
        {
            get { return _dicom.FindAll("00020001").Select(d => d as OtherByteString).ToList(); }
        }

        public UniqueIdentifier MediaStorageSOPClassUID
        {
            get { return _dicom.FindFirst("00020002") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> MediaStorageSOPClassUID_
        {
            get { return _dicom.FindAll("00020002").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier MediaStorageSOPInstanceUID
        {
            get { return _dicom.FindFirst("00020003") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> MediaStorageSOPInstanceUID_
        {
            get { return _dicom.FindAll("00020003").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier TransferSyntaxUID
        {
            get { return _dicom.FindFirst("00020010") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> TransferSyntaxUID_
        {
            get { return _dicom.FindAll("00020010").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ImplementationClassUID
        {
            get { return _dicom.FindFirst("00020012") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ImplementationClassUID_
        {
            get { return _dicom.FindAll("00020012").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public ShortString ImplementationVersionName
        {
            get { return _dicom.FindFirst("00020013") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ImplementationVersionName_
        {
            get { return _dicom.FindAll("00020013").Select(d => d as ShortString).ToList(); }
        }

        public ApplicationEntity SourceApplicationEntityTitle
        {
            get { return _dicom.FindFirst("00020016") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> SourceApplicationEntityTitle_
        {
            get { return _dicom.FindAll("00020016").Select(d => d as ApplicationEntity).ToList(); }
        }

        public UniqueIdentifier PrivateInformationCreatorUID
        {
            get { return _dicom.FindFirst("00020100") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> PrivateInformationCreatorUID_
        {
            get { return _dicom.FindAll("00020100").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public OtherByteString PrivateInformation
        {
            get { return _dicom.FindFirst("00020102") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> PrivateInformation_
        {
            get { return _dicom.FindAll("00020102").Select(d => d as OtherByteString).ToList(); }
        }

        public CodeString FileSetID
        {
            get { return _dicom.FindFirst("00041130") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FileSetID_
        {
            get { return _dicom.FindAll("00041130").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FileSetDescriptorFileID
        {
            get { return _dicom.FindFirst("00041141") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FileSetDescriptorFileID_
        {
            get { return _dicom.FindAll("00041141").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SpecificCharacterSetOfFileSetDescriptorFile
        {
            get { return _dicom.FindFirst("00041142") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpecificCharacterSetOfFileSetDescriptorFile_
        {
            get { return _dicom.FindAll("00041142").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity
        {
            get { return _dicom.FindFirst("00041200") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity_
        {
            get { return _dicom.FindAll("00041200").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity
        {
            get { return _dicom.FindFirst("00041202") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity_
        {
            get { return _dicom.FindAll("00041202").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedShort FileSetConsistencyFlag
        {
            get { return _dicom.FindFirst("00041212") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> FileSetConsistencyFlag_
        {
            get { return _dicom.FindAll("00041212").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector DirectoryRecordSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00041220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DirectoryRecordSequence_
        {
            get { return _dicom.FindAll("00041220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong OffsetOfTheNextDirectoryRecord
        {
            get { return _dicom.FindFirst("00041400") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> OffsetOfTheNextDirectoryRecord_
        {
            get { return _dicom.FindAll("00041400").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedShort RecordInUseFlag
        {
            get { return _dicom.FindFirst("00041410") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RecordInUseFlag_
        {
            get { return _dicom.FindAll("00041410").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong OffsetOfReferencedLowerLevelDirectoryEntity
        {
            get { return _dicom.FindFirst("00041420") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> OffsetOfReferencedLowerLevelDirectoryEntity_
        {
            get { return _dicom.FindAll("00041420").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString DirectoryRecordType
        {
            get { return _dicom.FindFirst("00041430") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DirectoryRecordType_
        {
            get { return _dicom.FindAll("00041430").Select(d => d as CodeString).ToList(); }
        }

        public UniqueIdentifier PrivateRecordUID
        {
            get { return _dicom.FindFirst("00041432") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> PrivateRecordUID_
        {
            get { return _dicom.FindAll("00041432").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString ReferencedFileID
        {
            get { return _dicom.FindFirst("00041500") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReferencedFileID_
        {
            get { return _dicom.FindAll("00041500").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong MRDRDirectoryRecordOffsetRetired
        {
            get { return _dicom.FindFirst("00041504") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> MRDRDirectoryRecordOffsetRetired_
        {
            get { return _dicom.FindAll("00041504").Select(d => d as UnsignedLong).ToList(); }
        }

        public UniqueIdentifier ReferencedSOPClassUIDInFile
        {
            get { return _dicom.FindFirst("00041510") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedSOPClassUIDInFile_
        {
            get { return _dicom.FindAll("00041510").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ReferencedSOPInstanceUIDInFile
        {
            get { return _dicom.FindFirst("00041511") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedSOPInstanceUIDInFile_
        {
            get { return _dicom.FindAll("00041511").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ReferencedTransferSyntaxUIDInFile
        {
            get { return _dicom.FindFirst("00041512") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedTransferSyntaxUIDInFile_
        {
            get { return _dicom.FindAll("00041512").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ReferencedRelatedGeneralSOPClassUIDInFile
        {
            get { return _dicom.FindFirst("0004151A") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedRelatedGeneralSOPClassUIDInFile_
        {
            get { return _dicom.FindAll("0004151A").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UnsignedLong NumberOfReferencesRetired
        {
            get { return _dicom.FindFirst("00041600") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfReferencesRetired_
        {
            get { return _dicom.FindAll("00041600").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong LengthToEndRetired
        {
            get { return _dicom.FindFirst("00080001") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> LengthToEndRetired_
        {
            get { return _dicom.FindAll("00080001").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString SpecificCharacterSet
        {
            get { return _dicom.FindFirst("00080005") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpecificCharacterSet_
        {
            get { return _dicom.FindAll("00080005").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector LanguageCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00080006") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LanguageCodeSequence_
        {
            get { return _dicom.FindAll("00080006").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ImageType
        {
            get { return _dicom.FindFirst("00080008") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageType_
        {
            get { return _dicom.FindAll("00080008").Select(d => d as CodeString).ToList(); }
        }

        public ShortString RecognitionCodeRetired
        {
            get { return _dicom.FindFirst("00080010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RecognitionCodeRetired_
        {
            get { return _dicom.FindAll("00080010").Select(d => d as ShortString).ToList(); }
        }

        public Date InstanceCreationDate
        {
            get { return _dicom.FindFirst("00080012") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> InstanceCreationDate_
        {
            get { return _dicom.FindAll("00080012").Select(d => d as Date).ToList(); }
        }

        public Time InstanceCreationTime
        {
            get { return _dicom.FindFirst("00080013") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> InstanceCreationTime_
        {
            get { return _dicom.FindAll("00080013").Select(d => d as Time).ToList(); }
        }

        public UniqueIdentifier InstanceCreatorUID
        {
            get { return _dicom.FindFirst("00080014") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> InstanceCreatorUID_
        {
            get { return _dicom.FindAll("00080014").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier SOPClassUID
        {
            get { return _dicom.FindFirst("00080016") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SOPClassUID_
        {
            get { return _dicom.FindAll("00080016").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier SOPInstanceUID
        {
            get { return _dicom.FindFirst("00080018") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SOPInstanceUID_
        {
            get { return _dicom.FindAll("00080018").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier RelatedGeneralSOPClassUID
        {
            get { return _dicom.FindFirst("0008001A") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> RelatedGeneralSOPClassUID_
        {
            get { return _dicom.FindAll("0008001A").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier OriginalSpecializedSOPClassUID
        {
            get { return _dicom.FindFirst("0008001B") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> OriginalSpecializedSOPClassUID_
        {
            get { return _dicom.FindAll("0008001B").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public Date StudyDate
        {
            get { return _dicom.FindFirst("00080020") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> StudyDate_
        {
            get { return _dicom.FindAll("00080020").Select(d => d as Date).ToList(); }
        }

        public Date SeriesDate
        {
            get { return _dicom.FindFirst("00080021") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> SeriesDate_
        {
            get { return _dicom.FindAll("00080021").Select(d => d as Date).ToList(); }
        }

        public Date AcquisitionDate
        {
            get { return _dicom.FindFirst("00080022") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> AcquisitionDate_
        {
            get { return _dicom.FindAll("00080022").Select(d => d as Date).ToList(); }
        }

        public Date ContentDate
        {
            get { return _dicom.FindFirst("00080023") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ContentDate_
        {
            get { return _dicom.FindAll("00080023").Select(d => d as Date).ToList(); }
        }

        public Date OverlayDateRetired
        {
            get { return _dicom.FindFirst("00080024") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> OverlayDateRetired_
        {
            get { return _dicom.FindAll("00080024").Select(d => d as Date).ToList(); }
        }

        public Date CurveDateRetired
        {
            get { return _dicom.FindFirst("00080025") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> CurveDateRetired_
        {
            get { return _dicom.FindAll("00080025").Select(d => d as Date).ToList(); }
        }

        public DateTime AcquisitionDateTime
        {
            get { return _dicom.FindFirst("0008002A") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> AcquisitionDateTime_
        {
            get { return _dicom.FindAll("0008002A").Select(d => d as DateTime).ToList(); }
        }

        public Time StudyTime
        {
            get { return _dicom.FindFirst("00080030") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> StudyTime_
        {
            get { return _dicom.FindAll("00080030").Select(d => d as Time).ToList(); }
        }

        public Time SeriesTime
        {
            get { return _dicom.FindFirst("00080031") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> SeriesTime_
        {
            get { return _dicom.FindAll("00080031").Select(d => d as Time).ToList(); }
        }

        public Time AcquisitionTime
        {
            get { return _dicom.FindFirst("00080032") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> AcquisitionTime_
        {
            get { return _dicom.FindAll("00080032").Select(d => d as Time).ToList(); }
        }

        public Time ContentTime
        {
            get { return _dicom.FindFirst("00080033") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ContentTime_
        {
            get { return _dicom.FindAll("00080033").Select(d => d as Time).ToList(); }
        }

        public Time OverlayTimeRetired
        {
            get { return _dicom.FindFirst("00080034") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> OverlayTimeRetired_
        {
            get { return _dicom.FindAll("00080034").Select(d => d as Time).ToList(); }
        }

        public Time CurveTimeRetired
        {
            get { return _dicom.FindFirst("00080035") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> CurveTimeRetired_
        {
            get { return _dicom.FindAll("00080035").Select(d => d as Time).ToList(); }
        }

        public UnsignedShort DataSetTypeRetired
        {
            get { return _dicom.FindFirst("00080040") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DataSetTypeRetired_
        {
            get { return _dicom.FindAll("00080040").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString DataSetSubtypeRetired
        {
            get { return _dicom.FindFirst("00080041") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DataSetSubtypeRetired_
        {
            get { return _dicom.FindAll("00080041").Select(d => d as LongString).ToList(); }
        }

        public CodeString NuclearMedicineSeriesTypeRetired
        {
            get { return _dicom.FindFirst("00080042") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> NuclearMedicineSeriesTypeRetired_
        {
            get { return _dicom.FindAll("00080042").Select(d => d as CodeString).ToList(); }
        }

        public ShortString AccessionNumber
        {
            get { return _dicom.FindFirst("00080050") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> AccessionNumber_
        {
            get { return _dicom.FindAll("00080050").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector IssuerOfAccessionNumberSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00080051") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IssuerOfAccessionNumberSequence_
        {
            get { return _dicom.FindAll("00080051").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString QueryRetrieveLevel
        {
            get { return _dicom.FindFirst("00080052") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> QueryRetrieveLevel_
        {
            get { return _dicom.FindAll("00080052").Select(d => d as CodeString).ToList(); }
        }

        public ApplicationEntity RetrieveAETitle
        {
            get { return _dicom.FindFirst("00080054") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> RetrieveAETitle_
        {
            get { return _dicom.FindAll("00080054").Select(d => d as ApplicationEntity).ToList(); }
        }

        public CodeString InstanceAvailability
        {
            get { return _dicom.FindFirst("00080056") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InstanceAvailability_
        {
            get { return _dicom.FindAll("00080056").Select(d => d as CodeString).ToList(); }
        }

        public UniqueIdentifier FailedSOPInstanceUIDList
        {
            get { return _dicom.FindFirst("00080058") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> FailedSOPInstanceUIDList_
        {
            get { return _dicom.FindAll("00080058").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString Modality
        {
            get { return _dicom.FindFirst("00080060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Modality_
        {
            get { return _dicom.FindAll("00080060").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ModalitiesInStudy
        {
            get { return _dicom.FindFirst("00080061") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ModalitiesInStudy_
        {
            get { return _dicom.FindAll("00080061").Select(d => d as CodeString).ToList(); }
        }

        public UniqueIdentifier SOPClassesInStudy
        {
            get { return _dicom.FindFirst("00080062") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SOPClassesInStudy_
        {
            get { return _dicom.FindAll("00080062").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString ConversionType
        {
            get { return _dicom.FindFirst("00080064") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ConversionType_
        {
            get { return _dicom.FindAll("00080064").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PresentationIntentType
        {
            get { return _dicom.FindFirst("00080068") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PresentationIntentType_
        {
            get { return _dicom.FindAll("00080068").Select(d => d as CodeString).ToList(); }
        }

        public LongString Manufacturer
        {
            get { return _dicom.FindFirst("00080070") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> Manufacturer_
        {
            get { return _dicom.FindAll("00080070").Select(d => d as LongString).ToList(); }
        }

        public LongString InstitutionName
        {
            get { return _dicom.FindFirst("00080080") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> InstitutionName_
        {
            get { return _dicom.FindAll("00080080").Select(d => d as LongString).ToList(); }
        }

        public ShortText InstitutionAddress
        {
            get { return _dicom.FindFirst("00080081") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> InstitutionAddress_
        {
            get { return _dicom.FindAll("00080081").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector InstitutionCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00080082") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InstitutionCodeSequence_
        {
            get { return _dicom.FindAll("00080082").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName ReferringPhysicianName
        {
            get { return _dicom.FindFirst("00080090") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> ReferringPhysicianName_
        {
            get { return _dicom.FindAll("00080090").Select(d => d as PersonName).ToList(); }
        }

        public ShortText ReferringPhysicianAddress
        {
            get { return _dicom.FindFirst("00080092") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ReferringPhysicianAddress_
        {
            get { return _dicom.FindAll("00080092").Select(d => d as ShortText).ToList(); }
        }

        public ShortString ReferringPhysicianTelephoneNumbers
        {
            get { return _dicom.FindFirst("00080094") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ReferringPhysicianTelephoneNumbers_
        {
            get { return _dicom.FindAll("00080094").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector ReferringPhysicianIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00080096") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferringPhysicianIdentificationSequence_
        {
            get { return _dicom.FindAll("00080096").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString CodeValue
        {
            get { return _dicom.FindFirst("00080100") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CodeValue_
        {
            get { return _dicom.FindAll("00080100").Select(d => d as ShortString).ToList(); }
        }

        public ShortString CodingSchemeDesignator
        {
            get { return _dicom.FindFirst("00080102") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CodingSchemeDesignator_
        {
            get { return _dicom.FindAll("00080102").Select(d => d as ShortString).ToList(); }
        }

        public ShortString CodingSchemeVersion
        {
            get { return _dicom.FindFirst("00080103") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CodingSchemeVersion_
        {
            get { return _dicom.FindAll("00080103").Select(d => d as ShortString).ToList(); }
        }

        public LongString CodeMeaning
        {
            get { return _dicom.FindFirst("00080104") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CodeMeaning_
        {
            get { return _dicom.FindAll("00080104").Select(d => d as LongString).ToList(); }
        }

        public CodeString MappingResource
        {
            get { return _dicom.FindFirst("00080105") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MappingResource_
        {
            get { return _dicom.FindAll("00080105").Select(d => d as CodeString).ToList(); }
        }

        public DateTime ContextGroupVersion
        {
            get { return _dicom.FindFirst("00080106") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ContextGroupVersion_
        {
            get { return _dicom.FindAll("00080106").Select(d => d as DateTime).ToList(); }
        }

        public DateTime ContextGroupLocalVersion
        {
            get { return _dicom.FindFirst("00080107") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ContextGroupLocalVersion_
        {
            get { return _dicom.FindAll("00080107").Select(d => d as DateTime).ToList(); }
        }

        public CodeString ContextGroupExtensionFlag
        {
            get { return _dicom.FindFirst("0008010B") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContextGroupExtensionFlag_
        {
            get { return _dicom.FindAll("0008010B").Select(d => d as CodeString).ToList(); }
        }

        public UniqueIdentifier CodingSchemeUID
        {
            get { return _dicom.FindFirst("0008010C") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> CodingSchemeUID_
        {
            get { return _dicom.FindAll("0008010C").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ContextGroupExtensionCreatorUID
        {
            get { return _dicom.FindFirst("0008010D") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ContextGroupExtensionCreatorUID_
        {
            get { return _dicom.FindAll("0008010D").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString ContextIdentifier
        {
            get { return _dicom.FindFirst("0008010F") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContextIdentifier_
        {
            get { return _dicom.FindAll("0008010F").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector CodingSchemeIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00080110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CodingSchemeIdentificationSequence_
        {
            get { return _dicom.FindAll("00080110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString CodingSchemeRegistry
        {
            get { return _dicom.FindFirst("00080112") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CodingSchemeRegistry_
        {
            get { return _dicom.FindAll("00080112").Select(d => d as LongString).ToList(); }
        }

        public ShortText CodingSchemeExternalID
        {
            get { return _dicom.FindFirst("00080114") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CodingSchemeExternalID_
        {
            get { return _dicom.FindAll("00080114").Select(d => d as ShortText).ToList(); }
        }

        public ShortText CodingSchemeName
        {
            get { return _dicom.FindFirst("00080115") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CodingSchemeName_
        {
            get { return _dicom.FindAll("00080115").Select(d => d as ShortText).ToList(); }
        }

        public ShortText CodingSchemeResponsibleOrganization
        {
            get { return _dicom.FindFirst("00080116") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CodingSchemeResponsibleOrganization_
        {
            get { return _dicom.FindAll("00080116").Select(d => d as ShortText).ToList(); }
        }

        public UniqueIdentifier ContextUID
        {
            get { return _dicom.FindFirst("00080117") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ContextUID_
        {
            get { return _dicom.FindAll("00080117").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public ShortString TimezoneOffsetFromUTC
        {
            get { return _dicom.FindFirst("00080201") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> TimezoneOffsetFromUTC_
        {
            get { return _dicom.FindAll("00080201").Select(d => d as ShortString).ToList(); }
        }

        public ApplicationEntity NetworkIDRetired
        {
            get { return _dicom.FindFirst("00081000") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> NetworkIDRetired_
        {
            get { return _dicom.FindAll("00081000").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ShortString StationName
        {
            get { return _dicom.FindFirst("00081010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> StationName_
        {
            get { return _dicom.FindAll("00081010").Select(d => d as ShortString).ToList(); }
        }

        public LongString StudyDescription
        {
            get { return _dicom.FindFirst("00081030") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> StudyDescription_
        {
            get { return _dicom.FindAll("00081030").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ProcedureCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081032") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProcedureCodeSequence_
        {
            get { return _dicom.FindAll("00081032").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SeriesDescription
        {
            get { return _dicom.FindFirst("0008103E") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SeriesDescription_
        {
            get { return _dicom.FindAll("0008103E").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector SeriesDescriptionCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0008103F") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SeriesDescriptionCodeSequence_
        {
            get { return _dicom.FindAll("0008103F").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString InstitutionalDepartmentName
        {
            get { return _dicom.FindFirst("00081040") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> InstitutionalDepartmentName_
        {
            get { return _dicom.FindAll("00081040").Select(d => d as LongString).ToList(); }
        }

        public PersonName PhysiciansOfRecord
        {
            get { return _dicom.FindFirst("00081048") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> PhysiciansOfRecord_
        {
            get { return _dicom.FindAll("00081048").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector PhysiciansOfRecordIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081049") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PhysiciansOfRecordIdentificationSequence_
        {
            get { return _dicom.FindAll("00081049").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName PerformingPhysicianName
        {
            get { return _dicom.FindFirst("00081050") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> PerformingPhysicianName_
        {
            get { return _dicom.FindAll("00081050").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector PerformingPhysicianIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081052") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformingPhysicianIdentificationSequence_
        {
            get { return _dicom.FindAll("00081052").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName NameOfPhysiciansReadingStudy
        {
            get { return _dicom.FindFirst("00081060") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> NameOfPhysiciansReadingStudy_
        {
            get { return _dicom.FindAll("00081060").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector PhysiciansReadingStudyIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081062") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PhysiciansReadingStudyIdentificationSequence_
        {
            get { return _dicom.FindAll("00081062").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName OperatorsName
        {
            get { return _dicom.FindFirst("00081070") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> OperatorsName_
        {
            get { return _dicom.FindAll("00081070").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector OperatorIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081072") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OperatorIdentificationSequence_
        {
            get { return _dicom.FindAll("00081072").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString AdmittingDiagnosesDescription
        {
            get { return _dicom.FindFirst("00081080") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AdmittingDiagnosesDescription_
        {
            get { return _dicom.FindAll("00081080").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector AdmittingDiagnosesCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081084") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AdmittingDiagnosesCodeSequence_
        {
            get { return _dicom.FindAll("00081084").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ManufacturerModelName
        {
            get { return _dicom.FindFirst("00081090") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ManufacturerModelName_
        {
            get { return _dicom.FindAll("00081090").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReferencedResultsSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedResultsSequenceRetired_
        {
            get { return _dicom.FindAll("00081100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedStudySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedStudySequence_
        {
            get { return _dicom.FindAll("00081110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedPerformedProcedureStepSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081111") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedPerformedProcedureStepSequence_
        {
            get { return _dicom.FindAll("00081111").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedSeriesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081115") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedSeriesSequence_
        {
            get { return _dicom.FindAll("00081115").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedPatientSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081120") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedPatientSequence_
        {
            get { return _dicom.FindAll("00081120").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedVisitSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081125") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedVisitSequence_
        {
            get { return _dicom.FindAll("00081125").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedOverlaySequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081130") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedOverlaySequenceRetired_
        {
            get { return _dicom.FindAll("00081130").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedStereometricInstanceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081134") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedStereometricInstanceSequence_
        {
            get { return _dicom.FindAll("00081134").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedWaveformSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0008113A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedWaveformSequence_
        {
            get { return _dicom.FindAll("0008113A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081140") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedImageSequence_
        {
            get { return _dicom.FindAll("00081140").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedCurveSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081145") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedCurveSequenceRetired_
        {
            get { return _dicom.FindAll("00081145").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedInstanceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0008114A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedInstanceSequence_
        {
            get { return _dicom.FindAll("0008114A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedRealWorldValueMappingInstanceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0008114B") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedRealWorldValueMappingInstanceSequence_
        {
            get { return _dicom.FindAll("0008114B").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier ReferencedSOPClassUID
        {
            get { return _dicom.FindFirst("00081150") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedSOPClassUID_
        {
            get { return _dicom.FindAll("00081150").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ReferencedSOPInstanceUID
        {
            get { return _dicom.FindFirst("00081155") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedSOPInstanceUID_
        {
            get { return _dicom.FindAll("00081155").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier SOPClassesSupported
        {
            get { return _dicom.FindFirst("0008115A") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SOPClassesSupported_
        {
            get { return _dicom.FindAll("0008115A").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public IntegerString ReferencedFrameNumber
        {
            get { return _dicom.FindFirst("00081160") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedFrameNumber_
        {
            get { return _dicom.FindAll("00081160").Select(d => d as IntegerString).ToList(); }
        }

        public UnsignedLong SimpleFrameList
        {
            get { return _dicom.FindFirst("00081161") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SimpleFrameList_
        {
            get { return _dicom.FindAll("00081161").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong CalculatedFrameList
        {
            get { return _dicom.FindFirst("00081162") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> CalculatedFrameList_
        {
            get { return _dicom.FindAll("00081162").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointDouble TimeRange
        {
            get { return _dicom.FindFirst("00081163") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TimeRange_
        {
            get { return _dicom.FindAll("00081163").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector FrameExtractionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081164") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameExtractionSequence_
        {
            get { return _dicom.FindAll("00081164").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier MultiFrameSourceSOPInstanceUID
        {
            get { return _dicom.FindFirst("00081167") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> MultiFrameSourceSOPInstanceUID_
        {
            get { return _dicom.FindAll("00081167").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier TransactionUID
        {
            get { return _dicom.FindFirst("00081195") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> TransactionUID_
        {
            get { return _dicom.FindAll("00081195").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UnsignedShort FailureReason
        {
            get { return _dicom.FindFirst("00081197") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> FailureReason_
        {
            get { return _dicom.FindAll("00081197").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector FailedSOPSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081198") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FailedSOPSequence_
        {
            get { return _dicom.FindAll("00081198").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedSOPSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081199") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedSOPSequence_
        {
            get { return _dicom.FindAll("00081199").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector StudiesContainingOtherReferencedInstancesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081200") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> StudiesContainingOtherReferencedInstancesSequence_
        {
            get { return _dicom.FindAll("00081200").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RelatedSeriesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00081250") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelatedSeriesSequence_
        {
            get { return _dicom.FindAll("00081250").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString LossyImageCompressionRetired
        {
            get { return _dicom.FindFirst("00082110") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LossyImageCompressionRetired_
        {
            get { return _dicom.FindAll("00082110").Select(d => d as CodeString).ToList(); }
        }

        public ShortText DerivationDescription
        {
            get { return _dicom.FindFirst("00082111") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> DerivationDescription_
        {
            get { return _dicom.FindAll("00082111").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector SourceImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082112") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceImageSequence_
        {
            get { return _dicom.FindAll("00082112").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString StageName
        {
            get { return _dicom.FindFirst("00082120") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> StageName_
        {
            get { return _dicom.FindAll("00082120").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString StageNumber
        {
            get { return _dicom.FindFirst("00082122") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> StageNumber_
        {
            get { return _dicom.FindAll("00082122").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfStages
        {
            get { return _dicom.FindFirst("00082124") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfStages_
        {
            get { return _dicom.FindAll("00082124").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString ViewName
        {
            get { return _dicom.FindFirst("00082127") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ViewName_
        {
            get { return _dicom.FindAll("00082127").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString ViewNumber
        {
            get { return _dicom.FindFirst("00082128") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ViewNumber_
        {
            get { return _dicom.FindAll("00082128").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfEventTimers
        {
            get { return _dicom.FindFirst("00082129") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfEventTimers_
        {
            get { return _dicom.FindAll("00082129").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfViewsInStage
        {
            get { return _dicom.FindFirst("0008212A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfViewsInStage_
        {
            get { return _dicom.FindAll("0008212A").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString EventElapsedTimes
        {
            get { return _dicom.FindFirst("00082130") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EventElapsedTimes_
        {
            get { return _dicom.FindAll("00082130").Select(d => d as DecimalString).ToList(); }
        }

        public LongString EventTimerNames
        {
            get { return _dicom.FindFirst("00082132") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> EventTimerNames_
        {
            get { return _dicom.FindAll("00082132").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector EventTimerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082133") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EventTimerSequence_
        {
            get { return _dicom.FindAll("00082133").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble EventTimeOffset
        {
            get { return _dicom.FindFirst("00082134") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> EventTimeOffset_
        {
            get { return _dicom.FindAll("00082134").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector EventCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082135") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EventCodeSequence_
        {
            get { return _dicom.FindAll("00082135").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString StartTrim
        {
            get { return _dicom.FindFirst("00082142") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> StartTrim_
        {
            get { return _dicom.FindAll("00082142").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString StopTrim
        {
            get { return _dicom.FindFirst("00082143") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> StopTrim_
        {
            get { return _dicom.FindAll("00082143").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString RecommendedDisplayFrameRate
        {
            get { return _dicom.FindFirst("00082144") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RecommendedDisplayFrameRate_
        {
            get { return _dicom.FindAll("00082144").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString TransducerPositionRetired
        {
            get { return _dicom.FindFirst("00082200") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TransducerPositionRetired_
        {
            get { return _dicom.FindAll("00082200").Select(d => d as CodeString).ToList(); }
        }

        public CodeString TransducerOrientationRetired
        {
            get { return _dicom.FindFirst("00082204") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TransducerOrientationRetired_
        {
            get { return _dicom.FindAll("00082204").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AnatomicStructureRetired
        {
            get { return _dicom.FindFirst("00082208") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AnatomicStructureRetired_
        {
            get { return _dicom.FindAll("00082208").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector AnatomicRegionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082218") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicRegionSequence_
        {
            get { return _dicom.FindAll("00082218").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AnatomicRegionModifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicRegionModifierSequence_
        {
            get { return _dicom.FindAll("00082220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PrimaryAnatomicStructureSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082228") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrimaryAnatomicStructureSequence_
        {
            get { return _dicom.FindAll("00082228").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AnatomicStructureSpaceOrRegionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082229") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicStructureSpaceOrRegionSequence_
        {
            get { return _dicom.FindAll("00082229").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PrimaryAnatomicStructureModifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082230") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrimaryAnatomicStructureModifierSequence_
        {
            get { return _dicom.FindAll("00082230").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TransducerPositionSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082240") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerPositionSequenceRetired_
        {
            get { return _dicom.FindAll("00082240").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TransducerPositionModifierSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082242") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerPositionModifierSequenceRetired_
        {
            get { return _dicom.FindAll("00082242").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TransducerOrientationSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082244") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerOrientationSequenceRetired_
        {
            get { return _dicom.FindAll("00082244").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TransducerOrientationModifierSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082246") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerOrientationModifierSequenceRetired_
        {
            get { return _dicom.FindAll("00082246").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AnatomicStructureSpaceOrRegionCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082251") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicStructureSpaceOrRegionCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("00082251").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AnatomicPortalOfEntranceCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082253") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicPortalOfEntranceCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("00082253").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AnatomicApproachDirectionCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082255") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicApproachDirectionCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("00082255").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText AnatomicPerspectiveDescriptionTrialRetired
        {
            get { return _dicom.FindFirst("00082256") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> AnatomicPerspectiveDescriptionTrialRetired_
        {
            get { return _dicom.FindAll("00082256").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector AnatomicPerspectiveCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082257") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicPerspectiveCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("00082257").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText AnatomicLocationOfExaminingInstrumentDescriptionTrialRetired
        {
            get { return _dicom.FindFirst("00082258") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> AnatomicLocationOfExaminingInstrumentDescriptionTrialRetired_
        {
            get { return _dicom.FindAll("00082258").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector AnatomicLocationOfExaminingInstrumentCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00082259") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicLocationOfExaminingInstrumentCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("00082259").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AnatomicStructureSpaceOrRegionModifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0008225A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnatomicStructureSpaceOrRegionModifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0008225A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OnAxisBackgroundAnatomicStructureCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0008225C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OnAxisBackgroundAnatomicStructureCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0008225C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AlternateRepresentationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00083001") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AlternateRepresentationSequence_
        {
            get { return _dicom.FindAll("00083001").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier IrradiationEventUID
        {
            get { return _dicom.FindFirst("00083010") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> IrradiationEventUID_
        {
            get { return _dicom.FindAll("00083010").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public LongText IdentifyingCommentsRetired
        {
            get { return _dicom.FindFirst("00084000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> IdentifyingCommentsRetired_
        {
            get { return _dicom.FindAll("00084000").Select(d => d as LongText).ToList(); }
        }

        public CodeString FrameType
        {
            get { return _dicom.FindFirst("00089007") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FrameType_
        {
            get { return _dicom.FindAll("00089007").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ReferencedImageEvidenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089092") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedImageEvidenceSequence_
        {
            get { return _dicom.FindAll("00089092").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedRawDataSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089121") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedRawDataSequence_
        {
            get { return _dicom.FindAll("00089121").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier CreatorVersionUID
        {
            get { return _dicom.FindFirst("00089123") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> CreatorVersionUID_
        {
            get { return _dicom.FindAll("00089123").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public SequenceSelector DerivationImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089124") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DerivationImageSequence_
        {
            get { return _dicom.FindAll("00089124").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SourceImageEvidenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089154") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceImageEvidenceSequence_
        {
            get { return _dicom.FindAll("00089154").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PixelPresentation
        {
            get { return _dicom.FindFirst("00089205") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PixelPresentation_
        {
            get { return _dicom.FindAll("00089205").Select(d => d as CodeString).ToList(); }
        }

        public CodeString VolumetricProperties
        {
            get { return _dicom.FindFirst("00089206") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VolumetricProperties_
        {
            get { return _dicom.FindAll("00089206").Select(d => d as CodeString).ToList(); }
        }

        public CodeString VolumeBasedCalculationTechnique
        {
            get { return _dicom.FindFirst("00089207") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VolumeBasedCalculationTechnique_
        {
            get { return _dicom.FindAll("00089207").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ComplexImageComponent
        {
            get { return _dicom.FindFirst("00089208") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ComplexImageComponent_
        {
            get { return _dicom.FindAll("00089208").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AcquisitionContrast
        {
            get { return _dicom.FindFirst("00089209") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AcquisitionContrast_
        {
            get { return _dicom.FindAll("00089209").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DerivationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089215") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DerivationCodeSequence_
        {
            get { return _dicom.FindAll("00089215").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedPresentationStateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089237") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedPresentationStateSequence_
        {
            get { return _dicom.FindAll("00089237").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedOtherPlaneSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089410") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedOtherPlaneSequence_
        {
            get { return _dicom.FindAll("00089410").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FrameDisplaySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00089458") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameDisplaySequence_
        {
            get { return _dicom.FindAll("00089458").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle RecommendedDisplayFrameRateInFloat
        {
            get { return _dicom.FindFirst("00089459") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RecommendedDisplayFrameRateInFloat_
        {
            get { return _dicom.FindAll("00089459").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString SkipFrameRangeFlag
        {
            get { return _dicom.FindFirst("00089460") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SkipFrameRangeFlag_
        {
            get { return _dicom.FindAll("00089460").Select(d => d as CodeString).ToList(); }
        }

        public PersonName PatientName
        {
            get { return _dicom.FindFirst("00100010") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> PatientName_
        {
            get { return _dicom.FindAll("00100010").Select(d => d as PersonName).ToList(); }
        }

        public LongString PatientID
        {
            get { return _dicom.FindFirst("00100020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientID_
        {
            get { return _dicom.FindAll("00100020").Select(d => d as LongString).ToList(); }
        }

        public LongString IssuerOfPatientID
        {
            get { return _dicom.FindFirst("00100021") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> IssuerOfPatientID_
        {
            get { return _dicom.FindAll("00100021").Select(d => d as LongString).ToList(); }
        }

        public CodeString TypeOfPatientID
        {
            get { return _dicom.FindFirst("00100022") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TypeOfPatientID_
        {
            get { return _dicom.FindAll("00100022").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector IssuerOfPatientIDQualifiersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00100024") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IssuerOfPatientIDQualifiersSequence_
        {
            get { return _dicom.FindAll("00100024").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public Date PatientBirthDate
        {
            get { return _dicom.FindFirst("00100030") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> PatientBirthDate_
        {
            get { return _dicom.FindAll("00100030").Select(d => d as Date).ToList(); }
        }

        public Time PatientBirthTime
        {
            get { return _dicom.FindFirst("00100032") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> PatientBirthTime_
        {
            get { return _dicom.FindAll("00100032").Select(d => d as Time).ToList(); }
        }

        public CodeString PatientSex
        {
            get { return _dicom.FindFirst("00100040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientSex_
        {
            get { return _dicom.FindAll("00100040").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector PatientInsurancePlanCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00100050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientInsurancePlanCodeSequence_
        {
            get { return _dicom.FindAll("00100050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PatientPrimaryLanguageCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00100101") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientPrimaryLanguageCodeSequence_
        {
            get { return _dicom.FindAll("00100101").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PatientPrimaryLanguageModifierCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00100102") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientPrimaryLanguageModifierCodeSequence_
        {
            get { return _dicom.FindAll("00100102").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString OtherPatientIDs
        {
            get { return _dicom.FindFirst("00101000") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OtherPatientIDs_
        {
            get { return _dicom.FindAll("00101000").Select(d => d as LongString).ToList(); }
        }

        public PersonName OtherPatientNames
        {
            get { return _dicom.FindFirst("00101001") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> OtherPatientNames_
        {
            get { return _dicom.FindAll("00101001").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector OtherPatientIDsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00101002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OtherPatientIDsSequence_
        {
            get { return _dicom.FindAll("00101002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName PatientBirthName
        {
            get { return _dicom.FindFirst("00101005") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> PatientBirthName_
        {
            get { return _dicom.FindAll("00101005").Select(d => d as PersonName).ToList(); }
        }

        public AgeString PatientAge
        {
            get { return _dicom.FindFirst("00101010") as AgeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AgeString> PatientAge_
        {
            get { return _dicom.FindAll("00101010").Select(d => d as AgeString).ToList(); }
        }

        public DecimalString PatientSize
        {
            get { return _dicom.FindFirst("00101020") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PatientSize_
        {
            get { return _dicom.FindAll("00101020").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector PatientSizeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00101021") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientSizeCodeSequence_
        {
            get { return _dicom.FindAll("00101021").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString PatientWeight
        {
            get { return _dicom.FindFirst("00101030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PatientWeight_
        {
            get { return _dicom.FindAll("00101030").Select(d => d as DecimalString).ToList(); }
        }

        public LongString PatientAddress
        {
            get { return _dicom.FindFirst("00101040") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientAddress_
        {
            get { return _dicom.FindAll("00101040").Select(d => d as LongString).ToList(); }
        }

        public LongString InsurancePlanIdentificationRetired
        {
            get { return _dicom.FindFirst("00101050") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> InsurancePlanIdentificationRetired_
        {
            get { return _dicom.FindAll("00101050").Select(d => d as LongString).ToList(); }
        }

        public PersonName PatientMotherBirthName
        {
            get { return _dicom.FindFirst("00101060") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> PatientMotherBirthName_
        {
            get { return _dicom.FindAll("00101060").Select(d => d as PersonName).ToList(); }
        }

        public LongString MilitaryRank
        {
            get { return _dicom.FindFirst("00101080") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> MilitaryRank_
        {
            get { return _dicom.FindAll("00101080").Select(d => d as LongString).ToList(); }
        }

        public LongString BranchOfService
        {
            get { return _dicom.FindFirst("00101081") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> BranchOfService_
        {
            get { return _dicom.FindAll("00101081").Select(d => d as LongString).ToList(); }
        }

        public LongString MedicalRecordLocator
        {
            get { return _dicom.FindFirst("00101090") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> MedicalRecordLocator_
        {
            get { return _dicom.FindAll("00101090").Select(d => d as LongString).ToList(); }
        }

        public LongString MedicalAlerts
        {
            get { return _dicom.FindFirst("00102000") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> MedicalAlerts_
        {
            get { return _dicom.FindAll("00102000").Select(d => d as LongString).ToList(); }
        }

        public LongString Allergies
        {
            get { return _dicom.FindFirst("00102110") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> Allergies_
        {
            get { return _dicom.FindAll("00102110").Select(d => d as LongString).ToList(); }
        }

        public LongString CountryOfResidence
        {
            get { return _dicom.FindFirst("00102150") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CountryOfResidence_
        {
            get { return _dicom.FindAll("00102150").Select(d => d as LongString).ToList(); }
        }

        public LongString RegionOfResidence
        {
            get { return _dicom.FindFirst("00102152") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RegionOfResidence_
        {
            get { return _dicom.FindAll("00102152").Select(d => d as LongString).ToList(); }
        }

        public ShortString PatientTelephoneNumbers
        {
            get { return _dicom.FindFirst("00102154") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PatientTelephoneNumbers_
        {
            get { return _dicom.FindAll("00102154").Select(d => d as ShortString).ToList(); }
        }

        public ShortString EthnicGroup
        {
            get { return _dicom.FindFirst("00102160") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> EthnicGroup_
        {
            get { return _dicom.FindAll("00102160").Select(d => d as ShortString).ToList(); }
        }

        public ShortString Occupation
        {
            get { return _dicom.FindFirst("00102180") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> Occupation_
        {
            get { return _dicom.FindAll("00102180").Select(d => d as ShortString).ToList(); }
        }

        public CodeString SmokingStatus
        {
            get { return _dicom.FindFirst("001021A0") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SmokingStatus_
        {
            get { return _dicom.FindAll("001021A0").Select(d => d as CodeString).ToList(); }
        }

        public LongText AdditionalPatientHistory
        {
            get { return _dicom.FindFirst("001021B0") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> AdditionalPatientHistory_
        {
            get { return _dicom.FindAll("001021B0").Select(d => d as LongText).ToList(); }
        }

        public UnsignedShort PregnancyStatus
        {
            get { return _dicom.FindFirst("001021C0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PregnancyStatus_
        {
            get { return _dicom.FindAll("001021C0").Select(d => d as UnsignedShort).ToList(); }
        }

        public Date LastMenstrualDate
        {
            get { return _dicom.FindFirst("001021D0") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> LastMenstrualDate_
        {
            get { return _dicom.FindAll("001021D0").Select(d => d as Date).ToList(); }
        }

        public LongString PatientReligiousPreference
        {
            get { return _dicom.FindFirst("001021F0") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientReligiousPreference_
        {
            get { return _dicom.FindAll("001021F0").Select(d => d as LongString).ToList(); }
        }

        public LongString PatientSpeciesDescription
        {
            get { return _dicom.FindFirst("00102201") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientSpeciesDescription_
        {
            get { return _dicom.FindAll("00102201").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PatientSpeciesCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00102202") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientSpeciesCodeSequence_
        {
            get { return _dicom.FindAll("00102202").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PatientSexNeutered
        {
            get { return _dicom.FindFirst("00102203") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientSexNeutered_
        {
            get { return _dicom.FindAll("00102203").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AnatomicalOrientationType
        {
            get { return _dicom.FindFirst("00102210") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AnatomicalOrientationType_
        {
            get { return _dicom.FindAll("00102210").Select(d => d as CodeString).ToList(); }
        }

        public LongString PatientBreedDescription
        {
            get { return _dicom.FindFirst("00102292") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientBreedDescription_
        {
            get { return _dicom.FindAll("00102292").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PatientBreedCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00102293") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientBreedCodeSequence_
        {
            get { return _dicom.FindAll("00102293").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector BreedRegistrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00102294") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BreedRegistrationSequence_
        {
            get { return _dicom.FindAll("00102294").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString BreedRegistrationNumber
        {
            get { return _dicom.FindFirst("00102295") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> BreedRegistrationNumber_
        {
            get { return _dicom.FindAll("00102295").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector BreedRegistryCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00102296") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BreedRegistryCodeSequence_
        {
            get { return _dicom.FindAll("00102296").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName ResponsiblePerson
        {
            get { return _dicom.FindFirst("00102297") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> ResponsiblePerson_
        {
            get { return _dicom.FindAll("00102297").Select(d => d as PersonName).ToList(); }
        }

        public CodeString ResponsiblePersonRole
        {
            get { return _dicom.FindFirst("00102298") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ResponsiblePersonRole_
        {
            get { return _dicom.FindAll("00102298").Select(d => d as CodeString).ToList(); }
        }

        public LongString ResponsibleOrganization
        {
            get { return _dicom.FindFirst("00102299") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ResponsibleOrganization_
        {
            get { return _dicom.FindAll("00102299").Select(d => d as LongString).ToList(); }
        }

        public LongText PatientComments
        {
            get { return _dicom.FindFirst("00104000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> PatientComments_
        {
            get { return _dicom.FindAll("00104000").Select(d => d as LongText).ToList(); }
        }

        public FloatingPointSingle ExaminedBodyThickness
        {
            get { return _dicom.FindFirst("00109431") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ExaminedBodyThickness_
        {
            get { return _dicom.FindAll("00109431").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongString ClinicalTrialSponsorName
        {
            get { return _dicom.FindFirst("00120010") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialSponsorName_
        {
            get { return _dicom.FindAll("00120010").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialProtocolID
        {
            get { return _dicom.FindFirst("00120020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialProtocolID_
        {
            get { return _dicom.FindAll("00120020").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialProtocolName
        {
            get { return _dicom.FindFirst("00120021") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialProtocolName_
        {
            get { return _dicom.FindAll("00120021").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialSiteID
        {
            get { return _dicom.FindFirst("00120030") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialSiteID_
        {
            get { return _dicom.FindAll("00120030").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialSiteName
        {
            get { return _dicom.FindFirst("00120031") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialSiteName_
        {
            get { return _dicom.FindAll("00120031").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialSubjectID
        {
            get { return _dicom.FindFirst("00120040") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialSubjectID_
        {
            get { return _dicom.FindAll("00120040").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialSubjectReadingID
        {
            get { return _dicom.FindFirst("00120042") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialSubjectReadingID_
        {
            get { return _dicom.FindAll("00120042").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialTimePointID
        {
            get { return _dicom.FindFirst("00120050") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialTimePointID_
        {
            get { return _dicom.FindAll("00120050").Select(d => d as LongString).ToList(); }
        }

        public ShortText ClinicalTrialTimePointDescription
        {
            get { return _dicom.FindFirst("00120051") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ClinicalTrialTimePointDescription_
        {
            get { return _dicom.FindAll("00120051").Select(d => d as ShortText).ToList(); }
        }

        public LongString ClinicalTrialCoordinatingCenterName
        {
            get { return _dicom.FindFirst("00120060") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialCoordinatingCenterName_
        {
            get { return _dicom.FindAll("00120060").Select(d => d as LongString).ToList(); }
        }

        public CodeString PatientIdentityRemoved
        {
            get { return _dicom.FindFirst("00120062") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientIdentityRemoved_
        {
            get { return _dicom.FindAll("00120062").Select(d => d as CodeString).ToList(); }
        }

        public LongString DeidentificationMethod
        {
            get { return _dicom.FindFirst("00120063") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DeidentificationMethod_
        {
            get { return _dicom.FindAll("00120063").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector DeidentificationMethodCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00120064") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DeidentificationMethodCodeSequence_
        {
            get { return _dicom.FindAll("00120064").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ClinicalTrialSeriesID
        {
            get { return _dicom.FindFirst("00120071") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialSeriesID_
        {
            get { return _dicom.FindAll("00120071").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialSeriesDescription
        {
            get { return _dicom.FindFirst("00120072") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialSeriesDescription_
        {
            get { return _dicom.FindAll("00120072").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialProtocolEthicsCommitteeName
        {
            get { return _dicom.FindFirst("00120081") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialProtocolEthicsCommitteeName_
        {
            get { return _dicom.FindAll("00120081").Select(d => d as LongString).ToList(); }
        }

        public LongString ClinicalTrialProtocolEthicsCommitteeApprovalNumber
        {
            get { return _dicom.FindFirst("00120082") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ClinicalTrialProtocolEthicsCommitteeApprovalNumber_
        {
            get { return _dicom.FindAll("00120082").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ConsentForClinicalTrialUseSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00120083") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ConsentForClinicalTrialUseSequence_
        {
            get { return _dicom.FindAll("00120083").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString DistributionType
        {
            get { return _dicom.FindFirst("00120084") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DistributionType_
        {
            get { return _dicom.FindAll("00120084").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ConsentForDistributionFlag
        {
            get { return _dicom.FindFirst("00120085") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ConsentForDistributionFlag_
        {
            get { return _dicom.FindAll("00120085").Select(d => d as CodeString).ToList(); }
        }

        public ShortText CADFileFormat
        {
            get { return _dicom.FindFirst("00140023") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CADFileFormat_
        {
            get { return _dicom.FindAll("00140023").Select(d => d as ShortText).ToList(); }
        }

        public ShortText ComponentReferenceSystem
        {
            get { return _dicom.FindFirst("00140024") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ComponentReferenceSystem_
        {
            get { return _dicom.FindAll("00140024").Select(d => d as ShortText).ToList(); }
        }

        public ShortText ComponentManufacturingProcedure
        {
            get { return _dicom.FindFirst("00140025") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ComponentManufacturingProcedure_
        {
            get { return _dicom.FindAll("00140025").Select(d => d as ShortText).ToList(); }
        }

        public ShortText ComponentManufacturer
        {
            get { return _dicom.FindFirst("00140028") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ComponentManufacturer_
        {
            get { return _dicom.FindAll("00140028").Select(d => d as ShortText).ToList(); }
        }

        public DecimalString MaterialThickness
        {
            get { return _dicom.FindFirst("00140030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MaterialThickness_
        {
            get { return _dicom.FindAll("00140030").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MaterialPipeDiameter
        {
            get { return _dicom.FindFirst("00140032") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MaterialPipeDiameter_
        {
            get { return _dicom.FindAll("00140032").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MaterialIsolationDiameter
        {
            get { return _dicom.FindFirst("00140034") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MaterialIsolationDiameter_
        {
            get { return _dicom.FindAll("00140034").Select(d => d as DecimalString).ToList(); }
        }

        public ShortText MaterialGrade
        {
            get { return _dicom.FindFirst("00140042") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> MaterialGrade_
        {
            get { return _dicom.FindAll("00140042").Select(d => d as ShortText).ToList(); }
        }

        public ShortText MaterialPropertiesFileID
        {
            get { return _dicom.FindFirst("00140044") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> MaterialPropertiesFileID_
        {
            get { return _dicom.FindAll("00140044").Select(d => d as ShortText).ToList(); }
        }

        public ShortText MaterialPropertiesFileFormat
        {
            get { return _dicom.FindFirst("00140045") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> MaterialPropertiesFileFormat_
        {
            get { return _dicom.FindAll("00140045").Select(d => d as ShortText).ToList(); }
        }

        public LongText MaterialNotes
        {
            get { return _dicom.FindFirst("00140046") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> MaterialNotes_
        {
            get { return _dicom.FindAll("00140046").Select(d => d as LongText).ToList(); }
        }

        public CodeString ComponentShape
        {
            get { return _dicom.FindFirst("00140050") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ComponentShape_
        {
            get { return _dicom.FindAll("00140050").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CurvatureType
        {
            get { return _dicom.FindFirst("00140052") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CurvatureType_
        {
            get { return _dicom.FindAll("00140052").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString OuterDiameter
        {
            get { return _dicom.FindFirst("00140054") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> OuterDiameter_
        {
            get { return _dicom.FindAll("00140054").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString InnerDiameter
        {
            get { return _dicom.FindFirst("00140056") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> InnerDiameter_
        {
            get { return _dicom.FindAll("00140056").Select(d => d as DecimalString).ToList(); }
        }

        public ShortText ActualEnvironmentalConditions
        {
            get { return _dicom.FindFirst("00141010") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ActualEnvironmentalConditions_
        {
            get { return _dicom.FindAll("00141010").Select(d => d as ShortText).ToList(); }
        }

        public Date ExpiryDate
        {
            get { return _dicom.FindFirst("00141020") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ExpiryDate_
        {
            get { return _dicom.FindAll("00141020").Select(d => d as Date).ToList(); }
        }

        public ShortText EnvironmentalConditions
        {
            get { return _dicom.FindFirst("00141040") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> EnvironmentalConditions_
        {
            get { return _dicom.FindAll("00141040").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector EvaluatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00142002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EvaluatorSequence_
        {
            get { return _dicom.FindAll("00142002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString EvaluatorNumber
        {
            get { return _dicom.FindFirst("00142004") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> EvaluatorNumber_
        {
            get { return _dicom.FindAll("00142004").Select(d => d as IntegerString).ToList(); }
        }

        public PersonName EvaluatorName
        {
            get { return _dicom.FindFirst("00142006") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> EvaluatorName_
        {
            get { return _dicom.FindAll("00142006").Select(d => d as PersonName).ToList(); }
        }

        public IntegerString EvaluationAttempt
        {
            get { return _dicom.FindFirst("00142008") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> EvaluationAttempt_
        {
            get { return _dicom.FindAll("00142008").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector IndicationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00142012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IndicationSequence_
        {
            get { return _dicom.FindAll("00142012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString IndicationNumber
        {
            get { return _dicom.FindFirst("00142014") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> IndicationNumber_
        {
            get { return _dicom.FindAll("00142014").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString IndicationLabel
        {
            get { return _dicom.FindFirst("00142016") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> IndicationLabel_
        {
            get { return _dicom.FindAll("00142016").Select(d => d as ShortString).ToList(); }
        }

        public ShortText IndicationDescription
        {
            get { return _dicom.FindFirst("00142018") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> IndicationDescription_
        {
            get { return _dicom.FindAll("00142018").Select(d => d as ShortText).ToList(); }
        }

        public CodeString IndicationType
        {
            get { return _dicom.FindFirst("0014201A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IndicationType_
        {
            get { return _dicom.FindAll("0014201A").Select(d => d as CodeString).ToList(); }
        }

        public CodeString IndicationDisposition
        {
            get { return _dicom.FindFirst("0014201C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IndicationDisposition_
        {
            get { return _dicom.FindAll("0014201C").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector IndicationROISequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0014201E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IndicationROISequence_
        {
            get { return _dicom.FindAll("0014201E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IndicationPhysicalPropertySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00142030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IndicationPhysicalPropertySequence_
        {
            get { return _dicom.FindAll("00142030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString PropertyLabel
        {
            get { return _dicom.FindFirst("00142032") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PropertyLabel_
        {
            get { return _dicom.FindAll("00142032").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString CoordinateSystemNumberOfAxes
        {
            get { return _dicom.FindFirst("00142202") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CoordinateSystemNumberOfAxes_
        {
            get { return _dicom.FindAll("00142202").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector CoordinateSystemAxesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00142204") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CoordinateSystemAxesSequence_
        {
            get { return _dicom.FindAll("00142204").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText CoordinateSystemAxisDescription
        {
            get { return _dicom.FindFirst("00142206") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CoordinateSystemAxisDescription_
        {
            get { return _dicom.FindAll("00142206").Select(d => d as ShortText).ToList(); }
        }

        public CodeString CoordinateSystemDataSetMapping
        {
            get { return _dicom.FindFirst("00142208") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CoordinateSystemDataSetMapping_
        {
            get { return _dicom.FindAll("00142208").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString CoordinateSystemAxisNumber
        {
            get { return _dicom.FindFirst("0014220A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CoordinateSystemAxisNumber_
        {
            get { return _dicom.FindAll("0014220A").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString CoordinateSystemAxisType
        {
            get { return _dicom.FindFirst("0014220C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CoordinateSystemAxisType_
        {
            get { return _dicom.FindAll("0014220C").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CoordinateSystemAxisUnits
        {
            get { return _dicom.FindFirst("0014220E") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CoordinateSystemAxisUnits_
        {
            get { return _dicom.FindAll("0014220E").Select(d => d as CodeString).ToList(); }
        }

        public OtherByteString CoordinateSystemAxisValues
        {
            get { return _dicom.FindFirst("00142210") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> CoordinateSystemAxisValues_
        {
            get { return _dicom.FindAll("00142210").Select(d => d as OtherByteString).ToList(); }
        }

        public SequenceSelector CoordinateSystemTransformSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00142220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CoordinateSystemTransformSequence_
        {
            get { return _dicom.FindAll("00142220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText TransformDescription
        {
            get { return _dicom.FindFirst("00142222") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> TransformDescription_
        {
            get { return _dicom.FindAll("00142222").Select(d => d as ShortText).ToList(); }
        }

        public IntegerString TransformNumberOfAxes
        {
            get { return _dicom.FindFirst("00142224") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TransformNumberOfAxes_
        {
            get { return _dicom.FindAll("00142224").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString TransformOrderOfAxes
        {
            get { return _dicom.FindFirst("00142226") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TransformOrderOfAxes_
        {
            get { return _dicom.FindAll("00142226").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString TransformedAxisUnits
        {
            get { return _dicom.FindFirst("00142228") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TransformedAxisUnits_
        {
            get { return _dicom.FindAll("00142228").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString CoordinateSystemTransformRotationAndScaleMatrix
        {
            get { return _dicom.FindFirst("0014222A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CoordinateSystemTransformRotationAndScaleMatrix_
        {
            get { return _dicom.FindAll("0014222A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CoordinateSystemTransformTranslationMatrix
        {
            get { return _dicom.FindFirst("0014222C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CoordinateSystemTransformTranslationMatrix_
        {
            get { return _dicom.FindAll("0014222C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString InternalDetectorFrameTime
        {
            get { return _dicom.FindFirst("00143011") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> InternalDetectorFrameTime_
        {
            get { return _dicom.FindAll("00143011").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString NumberOfFramesIntegrated
        {
            get { return _dicom.FindFirst("00143012") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NumberOfFramesIntegrated_
        {
            get { return _dicom.FindAll("00143012").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector DetectorTemperatureSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00143020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DetectorTemperatureSequence_
        {
            get { return _dicom.FindAll("00143020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString SensorName
        {
            get { return _dicom.FindFirst("00143022") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SensorName_
        {
            get { return _dicom.FindAll("00143022").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString HorizontalOffsetOfSensor
        {
            get { return _dicom.FindFirst("00143024") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> HorizontalOffsetOfSensor_
        {
            get { return _dicom.FindAll("00143024").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString VerticalOffsetOfSensor
        {
            get { return _dicom.FindFirst("00143026") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> VerticalOffsetOfSensor_
        {
            get { return _dicom.FindAll("00143026").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SensorTemperature
        {
            get { return _dicom.FindFirst("00143028") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SensorTemperature_
        {
            get { return _dicom.FindAll("00143028").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector DarkCurrentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00143040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DarkCurrentSequence_
        {
            get { return _dicom.FindAll("00143040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherByteString DarkCurrentCounts
        {
            get { return _dicom.FindFirst("00143050") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> DarkCurrentCounts_
        {
            get { return _dicom.FindAll("00143050").Select(d => d as OtherByteString).ToList(); }
        }

        public SequenceSelector GainCorrectionReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00143060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GainCorrectionReferenceSequence_
        {
            get { return _dicom.FindAll("00143060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherByteString AirCounts
        {
            get { return _dicom.FindFirst("00143070") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> AirCounts_
        {
            get { return _dicom.FindAll("00143070").Select(d => d as OtherByteString).ToList(); }
        }

        public DecimalString KVUsedInGainCalibration
        {
            get { return _dicom.FindFirst("00143071") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> KVUsedInGainCalibration_
        {
            get { return _dicom.FindAll("00143071").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MAUsedInGainCalibration
        {
            get { return _dicom.FindFirst("00143072") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MAUsedInGainCalibration_
        {
            get { return _dicom.FindAll("00143072").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString NumberOfFramesUsedForIntegration
        {
            get { return _dicom.FindFirst("00143073") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NumberOfFramesUsedForIntegration_
        {
            get { return _dicom.FindAll("00143073").Select(d => d as DecimalString).ToList(); }
        }

        public LongString FilterMaterialUsedInGainCalibration
        {
            get { return _dicom.FindFirst("00143074") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FilterMaterialUsedInGainCalibration_
        {
            get { return _dicom.FindAll("00143074").Select(d => d as LongString).ToList(); }
        }

        public DecimalString FilterThicknessUsedInGainCalibration
        {
            get { return _dicom.FindFirst("00143075") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FilterThicknessUsedInGainCalibration_
        {
            get { return _dicom.FindAll("00143075").Select(d => d as DecimalString).ToList(); }
        }

        public Date DateOfGainCalibration
        {
            get { return _dicom.FindFirst("00143076") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> DateOfGainCalibration_
        {
            get { return _dicom.FindAll("00143076").Select(d => d as Date).ToList(); }
        }

        public Time TimeOfGainCalibration
        {
            get { return _dicom.FindFirst("00143077") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> TimeOfGainCalibration_
        {
            get { return _dicom.FindAll("00143077").Select(d => d as Time).ToList(); }
        }

        public OtherByteString BadPixelImage
        {
            get { return _dicom.FindFirst("00143080") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> BadPixelImage_
        {
            get { return _dicom.FindAll("00143080").Select(d => d as OtherByteString).ToList(); }
        }

        public LongText CalibrationNotes
        {
            get { return _dicom.FindFirst("00143099") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> CalibrationNotes_
        {
            get { return _dicom.FindAll("00143099").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector PulserEquipmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PulserEquipmentSequence_
        {
            get { return _dicom.FindAll("00144002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PulserType
        {
            get { return _dicom.FindFirst("00144004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PulserType_
        {
            get { return _dicom.FindAll("00144004").Select(d => d as CodeString).ToList(); }
        }

        public LongText PulserNotes
        {
            get { return _dicom.FindFirst("00144006") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> PulserNotes_
        {
            get { return _dicom.FindAll("00144006").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector ReceiverEquipmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReceiverEquipmentSequence_
        {
            get { return _dicom.FindAll("00144008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString AmplifierType
        {
            get { return _dicom.FindFirst("0014400A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AmplifierType_
        {
            get { return _dicom.FindAll("0014400A").Select(d => d as CodeString).ToList(); }
        }

        public LongText ReceiverNotes
        {
            get { return _dicom.FindFirst("0014400C") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ReceiverNotes_
        {
            get { return _dicom.FindAll("0014400C").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector PreAmplifierEquipmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0014400E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PreAmplifierEquipmentSequence_
        {
            get { return _dicom.FindAll("0014400E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongText PreAmplifierNotes
        {
            get { return _dicom.FindFirst("0014400F") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> PreAmplifierNotes_
        {
            get { return _dicom.FindAll("0014400F").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector TransmitTransducerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransmitTransducerSequence_
        {
            get { return _dicom.FindAll("00144010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReceiveTransducerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144011") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReceiveTransducerSequence_
        {
            get { return _dicom.FindAll("00144011").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NumberOfElements
        {
            get { return _dicom.FindFirst("00144012") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfElements_
        {
            get { return _dicom.FindAll("00144012").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ElementShape
        {
            get { return _dicom.FindFirst("00144013") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ElementShape_
        {
            get { return _dicom.FindAll("00144013").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString ElementDimensionA
        {
            get { return _dicom.FindFirst("00144014") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ElementDimensionA_
        {
            get { return _dicom.FindAll("00144014").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ElementDimensionB
        {
            get { return _dicom.FindFirst("00144015") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ElementDimensionB_
        {
            get { return _dicom.FindAll("00144015").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ElementPitch
        {
            get { return _dicom.FindFirst("00144016") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ElementPitch_
        {
            get { return _dicom.FindAll("00144016").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MeasuredBeamDimensionA
        {
            get { return _dicom.FindFirst("00144017") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MeasuredBeamDimensionA_
        {
            get { return _dicom.FindAll("00144017").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MeasuredBeamDimensionB
        {
            get { return _dicom.FindFirst("00144018") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MeasuredBeamDimensionB_
        {
            get { return _dicom.FindAll("00144018").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString LocationOfMeasuredBeamDiameter
        {
            get { return _dicom.FindFirst("00144019") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> LocationOfMeasuredBeamDiameter_
        {
            get { return _dicom.FindAll("00144019").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString NominalFrequency
        {
            get { return _dicom.FindFirst("0014401A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NominalFrequency_
        {
            get { return _dicom.FindAll("0014401A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MeasuredCenterFrequency
        {
            get { return _dicom.FindFirst("0014401B") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MeasuredCenterFrequency_
        {
            get { return _dicom.FindAll("0014401B").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MeasuredBandwidth
        {
            get { return _dicom.FindFirst("0014401C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MeasuredBandwidth_
        {
            get { return _dicom.FindAll("0014401C").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector PulserSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PulserSettingsSequence_
        {
            get { return _dicom.FindAll("00144020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString PulseWidth
        {
            get { return _dicom.FindFirst("00144022") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PulseWidth_
        {
            get { return _dicom.FindAll("00144022").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ExcitationFrequency
        {
            get { return _dicom.FindFirst("00144024") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ExcitationFrequency_
        {
            get { return _dicom.FindAll("00144024").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString ModulationType
        {
            get { return _dicom.FindFirst("00144026") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ModulationType_
        {
            get { return _dicom.FindAll("00144026").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString Damping
        {
            get { return _dicom.FindFirst("00144028") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> Damping_
        {
            get { return _dicom.FindAll("00144028").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ReceiverSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReceiverSettingsSequence_
        {
            get { return _dicom.FindAll("00144030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString AcquiredSoundpathLength
        {
            get { return _dicom.FindFirst("00144031") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> AcquiredSoundpathLength_
        {
            get { return _dicom.FindAll("00144031").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString AcquisitionCompressionType
        {
            get { return _dicom.FindFirst("00144032") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AcquisitionCompressionType_
        {
            get { return _dicom.FindAll("00144032").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString AcquisitionSampleSize
        {
            get { return _dicom.FindFirst("00144033") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AcquisitionSampleSize_
        {
            get { return _dicom.FindAll("00144033").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString RectifierSmoothing
        {
            get { return _dicom.FindFirst("00144034") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RectifierSmoothing_
        {
            get { return _dicom.FindAll("00144034").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector DACSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144035") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DACSequence_
        {
            get { return _dicom.FindAll("00144035").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString DACType
        {
            get { return _dicom.FindFirst("00144036") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DACType_
        {
            get { return _dicom.FindAll("00144036").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString DACGainPoints
        {
            get { return _dicom.FindFirst("00144038") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DACGainPoints_
        {
            get { return _dicom.FindAll("00144038").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DACTimePoints
        {
            get { return _dicom.FindFirst("0014403A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DACTimePoints_
        {
            get { return _dicom.FindAll("0014403A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DACAmplitude
        {
            get { return _dicom.FindFirst("0014403C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DACAmplitude_
        {
            get { return _dicom.FindAll("0014403C").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector PreAmplifierSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PreAmplifierSettingsSequence_
        {
            get { return _dicom.FindAll("00144040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TransmitTransducerSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransmitTransducerSettingsSequence_
        {
            get { return _dicom.FindAll("00144050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReceiveTransducerSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144051") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReceiveTransducerSettingsSequence_
        {
            get { return _dicom.FindAll("00144051").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString IncidentAngle
        {
            get { return _dicom.FindFirst("00144052") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> IncidentAngle_
        {
            get { return _dicom.FindAll("00144052").Select(d => d as DecimalString).ToList(); }
        }

        public ShortText CouplingTechnique
        {
            get { return _dicom.FindFirst("00144054") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CouplingTechnique_
        {
            get { return _dicom.FindAll("00144054").Select(d => d as ShortText).ToList(); }
        }

        public ShortText CouplingMedium
        {
            get { return _dicom.FindFirst("00144056") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CouplingMedium_
        {
            get { return _dicom.FindAll("00144056").Select(d => d as ShortText).ToList(); }
        }

        public DecimalString CouplingVelocity
        {
            get { return _dicom.FindFirst("00144057") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CouplingVelocity_
        {
            get { return _dicom.FindAll("00144057").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CrystalCenterLocationX
        {
            get { return _dicom.FindFirst("00144058") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CrystalCenterLocationX_
        {
            get { return _dicom.FindAll("00144058").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CrystalCenterLocationZ
        {
            get { return _dicom.FindFirst("00144059") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CrystalCenterLocationZ_
        {
            get { return _dicom.FindAll("00144059").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SoundPathLength
        {
            get { return _dicom.FindFirst("0014405A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SoundPathLength_
        {
            get { return _dicom.FindAll("0014405A").Select(d => d as DecimalString).ToList(); }
        }

        public ShortText DelayLawIdentifier
        {
            get { return _dicom.FindFirst("0014405C") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> DelayLawIdentifier_
        {
            get { return _dicom.FindAll("0014405C").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector GateSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GateSettingsSequence_
        {
            get { return _dicom.FindAll("00144060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString GateThreshold
        {
            get { return _dicom.FindFirst("00144062") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GateThreshold_
        {
            get { return _dicom.FindAll("00144062").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString VelocityOfSound
        {
            get { return _dicom.FindFirst("00144064") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> VelocityOfSound_
        {
            get { return _dicom.FindAll("00144064").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector CalibrationSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00144070") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CalibrationSettingsSequence_
        {
            get { return _dicom.FindAll("00144070").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText CalibrationProcedure
        {
            get { return _dicom.FindFirst("00144072") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CalibrationProcedure_
        {
            get { return _dicom.FindAll("00144072").Select(d => d as ShortText).ToList(); }
        }

        public ShortString ProcedureVersion
        {
            get { return _dicom.FindFirst("00144074") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ProcedureVersion_
        {
            get { return _dicom.FindAll("00144074").Select(d => d as ShortString).ToList(); }
        }

        public Date ProcedureCreationDate
        {
            get { return _dicom.FindFirst("00144076") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ProcedureCreationDate_
        {
            get { return _dicom.FindAll("00144076").Select(d => d as Date).ToList(); }
        }

        public Date ProcedureExpirationDate
        {
            get { return _dicom.FindFirst("00144078") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ProcedureExpirationDate_
        {
            get { return _dicom.FindAll("00144078").Select(d => d as Date).ToList(); }
        }

        public Date ProcedureLastModifiedDate
        {
            get { return _dicom.FindFirst("0014407A") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ProcedureLastModifiedDate_
        {
            get { return _dicom.FindAll("0014407A").Select(d => d as Date).ToList(); }
        }

        public Time CalibrationTime
        {
            get { return _dicom.FindFirst("0014407C") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> CalibrationTime_
        {
            get { return _dicom.FindAll("0014407C").Select(d => d as Time).ToList(); }
        }

        public Date CalibrationDate
        {
            get { return _dicom.FindFirst("0014407E") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> CalibrationDate_
        {
            get { return _dicom.FindAll("0014407E").Select(d => d as Date).ToList(); }
        }

        public IntegerString LINACEnergy
        {
            get { return _dicom.FindFirst("00145002") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> LINACEnergy_
        {
            get { return _dicom.FindAll("00145002").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString LINACOutput
        {
            get { return _dicom.FindFirst("00145004") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> LINACOutput_
        {
            get { return _dicom.FindAll("00145004").Select(d => d as IntegerString).ToList(); }
        }

        public LongString ContrastBolusAgent
        {
            get { return _dicom.FindFirst("00180010") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContrastBolusAgent_
        {
            get { return _dicom.FindAll("00180010").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ContrastBolusAgentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00180012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContrastBolusAgentSequence_
        {
            get { return _dicom.FindAll("00180012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContrastBolusAdministrationRouteSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00180014") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContrastBolusAdministrationRouteSequence_
        {
            get { return _dicom.FindAll("00180014").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString BodyPartExamined
        {
            get { return _dicom.FindFirst("00180015") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BodyPartExamined_
        {
            get { return _dicom.FindAll("00180015").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ScanningSequence
        {
            get { return _dicom.FindFirst("00180020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScanningSequence_
        {
            get { return _dicom.FindAll("00180020").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SequenceVariant
        {
            get { return _dicom.FindFirst("00180021") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SequenceVariant_
        {
            get { return _dicom.FindAll("00180021").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ScanOptions
        {
            get { return _dicom.FindFirst("00180022") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScanOptions_
        {
            get { return _dicom.FindAll("00180022").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MRAcquisitionType
        {
            get { return _dicom.FindFirst("00180023") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MRAcquisitionType_
        {
            get { return _dicom.FindAll("00180023").Select(d => d as CodeString).ToList(); }
        }

        public ShortString SequenceName
        {
            get { return _dicom.FindFirst("00180024") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> SequenceName_
        {
            get { return _dicom.FindAll("00180024").Select(d => d as ShortString).ToList(); }
        }

        public CodeString AngioFlag
        {
            get { return _dicom.FindFirst("00180025") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AngioFlag_
        {
            get { return _dicom.FindAll("00180025").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector InterventionDrugInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00180026") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InterventionDrugInformationSequence_
        {
            get { return _dicom.FindAll("00180026").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public Time InterventionDrugStopTime
        {
            get { return _dicom.FindFirst("00180027") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> InterventionDrugStopTime_
        {
            get { return _dicom.FindAll("00180027").Select(d => d as Time).ToList(); }
        }

        public DecimalString InterventionDrugDose
        {
            get { return _dicom.FindFirst("00180028") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> InterventionDrugDose_
        {
            get { return _dicom.FindAll("00180028").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector InterventionDrugCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00180029") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InterventionDrugCodeSequence_
        {
            get { return _dicom.FindAll("00180029").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AdditionalDrugSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0018002A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AdditionalDrugSequence_
        {
            get { return _dicom.FindAll("0018002A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString RadionuclideRetired
        {
            get { return _dicom.FindFirst("00180030") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RadionuclideRetired_
        {
            get { return _dicom.FindAll("00180030").Select(d => d as LongString).ToList(); }
        }

        public LongString Radiopharmaceutical
        {
            get { return _dicom.FindFirst("00180031") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> Radiopharmaceutical_
        {
            get { return _dicom.FindAll("00180031").Select(d => d as LongString).ToList(); }
        }

        public DecimalString EnergyWindowCenterlineRetired
        {
            get { return _dicom.FindFirst("00180032") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EnergyWindowCenterlineRetired_
        {
            get { return _dicom.FindAll("00180032").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString EnergyWindowTotalWidthRetired
        {
            get { return _dicom.FindFirst("00180033") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EnergyWindowTotalWidthRetired_
        {
            get { return _dicom.FindAll("00180033").Select(d => d as DecimalString).ToList(); }
        }

        public LongString InterventionDrugName
        {
            get { return _dicom.FindFirst("00180034") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> InterventionDrugName_
        {
            get { return _dicom.FindAll("00180034").Select(d => d as LongString).ToList(); }
        }

        public Time InterventionDrugStartTime
        {
            get { return _dicom.FindFirst("00180035") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> InterventionDrugStartTime_
        {
            get { return _dicom.FindAll("00180035").Select(d => d as Time).ToList(); }
        }

        public SequenceSelector InterventionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00180036") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InterventionSequence_
        {
            get { return _dicom.FindAll("00180036").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString TherapyTypeRetired
        {
            get { return _dicom.FindFirst("00180037") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TherapyTypeRetired_
        {
            get { return _dicom.FindAll("00180037").Select(d => d as CodeString).ToList(); }
        }

        public CodeString InterventionStatus
        {
            get { return _dicom.FindFirst("00180038") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InterventionStatus_
        {
            get { return _dicom.FindAll("00180038").Select(d => d as CodeString).ToList(); }
        }

        public CodeString TherapyDescriptionRetired
        {
            get { return _dicom.FindFirst("00180039") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TherapyDescriptionRetired_
        {
            get { return _dicom.FindAll("00180039").Select(d => d as CodeString).ToList(); }
        }

        public ShortText InterventionDescription
        {
            get { return _dicom.FindFirst("0018003A") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> InterventionDescription_
        {
            get { return _dicom.FindAll("0018003A").Select(d => d as ShortText).ToList(); }
        }

        public IntegerString CineRate
        {
            get { return _dicom.FindFirst("00180040") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CineRate_
        {
            get { return _dicom.FindAll("00180040").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString InitialCineRunState
        {
            get { return _dicom.FindFirst("00180042") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InitialCineRunState_
        {
            get { return _dicom.FindAll("00180042").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString SliceThickness
        {
            get { return _dicom.FindFirst("00180050") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SliceThickness_
        {
            get { return _dicom.FindAll("00180050").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString KVP
        {
            get { return _dicom.FindFirst("00180060") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> KVP_
        {
            get { return _dicom.FindAll("00180060").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString CountsAccumulated
        {
            get { return _dicom.FindFirst("00180070") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CountsAccumulated_
        {
            get { return _dicom.FindAll("00180070").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString AcquisitionTerminationCondition
        {
            get { return _dicom.FindFirst("00180071") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AcquisitionTerminationCondition_
        {
            get { return _dicom.FindAll("00180071").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString EffectiveDuration
        {
            get { return _dicom.FindFirst("00180072") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EffectiveDuration_
        {
            get { return _dicom.FindAll("00180072").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString AcquisitionStartCondition
        {
            get { return _dicom.FindFirst("00180073") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AcquisitionStartCondition_
        {
            get { return _dicom.FindAll("00180073").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString AcquisitionStartConditionData
        {
            get { return _dicom.FindFirst("00180074") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AcquisitionStartConditionData_
        {
            get { return _dicom.FindAll("00180074").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString AcquisitionTerminationConditionData
        {
            get { return _dicom.FindFirst("00180075") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AcquisitionTerminationConditionData_
        {
            get { return _dicom.FindAll("00180075").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString RepetitionTime
        {
            get { return _dicom.FindFirst("00180080") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RepetitionTime_
        {
            get { return _dicom.FindAll("00180080").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString EchoTime
        {
            get { return _dicom.FindFirst("00180081") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EchoTime_
        {
            get { return _dicom.FindAll("00180081").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString InversionTime
        {
            get { return _dicom.FindFirst("00180082") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> InversionTime_
        {
            get { return _dicom.FindAll("00180082").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString NumberOfAverages
        {
            get { return _dicom.FindFirst("00180083") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NumberOfAverages_
        {
            get { return _dicom.FindAll("00180083").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImagingFrequency
        {
            get { return _dicom.FindFirst("00180084") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImagingFrequency_
        {
            get { return _dicom.FindAll("00180084").Select(d => d as DecimalString).ToList(); }
        }

        public ShortString ImagedNucleus
        {
            get { return _dicom.FindFirst("00180085") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ImagedNucleus_
        {
            get { return _dicom.FindAll("00180085").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString EchoNumbers
        {
            get { return _dicom.FindFirst("00180086") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> EchoNumbers_
        {
            get { return _dicom.FindAll("00180086").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString MagneticFieldStrength
        {
            get { return _dicom.FindFirst("00180087") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MagneticFieldStrength_
        {
            get { return _dicom.FindAll("00180087").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SpacingBetweenSlices
        {
            get { return _dicom.FindFirst("00180088") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpacingBetweenSlices_
        {
            get { return _dicom.FindAll("00180088").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString NumberOfPhaseEncodingSteps
        {
            get { return _dicom.FindFirst("00180089") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfPhaseEncodingSteps_
        {
            get { return _dicom.FindAll("00180089").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString DataCollectionDiameter
        {
            get { return _dicom.FindFirst("00180090") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DataCollectionDiameter_
        {
            get { return _dicom.FindAll("00180090").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString EchoTrainLength
        {
            get { return _dicom.FindFirst("00180091") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> EchoTrainLength_
        {
            get { return _dicom.FindAll("00180091").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString PercentSampling
        {
            get { return _dicom.FindFirst("00180093") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PercentSampling_
        {
            get { return _dicom.FindAll("00180093").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString PercentPhaseFieldOfView
        {
            get { return _dicom.FindFirst("00180094") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PercentPhaseFieldOfView_
        {
            get { return _dicom.FindAll("00180094").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString PixelBandwidth
        {
            get { return _dicom.FindFirst("00180095") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PixelBandwidth_
        {
            get { return _dicom.FindAll("00180095").Select(d => d as DecimalString).ToList(); }
        }

        public LongString DeviceSerialNumber
        {
            get { return _dicom.FindFirst("00181000") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DeviceSerialNumber_
        {
            get { return _dicom.FindAll("00181000").Select(d => d as LongString).ToList(); }
        }

        public UniqueIdentifier DeviceUID
        {
            get { return _dicom.FindFirst("00181002") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> DeviceUID_
        {
            get { return _dicom.FindAll("00181002").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public LongString DeviceID
        {
            get { return _dicom.FindFirst("00181003") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DeviceID_
        {
            get { return _dicom.FindAll("00181003").Select(d => d as LongString).ToList(); }
        }

        public LongString PlateID
        {
            get { return _dicom.FindFirst("00181004") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PlateID_
        {
            get { return _dicom.FindAll("00181004").Select(d => d as LongString).ToList(); }
        }

        public LongString GeneratorID
        {
            get { return _dicom.FindFirst("00181005") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> GeneratorID_
        {
            get { return _dicom.FindAll("00181005").Select(d => d as LongString).ToList(); }
        }

        public LongString GridID
        {
            get { return _dicom.FindFirst("00181006") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> GridID_
        {
            get { return _dicom.FindAll("00181006").Select(d => d as LongString).ToList(); }
        }

        public LongString CassetteID
        {
            get { return _dicom.FindFirst("00181007") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CassetteID_
        {
            get { return _dicom.FindAll("00181007").Select(d => d as LongString).ToList(); }
        }

        public LongString GantryID
        {
            get { return _dicom.FindFirst("00181008") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> GantryID_
        {
            get { return _dicom.FindAll("00181008").Select(d => d as LongString).ToList(); }
        }

        public LongString SecondaryCaptureDeviceID
        {
            get { return _dicom.FindFirst("00181010") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SecondaryCaptureDeviceID_
        {
            get { return _dicom.FindAll("00181010").Select(d => d as LongString).ToList(); }
        }

        public LongString HardcopyCreationDeviceIDRetired
        {
            get { return _dicom.FindFirst("00181011") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HardcopyCreationDeviceIDRetired_
        {
            get { return _dicom.FindAll("00181011").Select(d => d as LongString).ToList(); }
        }

        public Date DateOfSecondaryCapture
        {
            get { return _dicom.FindFirst("00181012") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> DateOfSecondaryCapture_
        {
            get { return _dicom.FindAll("00181012").Select(d => d as Date).ToList(); }
        }

        public Time TimeOfSecondaryCapture
        {
            get { return _dicom.FindFirst("00181014") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> TimeOfSecondaryCapture_
        {
            get { return _dicom.FindAll("00181014").Select(d => d as Time).ToList(); }
        }

        public LongString SecondaryCaptureDeviceManufacturer
        {
            get { return _dicom.FindFirst("00181016") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SecondaryCaptureDeviceManufacturer_
        {
            get { return _dicom.FindAll("00181016").Select(d => d as LongString).ToList(); }
        }

        public LongString HardcopyDeviceManufacturerRetired
        {
            get { return _dicom.FindFirst("00181017") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HardcopyDeviceManufacturerRetired_
        {
            get { return _dicom.FindAll("00181017").Select(d => d as LongString).ToList(); }
        }

        public LongString SecondaryCaptureDeviceManufacturerModelName
        {
            get { return _dicom.FindFirst("00181018") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SecondaryCaptureDeviceManufacturerModelName_
        {
            get { return _dicom.FindAll("00181018").Select(d => d as LongString).ToList(); }
        }

        public LongString SecondaryCaptureDeviceSoftwareVersions
        {
            get { return _dicom.FindFirst("00181019") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SecondaryCaptureDeviceSoftwareVersions_
        {
            get { return _dicom.FindAll("00181019").Select(d => d as LongString).ToList(); }
        }

        public LongString HardcopyDeviceSoftwareVersionRetired
        {
            get { return _dicom.FindFirst("0018101A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HardcopyDeviceSoftwareVersionRetired_
        {
            get { return _dicom.FindAll("0018101A").Select(d => d as LongString).ToList(); }
        }

        public LongString HardcopyDeviceManufacturerModelNameRetired
        {
            get { return _dicom.FindFirst("0018101B") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HardcopyDeviceManufacturerModelNameRetired_
        {
            get { return _dicom.FindAll("0018101B").Select(d => d as LongString).ToList(); }
        }

        public LongString SoftwareVersions
        {
            get { return _dicom.FindFirst("00181020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SoftwareVersions_
        {
            get { return _dicom.FindAll("00181020").Select(d => d as LongString).ToList(); }
        }

        public ShortString VideoImageFormatAcquired
        {
            get { return _dicom.FindFirst("00181022") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> VideoImageFormatAcquired_
        {
            get { return _dicom.FindAll("00181022").Select(d => d as ShortString).ToList(); }
        }

        public LongString DigitalImageFormatAcquired
        {
            get { return _dicom.FindFirst("00181023") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DigitalImageFormatAcquired_
        {
            get { return _dicom.FindAll("00181023").Select(d => d as LongString).ToList(); }
        }

        public LongString ProtocolName
        {
            get { return _dicom.FindFirst("00181030") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ProtocolName_
        {
            get { return _dicom.FindAll("00181030").Select(d => d as LongString).ToList(); }
        }

        public LongString ContrastBolusRoute
        {
            get { return _dicom.FindFirst("00181040") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContrastBolusRoute_
        {
            get { return _dicom.FindAll("00181040").Select(d => d as LongString).ToList(); }
        }

        public DecimalString ContrastBolusVolume
        {
            get { return _dicom.FindFirst("00181041") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContrastBolusVolume_
        {
            get { return _dicom.FindAll("00181041").Select(d => d as DecimalString).ToList(); }
        }

        public Time ContrastBolusStartTime
        {
            get { return _dicom.FindFirst("00181042") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ContrastBolusStartTime_
        {
            get { return _dicom.FindAll("00181042").Select(d => d as Time).ToList(); }
        }

        public Time ContrastBolusStopTime
        {
            get { return _dicom.FindFirst("00181043") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ContrastBolusStopTime_
        {
            get { return _dicom.FindAll("00181043").Select(d => d as Time).ToList(); }
        }

        public DecimalString ContrastBolusTotalDose
        {
            get { return _dicom.FindFirst("00181044") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContrastBolusTotalDose_
        {
            get { return _dicom.FindAll("00181044").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString SyringeCounts
        {
            get { return _dicom.FindFirst("00181045") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SyringeCounts_
        {
            get { return _dicom.FindAll("00181045").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ContrastFlowRate
        {
            get { return _dicom.FindFirst("00181046") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContrastFlowRate_
        {
            get { return _dicom.FindAll("00181046").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ContrastFlowDuration
        {
            get { return _dicom.FindFirst("00181047") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContrastFlowDuration_
        {
            get { return _dicom.FindAll("00181047").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString ContrastBolusIngredient
        {
            get { return _dicom.FindFirst("00181048") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContrastBolusIngredient_
        {
            get { return _dicom.FindAll("00181048").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString ContrastBolusIngredientConcentration
        {
            get { return _dicom.FindFirst("00181049") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContrastBolusIngredientConcentration_
        {
            get { return _dicom.FindAll("00181049").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SpatialResolution
        {
            get { return _dicom.FindFirst("00181050") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpatialResolution_
        {
            get { return _dicom.FindAll("00181050").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TriggerTime
        {
            get { return _dicom.FindFirst("00181060") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TriggerTime_
        {
            get { return _dicom.FindAll("00181060").Select(d => d as DecimalString).ToList(); }
        }

        public LongString TriggerSourceOrType
        {
            get { return _dicom.FindFirst("00181061") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TriggerSourceOrType_
        {
            get { return _dicom.FindAll("00181061").Select(d => d as LongString).ToList(); }
        }

        public IntegerString NominalInterval
        {
            get { return _dicom.FindFirst("00181062") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NominalInterval_
        {
            get { return _dicom.FindAll("00181062").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString FrameTime
        {
            get { return _dicom.FindFirst("00181063") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FrameTime_
        {
            get { return _dicom.FindAll("00181063").Select(d => d as DecimalString).ToList(); }
        }

        public LongString CardiacFramingType
        {
            get { return _dicom.FindFirst("00181064") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CardiacFramingType_
        {
            get { return _dicom.FindAll("00181064").Select(d => d as LongString).ToList(); }
        }

        public DecimalString FrameTimeVector
        {
            get { return _dicom.FindFirst("00181065") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FrameTimeVector_
        {
            get { return _dicom.FindAll("00181065").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FrameDelay
        {
            get { return _dicom.FindFirst("00181066") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FrameDelay_
        {
            get { return _dicom.FindAll("00181066").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImageTriggerDelay
        {
            get { return _dicom.FindFirst("00181067") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageTriggerDelay_
        {
            get { return _dicom.FindAll("00181067").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString MultiplexGroupTimeOffset
        {
            get { return _dicom.FindFirst("00181068") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MultiplexGroupTimeOffset_
        {
            get { return _dicom.FindAll("00181068").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TriggerTimeOffset
        {
            get { return _dicom.FindFirst("00181069") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TriggerTimeOffset_
        {
            get { return _dicom.FindAll("00181069").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString SynchronizationTrigger
        {
            get { return _dicom.FindFirst("0018106A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SynchronizationTrigger_
        {
            get { return _dicom.FindAll("0018106A").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort SynchronizationChannel
        {
            get { return _dicom.FindFirst("0018106C") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SynchronizationChannel_
        {
            get { return _dicom.FindAll("0018106C").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong TriggerSamplePosition
        {
            get { return _dicom.FindFirst("0018106E") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TriggerSamplePosition_
        {
            get { return _dicom.FindAll("0018106E").Select(d => d as UnsignedLong).ToList(); }
        }

        public LongString RadiopharmaceuticalRoute
        {
            get { return _dicom.FindFirst("00181070") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RadiopharmaceuticalRoute_
        {
            get { return _dicom.FindAll("00181070").Select(d => d as LongString).ToList(); }
        }

        public DecimalString RadiopharmaceuticalVolume
        {
            get { return _dicom.FindFirst("00181071") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadiopharmaceuticalVolume_
        {
            get { return _dicom.FindAll("00181071").Select(d => d as DecimalString).ToList(); }
        }

        public Time RadiopharmaceuticalStartTime
        {
            get { return _dicom.FindFirst("00181072") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> RadiopharmaceuticalStartTime_
        {
            get { return _dicom.FindAll("00181072").Select(d => d as Time).ToList(); }
        }

        public Time RadiopharmaceuticalStopTime
        {
            get { return _dicom.FindFirst("00181073") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> RadiopharmaceuticalStopTime_
        {
            get { return _dicom.FindAll("00181073").Select(d => d as Time).ToList(); }
        }

        public DecimalString RadionuclideTotalDose
        {
            get { return _dicom.FindFirst("00181074") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadionuclideTotalDose_
        {
            get { return _dicom.FindAll("00181074").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RadionuclideHalfLife
        {
            get { return _dicom.FindFirst("00181075") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadionuclideHalfLife_
        {
            get { return _dicom.FindAll("00181075").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RadionuclidePositronFraction
        {
            get { return _dicom.FindFirst("00181076") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadionuclidePositronFraction_
        {
            get { return _dicom.FindAll("00181076").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RadiopharmaceuticalSpecificActivity
        {
            get { return _dicom.FindFirst("00181077") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadiopharmaceuticalSpecificActivity_
        {
            get { return _dicom.FindAll("00181077").Select(d => d as DecimalString).ToList(); }
        }

        public DateTime RadiopharmaceuticalStartDateTime
        {
            get { return _dicom.FindFirst("00181078") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> RadiopharmaceuticalStartDateTime_
        {
            get { return _dicom.FindAll("00181078").Select(d => d as DateTime).ToList(); }
        }

        public DateTime RadiopharmaceuticalStopDateTime
        {
            get { return _dicom.FindFirst("00181079") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> RadiopharmaceuticalStopDateTime_
        {
            get { return _dicom.FindAll("00181079").Select(d => d as DateTime).ToList(); }
        }

        public CodeString BeatRejectionFlag
        {
            get { return _dicom.FindFirst("00181080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BeatRejectionFlag_
        {
            get { return _dicom.FindAll("00181080").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString LowRRValue
        {
            get { return _dicom.FindFirst("00181081") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> LowRRValue_
        {
            get { return _dicom.FindAll("00181081").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString HighRRValue
        {
            get { return _dicom.FindFirst("00181082") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> HighRRValue_
        {
            get { return _dicom.FindAll("00181082").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString IntervalsAcquired
        {
            get { return _dicom.FindFirst("00181083") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> IntervalsAcquired_
        {
            get { return _dicom.FindAll("00181083").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString IntervalsRejected
        {
            get { return _dicom.FindFirst("00181084") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> IntervalsRejected_
        {
            get { return _dicom.FindAll("00181084").Select(d => d as IntegerString).ToList(); }
        }

        public LongString PVCRejection
        {
            get { return _dicom.FindFirst("00181085") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PVCRejection_
        {
            get { return _dicom.FindAll("00181085").Select(d => d as LongString).ToList(); }
        }

        public IntegerString SkipBeats
        {
            get { return _dicom.FindFirst("00181086") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SkipBeats_
        {
            get { return _dicom.FindAll("00181086").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString HeartRate
        {
            get { return _dicom.FindFirst("00181088") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> HeartRate_
        {
            get { return _dicom.FindAll("00181088").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CardiacNumberOfImages
        {
            get { return _dicom.FindFirst("00181090") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CardiacNumberOfImages_
        {
            get { return _dicom.FindAll("00181090").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString TriggerWindow
        {
            get { return _dicom.FindFirst("00181094") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TriggerWindow_
        {
            get { return _dicom.FindAll("00181094").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ReconstructionDiameter
        {
            get { return _dicom.FindFirst("00181100") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ReconstructionDiameter_
        {
            get { return _dicom.FindAll("00181100").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DistanceSourceToDetector
        {
            get { return _dicom.FindFirst("00181110") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DistanceSourceToDetector_
        {
            get { return _dicom.FindAll("00181110").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DistanceSourceToPatient
        {
            get { return _dicom.FindFirst("00181111") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DistanceSourceToPatient_
        {
            get { return _dicom.FindAll("00181111").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString EstimatedRadiographicMagnificationFactor
        {
            get { return _dicom.FindFirst("00181114") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EstimatedRadiographicMagnificationFactor_
        {
            get { return _dicom.FindAll("00181114").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString GantryDetectorTilt
        {
            get { return _dicom.FindFirst("00181120") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GantryDetectorTilt_
        {
            get { return _dicom.FindAll("00181120").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString GantryDetectorSlew
        {
            get { return _dicom.FindFirst("00181121") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GantryDetectorSlew_
        {
            get { return _dicom.FindAll("00181121").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableHeight
        {
            get { return _dicom.FindFirst("00181130") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableHeight_
        {
            get { return _dicom.FindAll("00181130").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTraverse
        {
            get { return _dicom.FindFirst("00181131") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTraverse_
        {
            get { return _dicom.FindAll("00181131").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString TableMotion
        {
            get { return _dicom.FindFirst("00181134") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TableMotion_
        {
            get { return _dicom.FindAll("00181134").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString TableVerticalIncrement
        {
            get { return _dicom.FindFirst("00181135") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableVerticalIncrement_
        {
            get { return _dicom.FindAll("00181135").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableLateralIncrement
        {
            get { return _dicom.FindFirst("00181136") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableLateralIncrement_
        {
            get { return _dicom.FindAll("00181136").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableLongitudinalIncrement
        {
            get { return _dicom.FindFirst("00181137") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableLongitudinalIncrement_
        {
            get { return _dicom.FindAll("00181137").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableAngle
        {
            get { return _dicom.FindFirst("00181138") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableAngle_
        {
            get { return _dicom.FindAll("00181138").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString TableType
        {
            get { return _dicom.FindFirst("0018113A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TableType_
        {
            get { return _dicom.FindAll("0018113A").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RotationDirection
        {
            get { return _dicom.FindFirst("00181140") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RotationDirection_
        {
            get { return _dicom.FindAll("00181140").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString AngularPositionRetired
        {
            get { return _dicom.FindFirst("00181141") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> AngularPositionRetired_
        {
            get { return _dicom.FindAll("00181141").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RadialPosition
        {
            get { return _dicom.FindFirst("00181142") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadialPosition_
        {
            get { return _dicom.FindAll("00181142").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ScanArc
        {
            get { return _dicom.FindFirst("00181143") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ScanArc_
        {
            get { return _dicom.FindAll("00181143").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString AngularStep
        {
            get { return _dicom.FindFirst("00181144") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> AngularStep_
        {
            get { return _dicom.FindAll("00181144").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CenterOfRotationOffset
        {
            get { return _dicom.FindFirst("00181145") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CenterOfRotationOffset_
        {
            get { return _dicom.FindAll("00181145").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RotationOffsetRetired
        {
            get { return _dicom.FindFirst("00181146") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RotationOffsetRetired_
        {
            get { return _dicom.FindAll("00181146").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString FieldOfViewShape
        {
            get { return _dicom.FindFirst("00181147") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FieldOfViewShape_
        {
            get { return _dicom.FindAll("00181147").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString FieldOfViewDimensions
        {
            get { return _dicom.FindFirst("00181149") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> FieldOfViewDimensions_
        {
            get { return _dicom.FindAll("00181149").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ExposureTime
        {
            get { return _dicom.FindFirst("00181150") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ExposureTime_
        {
            get { return _dicom.FindAll("00181150").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString XRayTubeCurrent
        {
            get { return _dicom.FindFirst("00181151") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> XRayTubeCurrent_
        {
            get { return _dicom.FindAll("00181151").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString Exposure
        {
            get { return _dicom.FindFirst("00181152") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> Exposure_
        {
            get { return _dicom.FindAll("00181152").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ExposureInuAs
        {
            get { return _dicom.FindFirst("00181153") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ExposureInuAs_
        {
            get { return _dicom.FindAll("00181153").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString AveragePulseWidth
        {
            get { return _dicom.FindFirst("00181154") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> AveragePulseWidth_
        {
            get { return _dicom.FindAll("00181154").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString RadiationSetting
        {
            get { return _dicom.FindFirst("00181155") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RadiationSetting_
        {
            get { return _dicom.FindAll("00181155").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RectificationType
        {
            get { return _dicom.FindFirst("00181156") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RectificationType_
        {
            get { return _dicom.FindAll("00181156").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RadiationMode
        {
            get { return _dicom.FindFirst("0018115A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RadiationMode_
        {
            get { return _dicom.FindAll("0018115A").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString ImageAndFluoroscopyAreaDoseProduct
        {
            get { return _dicom.FindFirst("0018115E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageAndFluoroscopyAreaDoseProduct_
        {
            get { return _dicom.FindAll("0018115E").Select(d => d as DecimalString).ToList(); }
        }

        public ShortString FilterType
        {
            get { return _dicom.FindFirst("00181160") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FilterType_
        {
            get { return _dicom.FindAll("00181160").Select(d => d as ShortString).ToList(); }
        }

        public LongString TypeOfFilters
        {
            get { return _dicom.FindFirst("00181161") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TypeOfFilters_
        {
            get { return _dicom.FindAll("00181161").Select(d => d as LongString).ToList(); }
        }

        public DecimalString IntensifierSize
        {
            get { return _dicom.FindFirst("00181162") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> IntensifierSize_
        {
            get { return _dicom.FindAll("00181162").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImagerPixelSpacing
        {
            get { return _dicom.FindFirst("00181164") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImagerPixelSpacing_
        {
            get { return _dicom.FindAll("00181164").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString Grid
        {
            get { return _dicom.FindFirst("00181166") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Grid_
        {
            get { return _dicom.FindAll("00181166").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString GeneratorPower
        {
            get { return _dicom.FindFirst("00181170") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> GeneratorPower_
        {
            get { return _dicom.FindAll("00181170").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString CollimatorGridName
        {
            get { return _dicom.FindFirst("00181180") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CollimatorGridName_
        {
            get { return _dicom.FindAll("00181180").Select(d => d as ShortString).ToList(); }
        }

        public CodeString CollimatorType
        {
            get { return _dicom.FindFirst("00181181") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CollimatorType_
        {
            get { return _dicom.FindAll("00181181").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString FocalDistance
        {
            get { return _dicom.FindFirst("00181182") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> FocalDistance_
        {
            get { return _dicom.FindAll("00181182").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString XFocusCenter
        {
            get { return _dicom.FindFirst("00181183") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> XFocusCenter_
        {
            get { return _dicom.FindAll("00181183").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString YFocusCenter
        {
            get { return _dicom.FindFirst("00181184") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> YFocusCenter_
        {
            get { return _dicom.FindAll("00181184").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FocalSpots
        {
            get { return _dicom.FindFirst("00181190") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FocalSpots_
        {
            get { return _dicom.FindAll("00181190").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString AnodeTargetMaterial
        {
            get { return _dicom.FindFirst("00181191") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AnodeTargetMaterial_
        {
            get { return _dicom.FindAll("00181191").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString BodyPartThickness
        {
            get { return _dicom.FindFirst("001811A0") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BodyPartThickness_
        {
            get { return _dicom.FindAll("001811A0").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CompressionForce
        {
            get { return _dicom.FindFirst("001811A2") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CompressionForce_
        {
            get { return _dicom.FindAll("001811A2").Select(d => d as DecimalString).ToList(); }
        }

        public Date DateOfLastCalibration
        {
            get { return _dicom.FindFirst("00181200") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> DateOfLastCalibration_
        {
            get { return _dicom.FindAll("00181200").Select(d => d as Date).ToList(); }
        }

        public Time TimeOfLastCalibration
        {
            get { return _dicom.FindFirst("00181201") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> TimeOfLastCalibration_
        {
            get { return _dicom.FindAll("00181201").Select(d => d as Time).ToList(); }
        }

        public ShortString ConvolutionKernel
        {
            get { return _dicom.FindFirst("00181210") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ConvolutionKernel_
        {
            get { return _dicom.FindAll("00181210").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString UpperLowerPixelValuesRetired
        {
            get { return _dicom.FindFirst("00181240") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> UpperLowerPixelValuesRetired_
        {
            get { return _dicom.FindAll("00181240").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ActualFrameDuration
        {
            get { return _dicom.FindFirst("00181242") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ActualFrameDuration_
        {
            get { return _dicom.FindAll("00181242").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CountRate
        {
            get { return _dicom.FindFirst("00181243") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CountRate_
        {
            get { return _dicom.FindAll("00181243").Select(d => d as IntegerString).ToList(); }
        }

        public UnsignedShort PreferredPlaybackSequencing
        {
            get { return _dicom.FindFirst("00181244") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PreferredPlaybackSequencing_
        {
            get { return _dicom.FindAll("00181244").Select(d => d as UnsignedShort).ToList(); }
        }

        public ShortString ReceiveCoilName
        {
            get { return _dicom.FindFirst("00181250") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ReceiveCoilName_
        {
            get { return _dicom.FindAll("00181250").Select(d => d as ShortString).ToList(); }
        }

        public ShortString TransmitCoilName
        {
            get { return _dicom.FindFirst("00181251") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> TransmitCoilName_
        {
            get { return _dicom.FindAll("00181251").Select(d => d as ShortString).ToList(); }
        }

        public ShortString PlateType
        {
            get { return _dicom.FindFirst("00181260") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PlateType_
        {
            get { return _dicom.FindAll("00181260").Select(d => d as ShortString).ToList(); }
        }

        public LongString PhosphorType
        {
            get { return _dicom.FindFirst("00181261") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PhosphorType_
        {
            get { return _dicom.FindAll("00181261").Select(d => d as LongString).ToList(); }
        }

        public DecimalString ScanVelocity
        {
            get { return _dicom.FindFirst("00181300") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ScanVelocity_
        {
            get { return _dicom.FindAll("00181300").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString WholeBodyTechnique
        {
            get { return _dicom.FindFirst("00181301") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> WholeBodyTechnique_
        {
            get { return _dicom.FindAll("00181301").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString ScanLength
        {
            get { return _dicom.FindFirst("00181302") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ScanLength_
        {
            get { return _dicom.FindAll("00181302").Select(d => d as IntegerString).ToList(); }
        }

        public UnsignedShort AcquisitionMatrix
        {
            get { return _dicom.FindFirst("00181310") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AcquisitionMatrix_
        {
            get { return _dicom.FindAll("00181310").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString InPlanePhaseEncodingDirection
        {
            get { return _dicom.FindFirst("00181312") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InPlanePhaseEncodingDirection_
        {
            get { return _dicom.FindAll("00181312").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString FlipAngle
        {
            get { return _dicom.FindFirst("00181314") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FlipAngle_
        {
            get { return _dicom.FindAll("00181314").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString VariableFlipAngleFlag
        {
            get { return _dicom.FindFirst("00181315") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VariableFlipAngleFlag_
        {
            get { return _dicom.FindAll("00181315").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString SAR
        {
            get { return _dicom.FindFirst("00181316") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SAR_
        {
            get { return _dicom.FindAll("00181316").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString dBdt
        {
            get { return _dicom.FindFirst("00181318") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> dBdt_
        {
            get { return _dicom.FindAll("00181318").Select(d => d as DecimalString).ToList(); }
        }

        public LongString AcquisitionDeviceProcessingDescription
        {
            get { return _dicom.FindFirst("00181400") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AcquisitionDeviceProcessingDescription_
        {
            get { return _dicom.FindAll("00181400").Select(d => d as LongString).ToList(); }
        }

        public LongString AcquisitionDeviceProcessingCode
        {
            get { return _dicom.FindFirst("00181401") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AcquisitionDeviceProcessingCode_
        {
            get { return _dicom.FindAll("00181401").Select(d => d as LongString).ToList(); }
        }

        public CodeString CassetteOrientation
        {
            get { return _dicom.FindFirst("00181402") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CassetteOrientation_
        {
            get { return _dicom.FindAll("00181402").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CassetteSize
        {
            get { return _dicom.FindFirst("00181403") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CassetteSize_
        {
            get { return _dicom.FindAll("00181403").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort ExposuresOnPlate
        {
            get { return _dicom.FindFirst("00181404") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ExposuresOnPlate_
        {
            get { return _dicom.FindAll("00181404").Select(d => d as UnsignedShort).ToList(); }
        }

        public IntegerString RelativeXRayExposure
        {
            get { return _dicom.FindFirst("00181405") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RelativeXRayExposure_
        {
            get { return _dicom.FindAll("00181405").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ExposureIndex
        {
            get { return _dicom.FindFirst("00181411") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ExposureIndex_
        {
            get { return _dicom.FindAll("00181411").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TargetExposureIndex
        {
            get { return _dicom.FindFirst("00181412") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TargetExposureIndex_
        {
            get { return _dicom.FindAll("00181412").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeviationIndex
        {
            get { return _dicom.FindFirst("00181413") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeviationIndex_
        {
            get { return _dicom.FindAll("00181413").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ColumnAngulation
        {
            get { return _dicom.FindFirst("00181450") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ColumnAngulation_
        {
            get { return _dicom.FindAll("00181450").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TomoLayerHeight
        {
            get { return _dicom.FindFirst("00181460") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TomoLayerHeight_
        {
            get { return _dicom.FindAll("00181460").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TomoAngle
        {
            get { return _dicom.FindFirst("00181470") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TomoAngle_
        {
            get { return _dicom.FindAll("00181470").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TomoTime
        {
            get { return _dicom.FindFirst("00181480") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TomoTime_
        {
            get { return _dicom.FindAll("00181480").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString TomoType
        {
            get { return _dicom.FindFirst("00181490") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TomoType_
        {
            get { return _dicom.FindAll("00181490").Select(d => d as CodeString).ToList(); }
        }

        public CodeString TomoClass
        {
            get { return _dicom.FindFirst("00181491") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TomoClass_
        {
            get { return _dicom.FindAll("00181491").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString NumberOfTomosynthesisSourceImages
        {
            get { return _dicom.FindFirst("00181495") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfTomosynthesisSourceImages_
        {
            get { return _dicom.FindAll("00181495").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString PositionerMotion
        {
            get { return _dicom.FindFirst("00181500") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PositionerMotion_
        {
            get { return _dicom.FindAll("00181500").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PositionerType
        {
            get { return _dicom.FindFirst("00181508") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PositionerType_
        {
            get { return _dicom.FindAll("00181508").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString PositionerPrimaryAngle
        {
            get { return _dicom.FindFirst("00181510") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PositionerPrimaryAngle_
        {
            get { return _dicom.FindAll("00181510").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString PositionerSecondaryAngle
        {
            get { return _dicom.FindFirst("00181511") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PositionerSecondaryAngle_
        {
            get { return _dicom.FindAll("00181511").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString PositionerPrimaryAngleIncrement
        {
            get { return _dicom.FindFirst("00181520") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PositionerPrimaryAngleIncrement_
        {
            get { return _dicom.FindAll("00181520").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString PositionerSecondaryAngleIncrement
        {
            get { return _dicom.FindFirst("00181521") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PositionerSecondaryAngleIncrement_
        {
            get { return _dicom.FindAll("00181521").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorPrimaryAngle
        {
            get { return _dicom.FindFirst("00181530") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorPrimaryAngle_
        {
            get { return _dicom.FindAll("00181530").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorSecondaryAngle
        {
            get { return _dicom.FindFirst("00181531") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorSecondaryAngle_
        {
            get { return _dicom.FindAll("00181531").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString ShutterShape
        {
            get { return _dicom.FindFirst("00181600") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShutterShape_
        {
            get { return _dicom.FindAll("00181600").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString ShutterLeftVerticalEdge
        {
            get { return _dicom.FindFirst("00181602") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ShutterLeftVerticalEdge_
        {
            get { return _dicom.FindAll("00181602").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ShutterRightVerticalEdge
        {
            get { return _dicom.FindFirst("00181604") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ShutterRightVerticalEdge_
        {
            get { return _dicom.FindAll("00181604").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ShutterUpperHorizontalEdge
        {
            get { return _dicom.FindFirst("00181606") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ShutterUpperHorizontalEdge_
        {
            get { return _dicom.FindAll("00181606").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ShutterLowerHorizontalEdge
        {
            get { return _dicom.FindFirst("00181608") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ShutterLowerHorizontalEdge_
        {
            get { return _dicom.FindAll("00181608").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CenterOfCircularShutter
        {
            get { return _dicom.FindFirst("00181610") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CenterOfCircularShutter_
        {
            get { return _dicom.FindAll("00181610").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString RadiusOfCircularShutter
        {
            get { return _dicom.FindFirst("00181612") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RadiusOfCircularShutter_
        {
            get { return _dicom.FindAll("00181612").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString VerticesOfThePolygonalShutter
        {
            get { return _dicom.FindFirst("00181620") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> VerticesOfThePolygonalShutter_
        {
            get { return _dicom.FindAll("00181620").Select(d => d as IntegerString).ToList(); }
        }

        public UnsignedShort ShutterPresentationValue
        {
            get { return _dicom.FindFirst("00181622") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ShutterPresentationValue_
        {
            get { return _dicom.FindAll("00181622").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ShutterOverlayGroup
        {
            get { return _dicom.FindFirst("00181623") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ShutterOverlayGroup_
        {
            get { return _dicom.FindAll("00181623").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ShutterPresentationColorCIELabValue
        {
            get { return _dicom.FindFirst("00181624") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ShutterPresentationColorCIELabValue_
        {
            get { return _dicom.FindAll("00181624").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString CollimatorShape
        {
            get { return _dicom.FindFirst("00181700") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CollimatorShape_
        {
            get { return _dicom.FindAll("00181700").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString CollimatorLeftVerticalEdge
        {
            get { return _dicom.FindFirst("00181702") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CollimatorLeftVerticalEdge_
        {
            get { return _dicom.FindAll("00181702").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CollimatorRightVerticalEdge
        {
            get { return _dicom.FindFirst("00181704") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CollimatorRightVerticalEdge_
        {
            get { return _dicom.FindAll("00181704").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CollimatorUpperHorizontalEdge
        {
            get { return _dicom.FindFirst("00181706") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CollimatorUpperHorizontalEdge_
        {
            get { return _dicom.FindAll("00181706").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CollimatorLowerHorizontalEdge
        {
            get { return _dicom.FindFirst("00181708") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CollimatorLowerHorizontalEdge_
        {
            get { return _dicom.FindAll("00181708").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CenterOfCircularCollimator
        {
            get { return _dicom.FindFirst("00181710") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CenterOfCircularCollimator_
        {
            get { return _dicom.FindAll("00181710").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString RadiusOfCircularCollimator
        {
            get { return _dicom.FindFirst("00181712") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RadiusOfCircularCollimator_
        {
            get { return _dicom.FindAll("00181712").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString VerticesOfThePolygonalCollimator
        {
            get { return _dicom.FindFirst("00181720") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> VerticesOfThePolygonalCollimator_
        {
            get { return _dicom.FindAll("00181720").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString AcquisitionTimeSynchronized
        {
            get { return _dicom.FindFirst("00181800") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AcquisitionTimeSynchronized_
        {
            get { return _dicom.FindAll("00181800").Select(d => d as CodeString).ToList(); }
        }

        public ShortString TimeSource
        {
            get { return _dicom.FindFirst("00181801") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> TimeSource_
        {
            get { return _dicom.FindAll("00181801").Select(d => d as ShortString).ToList(); }
        }

        public CodeString TimeDistributionProtocol
        {
            get { return _dicom.FindFirst("00181802") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TimeDistributionProtocol_
        {
            get { return _dicom.FindAll("00181802").Select(d => d as CodeString).ToList(); }
        }

        public LongString NTPSourceAddress
        {
            get { return _dicom.FindFirst("00181803") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> NTPSourceAddress_
        {
            get { return _dicom.FindAll("00181803").Select(d => d as LongString).ToList(); }
        }

        public IntegerString PageNumberVector
        {
            get { return _dicom.FindFirst("00182001") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PageNumberVector_
        {
            get { return _dicom.FindAll("00182001").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString FrameLabelVector
        {
            get { return _dicom.FindFirst("00182002") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FrameLabelVector_
        {
            get { return _dicom.FindAll("00182002").Select(d => d as ShortString).ToList(); }
        }

        public DecimalString FramePrimaryAngleVector
        {
            get { return _dicom.FindFirst("00182003") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FramePrimaryAngleVector_
        {
            get { return _dicom.FindAll("00182003").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FrameSecondaryAngleVector
        {
            get { return _dicom.FindFirst("00182004") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FrameSecondaryAngleVector_
        {
            get { return _dicom.FindAll("00182004").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SliceLocationVector
        {
            get { return _dicom.FindFirst("00182005") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SliceLocationVector_
        {
            get { return _dicom.FindAll("00182005").Select(d => d as DecimalString).ToList(); }
        }

        public ShortString DisplayWindowLabelVector
        {
            get { return _dicom.FindFirst("00182006") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> DisplayWindowLabelVector_
        {
            get { return _dicom.FindAll("00182006").Select(d => d as ShortString).ToList(); }
        }

        public DecimalString NominalScannedPixelSpacing
        {
            get { return _dicom.FindFirst("00182010") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NominalScannedPixelSpacing_
        {
            get { return _dicom.FindAll("00182010").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString DigitizingDeviceTransportDirection
        {
            get { return _dicom.FindFirst("00182020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DigitizingDeviceTransportDirection_
        {
            get { return _dicom.FindAll("00182020").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString RotationOfScannedFilm
        {
            get { return _dicom.FindFirst("00182030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RotationOfScannedFilm_
        {
            get { return _dicom.FindAll("00182030").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString IVUSAcquisition
        {
            get { return _dicom.FindFirst("00183100") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IVUSAcquisition_
        {
            get { return _dicom.FindAll("00183100").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString IVUSPullbackRate
        {
            get { return _dicom.FindFirst("00183101") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> IVUSPullbackRate_
        {
            get { return _dicom.FindAll("00183101").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString IVUSGatedRate
        {
            get { return _dicom.FindFirst("00183102") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> IVUSGatedRate_
        {
            get { return _dicom.FindAll("00183102").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString IVUSPullbackStartFrameNumber
        {
            get { return _dicom.FindFirst("00183103") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> IVUSPullbackStartFrameNumber_
        {
            get { return _dicom.FindAll("00183103").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString IVUSPullbackStopFrameNumber
        {
            get { return _dicom.FindFirst("00183104") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> IVUSPullbackStopFrameNumber_
        {
            get { return _dicom.FindAll("00183104").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString LesionNumber
        {
            get { return _dicom.FindFirst("00183105") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> LesionNumber_
        {
            get { return _dicom.FindAll("00183105").Select(d => d as IntegerString).ToList(); }
        }

        public LongText AcquisitionCommentsRetired
        {
            get { return _dicom.FindFirst("00184000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> AcquisitionCommentsRetired_
        {
            get { return _dicom.FindAll("00184000").Select(d => d as LongText).ToList(); }
        }

        public ShortString OutputPower
        {
            get { return _dicom.FindFirst("00185000") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> OutputPower_
        {
            get { return _dicom.FindAll("00185000").Select(d => d as ShortString).ToList(); }
        }

        public LongString TransducerData
        {
            get { return _dicom.FindFirst("00185010") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TransducerData_
        {
            get { return _dicom.FindAll("00185010").Select(d => d as LongString).ToList(); }
        }

        public DecimalString FocusDepth
        {
            get { return _dicom.FindFirst("00185012") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FocusDepth_
        {
            get { return _dicom.FindAll("00185012").Select(d => d as DecimalString).ToList(); }
        }

        public LongString ProcessingFunction
        {
            get { return _dicom.FindFirst("00185020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ProcessingFunction_
        {
            get { return _dicom.FindAll("00185020").Select(d => d as LongString).ToList(); }
        }

        public LongString PostprocessingFunctionRetired
        {
            get { return _dicom.FindFirst("00185021") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PostprocessingFunctionRetired_
        {
            get { return _dicom.FindAll("00185021").Select(d => d as LongString).ToList(); }
        }

        public DecimalString MechanicalIndex
        {
            get { return _dicom.FindFirst("00185022") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MechanicalIndex_
        {
            get { return _dicom.FindAll("00185022").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString BoneThermalIndex
        {
            get { return _dicom.FindFirst("00185024") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BoneThermalIndex_
        {
            get { return _dicom.FindAll("00185024").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CranialThermalIndex
        {
            get { return _dicom.FindFirst("00185026") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CranialThermalIndex_
        {
            get { return _dicom.FindAll("00185026").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SoftTissueThermalIndex
        {
            get { return _dicom.FindFirst("00185027") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SoftTissueThermalIndex_
        {
            get { return _dicom.FindAll("00185027").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SoftTissueFocusThermalIndex
        {
            get { return _dicom.FindFirst("00185028") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SoftTissueFocusThermalIndex_
        {
            get { return _dicom.FindAll("00185028").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SoftTissueSurfaceThermalIndex
        {
            get { return _dicom.FindFirst("00185029") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SoftTissueSurfaceThermalIndex_
        {
            get { return _dicom.FindAll("00185029").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DynamicRangeRetired
        {
            get { return _dicom.FindFirst("00185030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DynamicRangeRetired_
        {
            get { return _dicom.FindAll("00185030").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TotalGainRetired
        {
            get { return _dicom.FindFirst("00185040") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TotalGainRetired_
        {
            get { return _dicom.FindAll("00185040").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString DepthOfScanField
        {
            get { return _dicom.FindFirst("00185050") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> DepthOfScanField_
        {
            get { return _dicom.FindAll("00185050").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString PatientPosition
        {
            get { return _dicom.FindFirst("00185100") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientPosition_
        {
            get { return _dicom.FindAll("00185100").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ViewPosition
        {
            get { return _dicom.FindFirst("00185101") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ViewPosition_
        {
            get { return _dicom.FindAll("00185101").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ProjectionEponymousNameCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00185104") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProjectionEponymousNameCodeSequence_
        {
            get { return _dicom.FindAll("00185104").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString ImageTransformationMatrixRetired
        {
            get { return _dicom.FindFirst("00185210") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageTransformationMatrixRetired_
        {
            get { return _dicom.FindAll("00185210").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImageTranslationVectorRetired
        {
            get { return _dicom.FindFirst("00185212") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageTranslationVectorRetired_
        {
            get { return _dicom.FindAll("00185212").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString Sensitivity
        {
            get { return _dicom.FindFirst("00186000") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> Sensitivity_
        {
            get { return _dicom.FindAll("00186000").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector SequenceOfUltrasoundRegions
        {
            get { return new SequenceSelector(_dicom.FindFirst("00186011") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SequenceOfUltrasoundRegions_
        {
            get { return _dicom.FindAll("00186011").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort RegionSpatialFormat
        {
            get { return _dicom.FindFirst("00186012") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RegionSpatialFormat_
        {
            get { return _dicom.FindAll("00186012").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RegionDataType
        {
            get { return _dicom.FindFirst("00186014") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RegionDataType_
        {
            get { return _dicom.FindAll("00186014").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong RegionFlags
        {
            get { return _dicom.FindFirst("00186016") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> RegionFlags_
        {
            get { return _dicom.FindAll("00186016").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong RegionLocationMinX0
        {
            get { return _dicom.FindFirst("00186018") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> RegionLocationMinX0_
        {
            get { return _dicom.FindAll("00186018").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong RegionLocationMinY0
        {
            get { return _dicom.FindFirst("0018601A") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> RegionLocationMinY0_
        {
            get { return _dicom.FindAll("0018601A").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong RegionLocationMaxX1
        {
            get { return _dicom.FindFirst("0018601C") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> RegionLocationMaxX1_
        {
            get { return _dicom.FindAll("0018601C").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong RegionLocationMaxY1
        {
            get { return _dicom.FindFirst("0018601E") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> RegionLocationMaxY1_
        {
            get { return _dicom.FindAll("0018601E").Select(d => d as UnsignedLong).ToList(); }
        }

        public SignedLong ReferencePixelX0
        {
            get { return _dicom.FindFirst("00186020") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> ReferencePixelX0_
        {
            get { return _dicom.FindAll("00186020").Select(d => d as SignedLong).ToList(); }
        }

        public SignedLong ReferencePixelY0
        {
            get { return _dicom.FindFirst("00186022") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> ReferencePixelY0_
        {
            get { return _dicom.FindAll("00186022").Select(d => d as SignedLong).ToList(); }
        }

        public UnsignedShort PhysicalUnitsXDirection
        {
            get { return _dicom.FindFirst("00186024") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PhysicalUnitsXDirection_
        {
            get { return _dicom.FindAll("00186024").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PhysicalUnitsYDirection
        {
            get { return _dicom.FindFirst("00186026") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PhysicalUnitsYDirection_
        {
            get { return _dicom.FindAll("00186026").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble ReferencePixelPhysicalValueX
        {
            get { return _dicom.FindFirst("00186028") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReferencePixelPhysicalValueX_
        {
            get { return _dicom.FindAll("00186028").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ReferencePixelPhysicalValueY
        {
            get { return _dicom.FindFirst("0018602A") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReferencePixelPhysicalValueY_
        {
            get { return _dicom.FindAll("0018602A").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble PhysicalDeltaX
        {
            get { return _dicom.FindFirst("0018602C") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> PhysicalDeltaX_
        {
            get { return _dicom.FindAll("0018602C").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble PhysicalDeltaY
        {
            get { return _dicom.FindFirst("0018602E") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> PhysicalDeltaY_
        {
            get { return _dicom.FindAll("0018602E").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedLong TransducerFrequency
        {
            get { return _dicom.FindFirst("00186030") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TransducerFrequency_
        {
            get { return _dicom.FindAll("00186030").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString TransducerType
        {
            get { return _dicom.FindFirst("00186031") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TransducerType_
        {
            get { return _dicom.FindAll("00186031").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong PulseRepetitionFrequency
        {
            get { return _dicom.FindFirst("00186032") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> PulseRepetitionFrequency_
        {
            get { return _dicom.FindAll("00186032").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointDouble DopplerCorrectionAngle
        {
            get { return _dicom.FindFirst("00186034") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DopplerCorrectionAngle_
        {
            get { return _dicom.FindAll("00186034").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble SteeringAngle
        {
            get { return _dicom.FindFirst("00186036") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SteeringAngle_
        {
            get { return _dicom.FindAll("00186036").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedLong DopplerSampleVolumeXPositionRetired
        {
            get { return _dicom.FindFirst("00186038") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> DopplerSampleVolumeXPositionRetired_
        {
            get { return _dicom.FindAll("00186038").Select(d => d as UnsignedLong).ToList(); }
        }

        public SignedLong DopplerSampleVolumeXPosition
        {
            get { return _dicom.FindFirst("00186039") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> DopplerSampleVolumeXPosition_
        {
            get { return _dicom.FindAll("00186039").Select(d => d as SignedLong).ToList(); }
        }

        public UnsignedLong DopplerSampleVolumeYPositionRetired
        {
            get { return _dicom.FindFirst("0018603A") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> DopplerSampleVolumeYPositionRetired_
        {
            get { return _dicom.FindAll("0018603A").Select(d => d as UnsignedLong).ToList(); }
        }

        public SignedLong DopplerSampleVolumeYPosition
        {
            get { return _dicom.FindFirst("0018603B") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> DopplerSampleVolumeYPosition_
        {
            get { return _dicom.FindAll("0018603B").Select(d => d as SignedLong).ToList(); }
        }

        public UnsignedLong TMLinePositionX0Retired
        {
            get { return _dicom.FindFirst("0018603C") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TMLinePositionX0Retired_
        {
            get { return _dicom.FindAll("0018603C").Select(d => d as UnsignedLong).ToList(); }
        }

        public SignedLong TMLinePositionX0
        {
            get { return _dicom.FindFirst("0018603D") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> TMLinePositionX0_
        {
            get { return _dicom.FindAll("0018603D").Select(d => d as SignedLong).ToList(); }
        }

        public UnsignedLong TMLinePositionY0Retired
        {
            get { return _dicom.FindFirst("0018603E") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TMLinePositionY0Retired_
        {
            get { return _dicom.FindAll("0018603E").Select(d => d as UnsignedLong).ToList(); }
        }

        public SignedLong TMLinePositionY0
        {
            get { return _dicom.FindFirst("0018603F") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> TMLinePositionY0_
        {
            get { return _dicom.FindAll("0018603F").Select(d => d as SignedLong).ToList(); }
        }

        public UnsignedLong TMLinePositionX1Retired
        {
            get { return _dicom.FindFirst("00186040") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TMLinePositionX1Retired_
        {
            get { return _dicom.FindAll("00186040").Select(d => d as UnsignedLong).ToList(); }
        }

        public SignedLong TMLinePositionX1
        {
            get { return _dicom.FindFirst("00186041") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> TMLinePositionX1_
        {
            get { return _dicom.FindAll("00186041").Select(d => d as SignedLong).ToList(); }
        }

        public UnsignedLong TMLinePositionY1Retired
        {
            get { return _dicom.FindFirst("00186042") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TMLinePositionY1Retired_
        {
            get { return _dicom.FindAll("00186042").Select(d => d as UnsignedLong).ToList(); }
        }

        public SignedLong TMLinePositionY1
        {
            get { return _dicom.FindFirst("00186043") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> TMLinePositionY1_
        {
            get { return _dicom.FindAll("00186043").Select(d => d as SignedLong).ToList(); }
        }

        public UnsignedShort PixelComponentOrganization
        {
            get { return _dicom.FindFirst("00186044") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PixelComponentOrganization_
        {
            get { return _dicom.FindAll("00186044").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong PixelComponentMask
        {
            get { return _dicom.FindFirst("00186046") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> PixelComponentMask_
        {
            get { return _dicom.FindAll("00186046").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong PixelComponentRangeStart
        {
            get { return _dicom.FindFirst("00186048") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> PixelComponentRangeStart_
        {
            get { return _dicom.FindAll("00186048").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong PixelComponentRangeStop
        {
            get { return _dicom.FindFirst("0018604A") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> PixelComponentRangeStop_
        {
            get { return _dicom.FindAll("0018604A").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedShort PixelComponentPhysicalUnits
        {
            get { return _dicom.FindFirst("0018604C") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PixelComponentPhysicalUnits_
        {
            get { return _dicom.FindAll("0018604C").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PixelComponentDataType
        {
            get { return _dicom.FindFirst("0018604E") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PixelComponentDataType_
        {
            get { return _dicom.FindAll("0018604E").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong NumberOfTableBreakPoints
        {
            get { return _dicom.FindFirst("00186050") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfTableBreakPoints_
        {
            get { return _dicom.FindAll("00186050").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong TableOfXBreakPoints
        {
            get { return _dicom.FindFirst("00186052") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TableOfXBreakPoints_
        {
            get { return _dicom.FindAll("00186052").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointDouble TableOfYBreakPoints
        {
            get { return _dicom.FindFirst("00186054") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableOfYBreakPoints_
        {
            get { return _dicom.FindAll("00186054").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedLong NumberOfTableEntries
        {
            get { return _dicom.FindFirst("00186056") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfTableEntries_
        {
            get { return _dicom.FindAll("00186056").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong TableOfPixelValues
        {
            get { return _dicom.FindFirst("00186058") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TableOfPixelValues_
        {
            get { return _dicom.FindAll("00186058").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointSingle TableOfParameterValues
        {
            get { return _dicom.FindFirst("0018605A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableOfParameterValues_
        {
            get { return _dicom.FindAll("0018605A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle RWaveTimeVector
        {
            get { return _dicom.FindFirst("00186060") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RWaveTimeVector_
        {
            get { return _dicom.FindAll("00186060").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString DetectorConditionsNominalFlag
        {
            get { return _dicom.FindFirst("00187000") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DetectorConditionsNominalFlag_
        {
            get { return _dicom.FindAll("00187000").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString DetectorTemperature
        {
            get { return _dicom.FindFirst("00187001") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorTemperature_
        {
            get { return _dicom.FindAll("00187001").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString DetectorType
        {
            get { return _dicom.FindFirst("00187004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DetectorType_
        {
            get { return _dicom.FindAll("00187004").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DetectorConfiguration
        {
            get { return _dicom.FindFirst("00187005") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DetectorConfiguration_
        {
            get { return _dicom.FindAll("00187005").Select(d => d as CodeString).ToList(); }
        }

        public LongText DetectorDescription
        {
            get { return _dicom.FindFirst("00187006") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> DetectorDescription_
        {
            get { return _dicom.FindAll("00187006").Select(d => d as LongText).ToList(); }
        }

        public LongText DetectorMode
        {
            get { return _dicom.FindFirst("00187008") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> DetectorMode_
        {
            get { return _dicom.FindAll("00187008").Select(d => d as LongText).ToList(); }
        }

        public ShortString DetectorID
        {
            get { return _dicom.FindFirst("0018700A") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> DetectorID_
        {
            get { return _dicom.FindAll("0018700A").Select(d => d as ShortString).ToList(); }
        }

        public Date DateOfLastDetectorCalibration
        {
            get { return _dicom.FindFirst("0018700C") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> DateOfLastDetectorCalibration_
        {
            get { return _dicom.FindAll("0018700C").Select(d => d as Date).ToList(); }
        }

        public Time TimeOfLastDetectorCalibration
        {
            get { return _dicom.FindFirst("0018700E") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> TimeOfLastDetectorCalibration_
        {
            get { return _dicom.FindAll("0018700E").Select(d => d as Time).ToList(); }
        }

        public IntegerString ExposuresOnDetectorSinceLastCalibration
        {
            get { return _dicom.FindFirst("00187010") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ExposuresOnDetectorSinceLastCalibration_
        {
            get { return _dicom.FindAll("00187010").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ExposuresOnDetectorSinceManufactured
        {
            get { return _dicom.FindFirst("00187011") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ExposuresOnDetectorSinceManufactured_
        {
            get { return _dicom.FindAll("00187011").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString DetectorTimeSinceLastExposure
        {
            get { return _dicom.FindFirst("00187012") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorTimeSinceLastExposure_
        {
            get { return _dicom.FindAll("00187012").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorActiveTime
        {
            get { return _dicom.FindFirst("00187014") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorActiveTime_
        {
            get { return _dicom.FindAll("00187014").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorActivationOffsetFromExposure
        {
            get { return _dicom.FindFirst("00187016") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorActivationOffsetFromExposure_
        {
            get { return _dicom.FindAll("00187016").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorBinning
        {
            get { return _dicom.FindFirst("0018701A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorBinning_
        {
            get { return _dicom.FindAll("0018701A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorElementPhysicalSize
        {
            get { return _dicom.FindFirst("00187020") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorElementPhysicalSize_
        {
            get { return _dicom.FindAll("00187020").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorElementSpacing
        {
            get { return _dicom.FindFirst("00187022") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorElementSpacing_
        {
            get { return _dicom.FindAll("00187022").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString DetectorActiveShape
        {
            get { return _dicom.FindFirst("00187024") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DetectorActiveShape_
        {
            get { return _dicom.FindAll("00187024").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString DetectorActiveDimensions
        {
            get { return _dicom.FindFirst("00187026") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorActiveDimensions_
        {
            get { return _dicom.FindAll("00187026").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DetectorActiveOrigin
        {
            get { return _dicom.FindFirst("00187028") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorActiveOrigin_
        {
            get { return _dicom.FindAll("00187028").Select(d => d as DecimalString).ToList(); }
        }

        public LongString DetectorManufacturerName
        {
            get { return _dicom.FindFirst("0018702A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DetectorManufacturerName_
        {
            get { return _dicom.FindAll("0018702A").Select(d => d as LongString).ToList(); }
        }

        public LongString DetectorManufacturerModelName
        {
            get { return _dicom.FindFirst("0018702B") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DetectorManufacturerModelName_
        {
            get { return _dicom.FindAll("0018702B").Select(d => d as LongString).ToList(); }
        }

        public DecimalString FieldOfViewOrigin
        {
            get { return _dicom.FindFirst("00187030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FieldOfViewOrigin_
        {
            get { return _dicom.FindAll("00187030").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FieldOfViewRotation
        {
            get { return _dicom.FindFirst("00187032") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FieldOfViewRotation_
        {
            get { return _dicom.FindAll("00187032").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString FieldOfViewHorizontalFlip
        {
            get { return _dicom.FindFirst("00187034") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FieldOfViewHorizontalFlip_
        {
            get { return _dicom.FindAll("00187034").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle PixelDataAreaOriginRelativeToFOV
        {
            get { return _dicom.FindFirst("00187036") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PixelDataAreaOriginRelativeToFOV_
        {
            get { return _dicom.FindAll("00187036").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PixelDataAreaRotationAngleRelativeToFOV
        {
            get { return _dicom.FindFirst("00187038") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PixelDataAreaRotationAngleRelativeToFOV_
        {
            get { return _dicom.FindAll("00187038").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongText GridAbsorbingMaterial
        {
            get { return _dicom.FindFirst("00187040") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> GridAbsorbingMaterial_
        {
            get { return _dicom.FindAll("00187040").Select(d => d as LongText).ToList(); }
        }

        public LongText GridSpacingMaterial
        {
            get { return _dicom.FindFirst("00187041") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> GridSpacingMaterial_
        {
            get { return _dicom.FindAll("00187041").Select(d => d as LongText).ToList(); }
        }

        public DecimalString GridThickness
        {
            get { return _dicom.FindFirst("00187042") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GridThickness_
        {
            get { return _dicom.FindAll("00187042").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString GridPitch
        {
            get { return _dicom.FindFirst("00187044") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GridPitch_
        {
            get { return _dicom.FindAll("00187044").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString GridAspectRatio
        {
            get { return _dicom.FindFirst("00187046") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> GridAspectRatio_
        {
            get { return _dicom.FindAll("00187046").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString GridPeriod
        {
            get { return _dicom.FindFirst("00187048") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GridPeriod_
        {
            get { return _dicom.FindAll("00187048").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString GridFocalDistance
        {
            get { return _dicom.FindFirst("0018704C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GridFocalDistance_
        {
            get { return _dicom.FindAll("0018704C").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString FilterMaterial
        {
            get { return _dicom.FindFirst("00187050") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FilterMaterial_
        {
            get { return _dicom.FindAll("00187050").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString FilterThicknessMinimum
        {
            get { return _dicom.FindFirst("00187052") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FilterThicknessMinimum_
        {
            get { return _dicom.FindAll("00187052").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FilterThicknessMaximum
        {
            get { return _dicom.FindFirst("00187054") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FilterThicknessMaximum_
        {
            get { return _dicom.FindAll("00187054").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle FilterBeamPathLengthMinimum
        {
            get { return _dicom.FindFirst("00187056") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FilterBeamPathLengthMinimum_
        {
            get { return _dicom.FindAll("00187056").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle FilterBeamPathLengthMaximum
        {
            get { return _dicom.FindFirst("00187058") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FilterBeamPathLengthMaximum_
        {
            get { return _dicom.FindAll("00187058").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString ExposureControlMode
        {
            get { return _dicom.FindFirst("00187060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExposureControlMode_
        {
            get { return _dicom.FindAll("00187060").Select(d => d as CodeString).ToList(); }
        }

        public LongText ExposureControlModeDescription
        {
            get { return _dicom.FindFirst("00187062") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ExposureControlModeDescription_
        {
            get { return _dicom.FindAll("00187062").Select(d => d as LongText).ToList(); }
        }

        public CodeString ExposureStatus
        {
            get { return _dicom.FindFirst("00187064") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExposureStatus_
        {
            get { return _dicom.FindAll("00187064").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString PhototimerSetting
        {
            get { return _dicom.FindFirst("00187065") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PhototimerSetting_
        {
            get { return _dicom.FindAll("00187065").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ExposureTimeInuS
        {
            get { return _dicom.FindFirst("00188150") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ExposureTimeInuS_
        {
            get { return _dicom.FindAll("00188150").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString XRayTubeCurrentInuA
        {
            get { return _dicom.FindFirst("00188151") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> XRayTubeCurrentInuA_
        {
            get { return _dicom.FindAll("00188151").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString ContentQualification
        {
            get { return _dicom.FindFirst("00189004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContentQualification_
        {
            get { return _dicom.FindAll("00189004").Select(d => d as CodeString).ToList(); }
        }

        public ShortString PulseSequenceName
        {
            get { return _dicom.FindFirst("00189005") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PulseSequenceName_
        {
            get { return _dicom.FindAll("00189005").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector MRImagingModifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189006") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRImagingModifierSequence_
        {
            get { return _dicom.FindAll("00189006").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString EchoPulseSequence
        {
            get { return _dicom.FindFirst("00189008") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> EchoPulseSequence_
        {
            get { return _dicom.FindAll("00189008").Select(d => d as CodeString).ToList(); }
        }

        public CodeString InversionRecovery
        {
            get { return _dicom.FindFirst("00189009") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InversionRecovery_
        {
            get { return _dicom.FindAll("00189009").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FlowCompensation
        {
            get { return _dicom.FindFirst("00189010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FlowCompensation_
        {
            get { return _dicom.FindAll("00189010").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MultipleSpinEcho
        {
            get { return _dicom.FindFirst("00189011") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MultipleSpinEcho_
        {
            get { return _dicom.FindAll("00189011").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MultiPlanarExcitation
        {
            get { return _dicom.FindFirst("00189012") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MultiPlanarExcitation_
        {
            get { return _dicom.FindAll("00189012").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PhaseContrast
        {
            get { return _dicom.FindFirst("00189014") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PhaseContrast_
        {
            get { return _dicom.FindAll("00189014").Select(d => d as CodeString).ToList(); }
        }

        public CodeString TimeOfFlightContrast
        {
            get { return _dicom.FindFirst("00189015") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TimeOfFlightContrast_
        {
            get { return _dicom.FindAll("00189015").Select(d => d as CodeString).ToList(); }
        }

        public CodeString Spoiling
        {
            get { return _dicom.FindFirst("00189016") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Spoiling_
        {
            get { return _dicom.FindAll("00189016").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SteadyStatePulseSequence
        {
            get { return _dicom.FindFirst("00189017") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SteadyStatePulseSequence_
        {
            get { return _dicom.FindAll("00189017").Select(d => d as CodeString).ToList(); }
        }

        public CodeString EchoPlanarPulseSequence
        {
            get { return _dicom.FindFirst("00189018") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> EchoPlanarPulseSequence_
        {
            get { return _dicom.FindAll("00189018").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble TagAngleFirstAxis
        {
            get { return _dicom.FindFirst("00189019") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TagAngleFirstAxis_
        {
            get { return _dicom.FindAll("00189019").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString MagnetizationTransfer
        {
            get { return _dicom.FindFirst("00189020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MagnetizationTransfer_
        {
            get { return _dicom.FindAll("00189020").Select(d => d as CodeString).ToList(); }
        }

        public CodeString T2Preparation
        {
            get { return _dicom.FindFirst("00189021") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> T2Preparation_
        {
            get { return _dicom.FindAll("00189021").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BloodSignalNulling
        {
            get { return _dicom.FindFirst("00189022") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BloodSignalNulling_
        {
            get { return _dicom.FindAll("00189022").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SaturationRecovery
        {
            get { return _dicom.FindFirst("00189024") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SaturationRecovery_
        {
            get { return _dicom.FindAll("00189024").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SpectrallySelectedSuppression
        {
            get { return _dicom.FindFirst("00189025") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpectrallySelectedSuppression_
        {
            get { return _dicom.FindAll("00189025").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SpectrallySelectedExcitation
        {
            get { return _dicom.FindFirst("00189026") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpectrallySelectedExcitation_
        {
            get { return _dicom.FindAll("00189026").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SpatialPresaturation
        {
            get { return _dicom.FindFirst("00189027") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpatialPresaturation_
        {
            get { return _dicom.FindAll("00189027").Select(d => d as CodeString).ToList(); }
        }

        public CodeString Tagging
        {
            get { return _dicom.FindFirst("00189028") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Tagging_
        {
            get { return _dicom.FindAll("00189028").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OversamplingPhase
        {
            get { return _dicom.FindFirst("00189029") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OversamplingPhase_
        {
            get { return _dicom.FindAll("00189029").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble TagSpacingFirstDimension
        {
            get { return _dicom.FindFirst("00189030") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TagSpacingFirstDimension_
        {
            get { return _dicom.FindAll("00189030").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString GeometryOfKSpaceTraversal
        {
            get { return _dicom.FindFirst("00189032") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GeometryOfKSpaceTraversal_
        {
            get { return _dicom.FindAll("00189032").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SegmentedKSpaceTraversal
        {
            get { return _dicom.FindFirst("00189033") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SegmentedKSpaceTraversal_
        {
            get { return _dicom.FindAll("00189033").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RectilinearPhaseEncodeReordering
        {
            get { return _dicom.FindFirst("00189034") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RectilinearPhaseEncodeReordering_
        {
            get { return _dicom.FindAll("00189034").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble TagThickness
        {
            get { return _dicom.FindFirst("00189035") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TagThickness_
        {
            get { return _dicom.FindAll("00189035").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString PartialFourierDirection
        {
            get { return _dicom.FindFirst("00189036") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PartialFourierDirection_
        {
            get { return _dicom.FindAll("00189036").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CardiacSynchronizationTechnique
        {
            get { return _dicom.FindFirst("00189037") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CardiacSynchronizationTechnique_
        {
            get { return _dicom.FindAll("00189037").Select(d => d as CodeString).ToList(); }
        }

        public LongString ReceiveCoilManufacturerName
        {
            get { return _dicom.FindFirst("00189041") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReceiveCoilManufacturerName_
        {
            get { return _dicom.FindAll("00189041").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector MRReceiveCoilSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189042") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRReceiveCoilSequence_
        {
            get { return _dicom.FindAll("00189042").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ReceiveCoilType
        {
            get { return _dicom.FindFirst("00189043") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReceiveCoilType_
        {
            get { return _dicom.FindAll("00189043").Select(d => d as CodeString).ToList(); }
        }

        public CodeString QuadratureReceiveCoil
        {
            get { return _dicom.FindFirst("00189044") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> QuadratureReceiveCoil_
        {
            get { return _dicom.FindAll("00189044").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector MultiCoilDefinitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189045") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MultiCoilDefinitionSequence_
        {
            get { return _dicom.FindAll("00189045").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString MultiCoilConfiguration
        {
            get { return _dicom.FindFirst("00189046") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> MultiCoilConfiguration_
        {
            get { return _dicom.FindAll("00189046").Select(d => d as LongString).ToList(); }
        }

        public ShortString MultiCoilElementName
        {
            get { return _dicom.FindFirst("00189047") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> MultiCoilElementName_
        {
            get { return _dicom.FindAll("00189047").Select(d => d as ShortString).ToList(); }
        }

        public CodeString MultiCoilElementUsed
        {
            get { return _dicom.FindFirst("00189048") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MultiCoilElementUsed_
        {
            get { return _dicom.FindAll("00189048").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector MRTransmitCoilSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189049") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRTransmitCoilSequence_
        {
            get { return _dicom.FindAll("00189049").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString TransmitCoilManufacturerName
        {
            get { return _dicom.FindFirst("00189050") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TransmitCoilManufacturerName_
        {
            get { return _dicom.FindAll("00189050").Select(d => d as LongString).ToList(); }
        }

        public CodeString TransmitCoilType
        {
            get { return _dicom.FindFirst("00189051") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TransmitCoilType_
        {
            get { return _dicom.FindAll("00189051").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble SpectralWidth
        {
            get { return _dicom.FindFirst("00189052") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SpectralWidth_
        {
            get { return _dicom.FindAll("00189052").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ChemicalShiftReference
        {
            get { return _dicom.FindFirst("00189053") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ChemicalShiftReference_
        {
            get { return _dicom.FindAll("00189053").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString VolumeLocalizationTechnique
        {
            get { return _dicom.FindFirst("00189054") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VolumeLocalizationTechnique_
        {
            get { return _dicom.FindAll("00189054").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort MRAcquisitionFrequencyEncodingSteps
        {
            get { return _dicom.FindFirst("00189058") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MRAcquisitionFrequencyEncodingSteps_
        {
            get { return _dicom.FindAll("00189058").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString Decoupling
        {
            get { return _dicom.FindFirst("00189059") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Decoupling_
        {
            get { return _dicom.FindAll("00189059").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DecoupledNucleus
        {
            get { return _dicom.FindFirst("00189060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DecoupledNucleus_
        {
            get { return _dicom.FindAll("00189060").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble DecouplingFrequency
        {
            get { return _dicom.FindFirst("00189061") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DecouplingFrequency_
        {
            get { return _dicom.FindAll("00189061").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString DecouplingMethod
        {
            get { return _dicom.FindFirst("00189062") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DecouplingMethod_
        {
            get { return _dicom.FindAll("00189062").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble DecouplingChemicalShiftReference
        {
            get { return _dicom.FindFirst("00189063") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DecouplingChemicalShiftReference_
        {
            get { return _dicom.FindAll("00189063").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString KSpaceFiltering
        {
            get { return _dicom.FindFirst("00189064") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> KSpaceFiltering_
        {
            get { return _dicom.FindAll("00189064").Select(d => d as CodeString).ToList(); }
        }

        public CodeString TimeDomainFiltering
        {
            get { return _dicom.FindFirst("00189065") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TimeDomainFiltering_
        {
            get { return _dicom.FindAll("00189065").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfZeroFills
        {
            get { return _dicom.FindFirst("00189066") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfZeroFills_
        {
            get { return _dicom.FindAll("00189066").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString BaselineCorrection
        {
            get { return _dicom.FindFirst("00189067") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BaselineCorrection_
        {
            get { return _dicom.FindAll("00189067").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble ParallelReductionFactorInPlane
        {
            get { return _dicom.FindFirst("00189069") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ParallelReductionFactorInPlane_
        {
            get { return _dicom.FindAll("00189069").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble CardiacRRIntervalSpecified
        {
            get { return _dicom.FindFirst("00189070") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> CardiacRRIntervalSpecified_
        {
            get { return _dicom.FindAll("00189070").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble AcquisitionDuration
        {
            get { return _dicom.FindFirst("00189073") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> AcquisitionDuration_
        {
            get { return _dicom.FindAll("00189073").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public DateTime FrameAcquisitionDateTime
        {
            get { return _dicom.FindFirst("00189074") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> FrameAcquisitionDateTime_
        {
            get { return _dicom.FindAll("00189074").Select(d => d as DateTime).ToList(); }
        }

        public CodeString DiffusionDirectionality
        {
            get { return _dicom.FindFirst("00189075") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DiffusionDirectionality_
        {
            get { return _dicom.FindAll("00189075").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DiffusionGradientDirectionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189076") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DiffusionGradientDirectionSequence_
        {
            get { return _dicom.FindAll("00189076").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ParallelAcquisition
        {
            get { return _dicom.FindFirst("00189077") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ParallelAcquisition_
        {
            get { return _dicom.FindAll("00189077").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ParallelAcquisitionTechnique
        {
            get { return _dicom.FindFirst("00189078") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ParallelAcquisitionTechnique_
        {
            get { return _dicom.FindAll("00189078").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble InversionTimes
        {
            get { return _dicom.FindFirst("00189079") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> InversionTimes_
        {
            get { return _dicom.FindAll("00189079").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public ShortText MetaboliteMapDescription
        {
            get { return _dicom.FindFirst("00189080") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> MetaboliteMapDescription_
        {
            get { return _dicom.FindAll("00189080").Select(d => d as ShortText).ToList(); }
        }

        public CodeString PartialFourier
        {
            get { return _dicom.FindFirst("00189081") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PartialFourier_
        {
            get { return _dicom.FindAll("00189081").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble EffectiveEchoTime
        {
            get { return _dicom.FindFirst("00189082") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> EffectiveEchoTime_
        {
            get { return _dicom.FindAll("00189082").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector MetaboliteMapCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189083") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MetaboliteMapCodeSequence_
        {
            get { return _dicom.FindAll("00189083").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ChemicalShiftSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189084") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChemicalShiftSequence_
        {
            get { return _dicom.FindAll("00189084").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString CardiacSignalSource
        {
            get { return _dicom.FindFirst("00189085") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CardiacSignalSource_
        {
            get { return _dicom.FindAll("00189085").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble DiffusionBValue
        {
            get { return _dicom.FindFirst("00189087") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionBValue_
        {
            get { return _dicom.FindAll("00189087").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble DiffusionGradientOrientation
        {
            get { return _dicom.FindFirst("00189089") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionGradientOrientation_
        {
            get { return _dicom.FindAll("00189089").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble VelocityEncodingDirection
        {
            get { return _dicom.FindFirst("00189090") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> VelocityEncodingDirection_
        {
            get { return _dicom.FindAll("00189090").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble VelocityEncodingMinimumValue
        {
            get { return _dicom.FindFirst("00189091") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> VelocityEncodingMinimumValue_
        {
            get { return _dicom.FindAll("00189091").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector VelocityEncodingAcquisitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189092") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VelocityEncodingAcquisitionSequence_
        {
            get { return _dicom.FindAll("00189092").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NumberOfKSpaceTrajectories
        {
            get { return _dicom.FindFirst("00189093") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfKSpaceTrajectories_
        {
            get { return _dicom.FindAll("00189093").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString CoverageOfKSpace
        {
            get { return _dicom.FindFirst("00189094") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CoverageOfKSpace_
        {
            get { return _dicom.FindAll("00189094").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong SpectroscopyAcquisitionPhaseRows
        {
            get { return _dicom.FindFirst("00189095") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SpectroscopyAcquisitionPhaseRows_
        {
            get { return _dicom.FindAll("00189095").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointDouble ParallelReductionFactorInPlaneRetired
        {
            get { return _dicom.FindFirst("00189096") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ParallelReductionFactorInPlaneRetired_
        {
            get { return _dicom.FindAll("00189096").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TransmitterFrequency
        {
            get { return _dicom.FindFirst("00189098") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TransmitterFrequency_
        {
            get { return _dicom.FindAll("00189098").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString ResonantNucleus
        {
            get { return _dicom.FindFirst("00189100") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ResonantNucleus_
        {
            get { return _dicom.FindAll("00189100").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FrequencyCorrection
        {
            get { return _dicom.FindFirst("00189101") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FrequencyCorrection_
        {
            get { return _dicom.FindAll("00189101").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector MRSpectroscopyFOVGeometrySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189103") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRSpectroscopyFOVGeometrySequence_
        {
            get { return _dicom.FindAll("00189103").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble SlabThickness
        {
            get { return _dicom.FindFirst("00189104") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SlabThickness_
        {
            get { return _dicom.FindAll("00189104").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble SlabOrientation
        {
            get { return _dicom.FindFirst("00189105") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SlabOrientation_
        {
            get { return _dicom.FindAll("00189105").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble MidSlabPosition
        {
            get { return _dicom.FindFirst("00189106") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> MidSlabPosition_
        {
            get { return _dicom.FindAll("00189106").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector MRSpatialSaturationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189107") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRSpatialSaturationSequence_
        {
            get { return _dicom.FindAll("00189107").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MRTimingAndRelatedParametersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189112") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRTimingAndRelatedParametersSequence_
        {
            get { return _dicom.FindAll("00189112").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MREchoSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189114") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MREchoSequence_
        {
            get { return _dicom.FindAll("00189114").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MRModifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189115") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRModifierSequence_
        {
            get { return _dicom.FindAll("00189115").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MRDiffusionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189117") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRDiffusionSequence_
        {
            get { return _dicom.FindAll("00189117").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CardiacSynchronizationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189118") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CardiacSynchronizationSequence_
        {
            get { return _dicom.FindAll("00189118").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MRAveragesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189119") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRAveragesSequence_
        {
            get { return _dicom.FindAll("00189119").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MRFOVGeometrySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189125") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRFOVGeometrySequence_
        {
            get { return _dicom.FindAll("00189125").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VolumeLocalizationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189126") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VolumeLocalizationSequence_
        {
            get { return _dicom.FindAll("00189126").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong SpectroscopyAcquisitionDataColumns
        {
            get { return _dicom.FindFirst("00189127") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SpectroscopyAcquisitionDataColumns_
        {
            get { return _dicom.FindAll("00189127").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString DiffusionAnisotropyType
        {
            get { return _dicom.FindFirst("00189147") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DiffusionAnisotropyType_
        {
            get { return _dicom.FindAll("00189147").Select(d => d as CodeString).ToList(); }
        }

        public DateTime FrameReferenceDateTime
        {
            get { return _dicom.FindFirst("00189151") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> FrameReferenceDateTime_
        {
            get { return _dicom.FindAll("00189151").Select(d => d as DateTime).ToList(); }
        }

        public SequenceSelector MRMetaboliteMapSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189152") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRMetaboliteMapSequence_
        {
            get { return _dicom.FindAll("00189152").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble ParallelReductionFactorOutOfPlane
        {
            get { return _dicom.FindFirst("00189155") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ParallelReductionFactorOutOfPlane_
        {
            get { return _dicom.FindAll("00189155").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedLong SpectroscopyAcquisitionOutOfPlanePhaseSteps
        {
            get { return _dicom.FindFirst("00189159") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SpectroscopyAcquisitionOutOfPlanePhaseSteps_
        {
            get { return _dicom.FindAll("00189159").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString BulkMotionStatusRetired
        {
            get { return _dicom.FindFirst("00189166") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BulkMotionStatusRetired_
        {
            get { return _dicom.FindAll("00189166").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble ParallelReductionFactorSecondInPlane
        {
            get { return _dicom.FindFirst("00189168") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ParallelReductionFactorSecondInPlane_
        {
            get { return _dicom.FindAll("00189168").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString CardiacBeatRejectionTechnique
        {
            get { return _dicom.FindFirst("00189169") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CardiacBeatRejectionTechnique_
        {
            get { return _dicom.FindAll("00189169").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RespiratoryMotionCompensationTechnique
        {
            get { return _dicom.FindFirst("00189170") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RespiratoryMotionCompensationTechnique_
        {
            get { return _dicom.FindAll("00189170").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RespiratorySignalSource
        {
            get { return _dicom.FindFirst("00189171") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RespiratorySignalSource_
        {
            get { return _dicom.FindAll("00189171").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BulkMotionCompensationTechnique
        {
            get { return _dicom.FindFirst("00189172") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BulkMotionCompensationTechnique_
        {
            get { return _dicom.FindAll("00189172").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BulkMotionSignalSource
        {
            get { return _dicom.FindFirst("00189173") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BulkMotionSignalSource_
        {
            get { return _dicom.FindAll("00189173").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ApplicableSafetyStandardAgency
        {
            get { return _dicom.FindFirst("00189174") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ApplicableSafetyStandardAgency_
        {
            get { return _dicom.FindAll("00189174").Select(d => d as CodeString).ToList(); }
        }

        public LongString ApplicableSafetyStandardDescription
        {
            get { return _dicom.FindFirst("00189175") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ApplicableSafetyStandardDescription_
        {
            get { return _dicom.FindAll("00189175").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector OperatingModeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189176") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OperatingModeSequence_
        {
            get { return _dicom.FindAll("00189176").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString OperatingModeType
        {
            get { return _dicom.FindFirst("00189177") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OperatingModeType_
        {
            get { return _dicom.FindAll("00189177").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OperatingMode
        {
            get { return _dicom.FindFirst("00189178") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OperatingMode_
        {
            get { return _dicom.FindAll("00189178").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SpecificAbsorptionRateDefinition
        {
            get { return _dicom.FindFirst("00189179") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpecificAbsorptionRateDefinition_
        {
            get { return _dicom.FindAll("00189179").Select(d => d as CodeString).ToList(); }
        }

        public CodeString GradientOutputType
        {
            get { return _dicom.FindFirst("00189180") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GradientOutputType_
        {
            get { return _dicom.FindAll("00189180").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble SpecificAbsorptionRateValue
        {
            get { return _dicom.FindFirst("00189181") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SpecificAbsorptionRateValue_
        {
            get { return _dicom.FindAll("00189181").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble GradientOutput
        {
            get { return _dicom.FindFirst("00189182") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> GradientOutput_
        {
            get { return _dicom.FindAll("00189182").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString FlowCompensationDirection
        {
            get { return _dicom.FindFirst("00189183") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FlowCompensationDirection_
        {
            get { return _dicom.FindAll("00189183").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble TaggingDelay
        {
            get { return _dicom.FindFirst("00189184") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TaggingDelay_
        {
            get { return _dicom.FindAll("00189184").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public ShortText RespiratoryMotionCompensationTechniqueDescription
        {
            get { return _dicom.FindFirst("00189185") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> RespiratoryMotionCompensationTechniqueDescription_
        {
            get { return _dicom.FindAll("00189185").Select(d => d as ShortText).ToList(); }
        }

        public ShortString RespiratorySignalSourceID
        {
            get { return _dicom.FindFirst("00189186") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RespiratorySignalSourceID_
        {
            get { return _dicom.FindAll("00189186").Select(d => d as ShortString).ToList(); }
        }

        public FloatingPointDouble ChemicalShiftMinimumIntegrationLimitInHzRetired
        {
            get { return _dicom.FindFirst("00189195") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ChemicalShiftMinimumIntegrationLimitInHzRetired_
        {
            get { return _dicom.FindAll("00189195").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ChemicalShiftMaximumIntegrationLimitInHzRetired
        {
            get { return _dicom.FindFirst("00189196") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ChemicalShiftMaximumIntegrationLimitInHzRetired_
        {
            get { return _dicom.FindAll("00189196").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector MRVelocityEncodingSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189197") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRVelocityEncodingSequence_
        {
            get { return _dicom.FindAll("00189197").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FirstOrderPhaseCorrection
        {
            get { return _dicom.FindFirst("00189198") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FirstOrderPhaseCorrection_
        {
            get { return _dicom.FindAll("00189198").Select(d => d as CodeString).ToList(); }
        }

        public CodeString WaterReferencedPhaseCorrection
        {
            get { return _dicom.FindFirst("00189199") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> WaterReferencedPhaseCorrection_
        {
            get { return _dicom.FindAll("00189199").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MRSpectroscopyAcquisitionType
        {
            get { return _dicom.FindFirst("00189200") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MRSpectroscopyAcquisitionType_
        {
            get { return _dicom.FindAll("00189200").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RespiratoryCyclePosition
        {
            get { return _dicom.FindFirst("00189214") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RespiratoryCyclePosition_
        {
            get { return _dicom.FindAll("00189214").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble VelocityEncodingMaximumValue
        {
            get { return _dicom.FindFirst("00189217") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> VelocityEncodingMaximumValue_
        {
            get { return _dicom.FindAll("00189217").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TagSpacingSecondDimension
        {
            get { return _dicom.FindFirst("00189218") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TagSpacingSecondDimension_
        {
            get { return _dicom.FindAll("00189218").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SignedShort TagAngleSecondAxis
        {
            get { return _dicom.FindFirst("00189219") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> TagAngleSecondAxis_
        {
            get { return _dicom.FindAll("00189219").Select(d => d as SignedShort).ToList(); }
        }

        public FloatingPointDouble FrameAcquisitionDuration
        {
            get { return _dicom.FindFirst("00189220") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> FrameAcquisitionDuration_
        {
            get { return _dicom.FindAll("00189220").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector MRImageFrameTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189226") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRImageFrameTypeSequence_
        {
            get { return _dicom.FindAll("00189226").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MRSpectroscopyFrameTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189227") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRSpectroscopyFrameTypeSequence_
        {
            get { return _dicom.FindAll("00189227").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort MRAcquisitionPhaseEncodingStepsInPlane
        {
            get { return _dicom.FindFirst("00189231") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MRAcquisitionPhaseEncodingStepsInPlane_
        {
            get { return _dicom.FindAll("00189231").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MRAcquisitionPhaseEncodingStepsOutOfPlane
        {
            get { return _dicom.FindFirst("00189232") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MRAcquisitionPhaseEncodingStepsOutOfPlane_
        {
            get { return _dicom.FindAll("00189232").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong SpectroscopyAcquisitionPhaseColumns
        {
            get { return _dicom.FindFirst("00189234") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SpectroscopyAcquisitionPhaseColumns_
        {
            get { return _dicom.FindAll("00189234").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString CardiacCyclePosition
        {
            get { return _dicom.FindFirst("00189236") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CardiacCyclePosition_
        {
            get { return _dicom.FindAll("00189236").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector SpecificAbsorptionRateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189239") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecificAbsorptionRateSequence_
        {
            get { return _dicom.FindAll("00189239").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort RFEchoTrainLength
        {
            get { return _dicom.FindFirst("00189240") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RFEchoTrainLength_
        {
            get { return _dicom.FindAll("00189240").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort GradientEchoTrainLength
        {
            get { return _dicom.FindFirst("00189241") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GradientEchoTrainLength_
        {
            get { return _dicom.FindAll("00189241").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ArterialSpinLabelingContrast
        {
            get { return _dicom.FindFirst("00189250") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ArterialSpinLabelingContrast_
        {
            get { return _dicom.FindAll("00189250").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector MRArterialSpinLabelingSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189251") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MRArterialSpinLabelingSequence_
        {
            get { return _dicom.FindAll("00189251").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ASLTechniqueDescription
        {
            get { return _dicom.FindFirst("00189252") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ASLTechniqueDescription_
        {
            get { return _dicom.FindAll("00189252").Select(d => d as LongString).ToList(); }
        }

        public UnsignedShort ASLSlabNumber
        {
            get { return _dicom.FindFirst("00189253") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ASLSlabNumber_
        {
            get { return _dicom.FindAll("00189253").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble ASLSlabThickness
        {
            get { return _dicom.FindFirst("00189254") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ASLSlabThickness_
        {
            get { return _dicom.FindAll("00189254").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ASLSlabOrientation
        {
            get { return _dicom.FindFirst("00189255") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ASLSlabOrientation_
        {
            get { return _dicom.FindAll("00189255").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ASLMidSlabPosition
        {
            get { return _dicom.FindFirst("00189256") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ASLMidSlabPosition_
        {
            get { return _dicom.FindAll("00189256").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString ASLContext
        {
            get { return _dicom.FindFirst("00189257") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ASLContext_
        {
            get { return _dicom.FindAll("00189257").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong ASLPulseTrainDuration
        {
            get { return _dicom.FindFirst("00189258") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> ASLPulseTrainDuration_
        {
            get { return _dicom.FindAll("00189258").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString ASLCrusherFlag
        {
            get { return _dicom.FindFirst("00189259") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ASLCrusherFlag_
        {
            get { return _dicom.FindAll("00189259").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble ASLCrusherFlow
        {
            get { return _dicom.FindFirst("0018925A") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ASLCrusherFlow_
        {
            get { return _dicom.FindAll("0018925A").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public LongString ASLCrusherDescription
        {
            get { return _dicom.FindFirst("0018925B") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ASLCrusherDescription_
        {
            get { return _dicom.FindAll("0018925B").Select(d => d as LongString).ToList(); }
        }

        public CodeString ASLBolusCutoffFlag
        {
            get { return _dicom.FindFirst("0018925C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ASLBolusCutoffFlag_
        {
            get { return _dicom.FindAll("0018925C").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ASLBolusCutoffTimingSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0018925D") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ASLBolusCutoffTimingSequence_
        {
            get { return _dicom.FindAll("0018925D").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ASLBolusCutoffTechnique
        {
            get { return _dicom.FindFirst("0018925E") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ASLBolusCutoffTechnique_
        {
            get { return _dicom.FindAll("0018925E").Select(d => d as LongString).ToList(); }
        }

        public UnsignedLong ASLBolusCutoffDelayTime
        {
            get { return _dicom.FindFirst("0018925F") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> ASLBolusCutoffDelayTime_
        {
            get { return _dicom.FindAll("0018925F").Select(d => d as UnsignedLong).ToList(); }
        }

        public SequenceSelector ASLSlabSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189260") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ASLSlabSequence_
        {
            get { return _dicom.FindAll("00189260").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble ChemicalShiftMinimumIntegrationLimitInppm
        {
            get { return _dicom.FindFirst("00189295") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ChemicalShiftMinimumIntegrationLimitInppm_
        {
            get { return _dicom.FindAll("00189295").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ChemicalShiftMaximumIntegrationLimitInppm
        {
            get { return _dicom.FindFirst("00189296") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ChemicalShiftMaximumIntegrationLimitInppm_
        {
            get { return _dicom.FindAll("00189296").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTAcquisitionTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189301") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTAcquisitionTypeSequence_
        {
            get { return _dicom.FindAll("00189301").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString AcquisitionType
        {
            get { return _dicom.FindFirst("00189302") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AcquisitionType_
        {
            get { return _dicom.FindAll("00189302").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble TubeAngle
        {
            get { return _dicom.FindFirst("00189303") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TubeAngle_
        {
            get { return _dicom.FindAll("00189303").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTAcquisitionDetailsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189304") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTAcquisitionDetailsSequence_
        {
            get { return _dicom.FindAll("00189304").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble RevolutionTime
        {
            get { return _dicom.FindFirst("00189305") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RevolutionTime_
        {
            get { return _dicom.FindAll("00189305").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble SingleCollimationWidth
        {
            get { return _dicom.FindFirst("00189306") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SingleCollimationWidth_
        {
            get { return _dicom.FindAll("00189306").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TotalCollimationWidth
        {
            get { return _dicom.FindFirst("00189307") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TotalCollimationWidth_
        {
            get { return _dicom.FindAll("00189307").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTTableDynamicsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189308") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTTableDynamicsSequence_
        {
            get { return _dicom.FindAll("00189308").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble TableSpeed
        {
            get { return _dicom.FindFirst("00189309") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableSpeed_
        {
            get { return _dicom.FindAll("00189309").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TableFeedPerRotation
        {
            get { return _dicom.FindFirst("00189310") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableFeedPerRotation_
        {
            get { return _dicom.FindAll("00189310").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble SpiralPitchFactor
        {
            get { return _dicom.FindFirst("00189311") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SpiralPitchFactor_
        {
            get { return _dicom.FindAll("00189311").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTGeometrySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189312") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTGeometrySequence_
        {
            get { return _dicom.FindAll("00189312").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble DataCollectionCenterPatient
        {
            get { return _dicom.FindFirst("00189313") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DataCollectionCenterPatient_
        {
            get { return _dicom.FindAll("00189313").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTReconstructionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189314") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTReconstructionSequence_
        {
            get { return _dicom.FindAll("00189314").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ReconstructionAlgorithm
        {
            get { return _dicom.FindFirst("00189315") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReconstructionAlgorithm_
        {
            get { return _dicom.FindAll("00189315").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ConvolutionKernelGroup
        {
            get { return _dicom.FindFirst("00189316") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ConvolutionKernelGroup_
        {
            get { return _dicom.FindAll("00189316").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble ReconstructionFieldOfView
        {
            get { return _dicom.FindFirst("00189317") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReconstructionFieldOfView_
        {
            get { return _dicom.FindAll("00189317").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ReconstructionTargetCenterPatient
        {
            get { return _dicom.FindFirst("00189318") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReconstructionTargetCenterPatient_
        {
            get { return _dicom.FindAll("00189318").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ReconstructionAngle
        {
            get { return _dicom.FindFirst("00189319") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReconstructionAngle_
        {
            get { return _dicom.FindAll("00189319").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public ShortString ImageFilter
        {
            get { return _dicom.FindFirst("00189320") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ImageFilter_
        {
            get { return _dicom.FindAll("00189320").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector CTExposureSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189321") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTExposureSequence_
        {
            get { return _dicom.FindAll("00189321").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble ReconstructionPixelSpacing
        {
            get { return _dicom.FindFirst("00189322") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReconstructionPixelSpacing_
        {
            get { return _dicom.FindAll("00189322").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString ExposureModulationType
        {
            get { return _dicom.FindFirst("00189323") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExposureModulationType_
        {
            get { return _dicom.FindAll("00189323").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble EstimatedDoseSaving
        {
            get { return _dicom.FindFirst("00189324") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> EstimatedDoseSaving_
        {
            get { return _dicom.FindAll("00189324").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTXRayDetailsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189325") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTXRayDetailsSequence_
        {
            get { return _dicom.FindAll("00189325").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CTPositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189326") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTPositionSequence_
        {
            get { return _dicom.FindAll("00189326").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble TablePosition
        {
            get { return _dicom.FindFirst("00189327") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TablePosition_
        {
            get { return _dicom.FindAll("00189327").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ExposureTimeInms
        {
            get { return _dicom.FindFirst("00189328") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ExposureTimeInms_
        {
            get { return _dicom.FindAll("00189328").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTImageFrameTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189329") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTImageFrameTypeSequence_
        {
            get { return _dicom.FindAll("00189329").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble XRayTubeCurrentInmA
        {
            get { return _dicom.FindFirst("00189330") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> XRayTubeCurrentInmA_
        {
            get { return _dicom.FindAll("00189330").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ExposureInmAs
        {
            get { return _dicom.FindFirst("00189332") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ExposureInmAs_
        {
            get { return _dicom.FindAll("00189332").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString ConstantVolumeFlag
        {
            get { return _dicom.FindFirst("00189333") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ConstantVolumeFlag_
        {
            get { return _dicom.FindAll("00189333").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FluoroscopyFlag
        {
            get { return _dicom.FindFirst("00189334") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FluoroscopyFlag_
        {
            get { return _dicom.FindAll("00189334").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble DistanceSourceToDataCollectionCenter
        {
            get { return _dicom.FindFirst("00189335") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DistanceSourceToDataCollectionCenter_
        {
            get { return _dicom.FindAll("00189335").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort ContrastBolusAgentNumber
        {
            get { return _dicom.FindFirst("00189337") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ContrastBolusAgentNumber_
        {
            get { return _dicom.FindAll("00189337").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ContrastBolusIngredientCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189338") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContrastBolusIngredientCodeSequence_
        {
            get { return _dicom.FindAll("00189338").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContrastAdministrationProfileSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189340") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContrastAdministrationProfileSequence_
        {
            get { return _dicom.FindAll("00189340").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContrastBolusUsageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189341") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContrastBolusUsageSequence_
        {
            get { return _dicom.FindAll("00189341").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ContrastBolusAgentAdministered
        {
            get { return _dicom.FindFirst("00189342") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContrastBolusAgentAdministered_
        {
            get { return _dicom.FindAll("00189342").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ContrastBolusAgentDetected
        {
            get { return _dicom.FindFirst("00189343") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContrastBolusAgentDetected_
        {
            get { return _dicom.FindAll("00189343").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ContrastBolusAgentPhase
        {
            get { return _dicom.FindFirst("00189344") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContrastBolusAgentPhase_
        {
            get { return _dicom.FindAll("00189344").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble CTDIvol
        {
            get { return _dicom.FindFirst("00189345") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> CTDIvol_
        {
            get { return _dicom.FindAll("00189345").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector CTDIPhantomTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189346") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTDIPhantomTypeCodeSequence_
        {
            get { return _dicom.FindAll("00189346").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle CalciumScoringMassFactorPatient
        {
            get { return _dicom.FindFirst("00189351") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CalciumScoringMassFactorPatient_
        {
            get { return _dicom.FindAll("00189351").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CalciumScoringMassFactorDevice
        {
            get { return _dicom.FindFirst("00189352") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CalciumScoringMassFactorDevice_
        {
            get { return _dicom.FindAll("00189352").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle EnergyWeightingFactor
        {
            get { return _dicom.FindFirst("00189353") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> EnergyWeightingFactor_
        {
            get { return _dicom.FindAll("00189353").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector CTAdditionalXRaySourceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189360") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CTAdditionalXRaySourceSequence_
        {
            get { return _dicom.FindAll("00189360").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ProjectionPixelCalibrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189401") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProjectionPixelCalibrationSequence_
        {
            get { return _dicom.FindAll("00189401").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle DistanceSourceToIsocenter
        {
            get { return _dicom.FindFirst("00189402") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DistanceSourceToIsocenter_
        {
            get { return _dicom.FindAll("00189402").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle DistanceObjectToTableTop
        {
            get { return _dicom.FindFirst("00189403") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DistanceObjectToTableTop_
        {
            get { return _dicom.FindAll("00189403").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ObjectPixelSpacingInCenterOfBeam
        {
            get { return _dicom.FindFirst("00189404") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ObjectPixelSpacingInCenterOfBeam_
        {
            get { return _dicom.FindAll("00189404").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector PositionerPositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189405") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PositionerPositionSequence_
        {
            get { return _dicom.FindAll("00189405").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TablePositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189406") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TablePositionSequence_
        {
            get { return _dicom.FindAll("00189406").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CollimatorShapeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189407") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CollimatorShapeSequence_
        {
            get { return _dicom.FindAll("00189407").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PlanesInAcquisition
        {
            get { return _dicom.FindFirst("00189410") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PlanesInAcquisition_
        {
            get { return _dicom.FindAll("00189410").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector XAXRFFrameCharacteristicsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189412") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> XAXRFFrameCharacteristicsSequence_
        {
            get { return _dicom.FindAll("00189412").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FrameAcquisitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189417") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameAcquisitionSequence_
        {
            get { return _dicom.FindAll("00189417").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString XRayReceptorType
        {
            get { return _dicom.FindFirst("00189420") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> XRayReceptorType_
        {
            get { return _dicom.FindAll("00189420").Select(d => d as CodeString).ToList(); }
        }

        public LongString AcquisitionProtocolName
        {
            get { return _dicom.FindFirst("00189423") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AcquisitionProtocolName_
        {
            get { return _dicom.FindAll("00189423").Select(d => d as LongString).ToList(); }
        }

        public LongText AcquisitionProtocolDescription
        {
            get { return _dicom.FindFirst("00189424") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> AcquisitionProtocolDescription_
        {
            get { return _dicom.FindAll("00189424").Select(d => d as LongText).ToList(); }
        }

        public CodeString ContrastBolusIngredientOpaque
        {
            get { return _dicom.FindFirst("00189425") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContrastBolusIngredientOpaque_
        {
            get { return _dicom.FindAll("00189425").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle DistanceReceptorPlaneToDetectorHousing
        {
            get { return _dicom.FindFirst("00189426") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DistanceReceptorPlaneToDetectorHousing_
        {
            get { return _dicom.FindAll("00189426").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString IntensifierActiveShape
        {
            get { return _dicom.FindFirst("00189427") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IntensifierActiveShape_
        {
            get { return _dicom.FindAll("00189427").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle IntensifierActiveDimensions
        {
            get { return _dicom.FindFirst("00189428") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IntensifierActiveDimensions_
        {
            get { return _dicom.FindAll("00189428").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PhysicalDetectorSize
        {
            get { return _dicom.FindFirst("00189429") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PhysicalDetectorSize_
        {
            get { return _dicom.FindAll("00189429").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PositionOfIsocenterProjection
        {
            get { return _dicom.FindFirst("00189430") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PositionOfIsocenterProjection_
        {
            get { return _dicom.FindAll("00189430").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector FieldOfViewSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189432") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FieldOfViewSequence_
        {
            get { return _dicom.FindAll("00189432").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString FieldOfViewDescription
        {
            get { return _dicom.FindFirst("00189433") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FieldOfViewDescription_
        {
            get { return _dicom.FindAll("00189433").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ExposureControlSensingRegionsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189434") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ExposureControlSensingRegionsSequence_
        {
            get { return _dicom.FindAll("00189434").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ExposureControlSensingRegionShape
        {
            get { return _dicom.FindFirst("00189435") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExposureControlSensingRegionShape_
        {
            get { return _dicom.FindAll("00189435").Select(d => d as CodeString).ToList(); }
        }

        public SignedShort ExposureControlSensingRegionLeftVerticalEdge
        {
            get { return _dicom.FindFirst("00189436") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> ExposureControlSensingRegionLeftVerticalEdge_
        {
            get { return _dicom.FindAll("00189436").Select(d => d as SignedShort).ToList(); }
        }

        public SignedShort ExposureControlSensingRegionRightVerticalEdge
        {
            get { return _dicom.FindFirst("00189437") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> ExposureControlSensingRegionRightVerticalEdge_
        {
            get { return _dicom.FindAll("00189437").Select(d => d as SignedShort).ToList(); }
        }

        public SignedShort ExposureControlSensingRegionUpperHorizontalEdge
        {
            get { return _dicom.FindFirst("00189438") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> ExposureControlSensingRegionUpperHorizontalEdge_
        {
            get { return _dicom.FindAll("00189438").Select(d => d as SignedShort).ToList(); }
        }

        public SignedShort ExposureControlSensingRegionLowerHorizontalEdge
        {
            get { return _dicom.FindFirst("00189439") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> ExposureControlSensingRegionLowerHorizontalEdge_
        {
            get { return _dicom.FindAll("00189439").Select(d => d as SignedShort).ToList(); }
        }

        public SignedShort CenterOfCircularExposureControlSensingRegion
        {
            get { return _dicom.FindFirst("00189440") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> CenterOfCircularExposureControlSensingRegion_
        {
            get { return _dicom.FindAll("00189440").Select(d => d as SignedShort).ToList(); }
        }

        public UnsignedShort RadiusOfCircularExposureControlSensingRegion
        {
            get { return _dicom.FindFirst("00189441") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RadiusOfCircularExposureControlSensingRegion_
        {
            get { return _dicom.FindAll("00189441").Select(d => d as UnsignedShort).ToList(); }
        }

        public SignedShort VerticesOfThePolygonalExposureControlSensingRegion
        {
            get { return _dicom.FindFirst("00189442") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> VerticesOfThePolygonalExposureControlSensingRegion_
        {
            get { return _dicom.FindAll("00189442").Select(d => d as SignedShort).ToList(); }
        }

        public FloatingPointSingle ColumnAngulationPatient
        {
            get { return _dicom.FindFirst("00189447") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ColumnAngulationPatient_
        {
            get { return _dicom.FindAll("00189447").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BeamAngle
        {
            get { return _dicom.FindFirst("00189449") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BeamAngle_
        {
            get { return _dicom.FindAll("00189449").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector FrameDetectorParametersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189451") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameDetectorParametersSequence_
        {
            get { return _dicom.FindAll("00189451").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle CalculatedAnatomyThickness
        {
            get { return _dicom.FindFirst("00189452") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CalculatedAnatomyThickness_
        {
            get { return _dicom.FindAll("00189452").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector CalibrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189455") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CalibrationSequence_
        {
            get { return _dicom.FindAll("00189455").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ObjectThicknessSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189456") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ObjectThicknessSequence_
        {
            get { return _dicom.FindAll("00189456").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PlaneIdentification
        {
            get { return _dicom.FindFirst("00189457") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PlaneIdentification_
        {
            get { return _dicom.FindAll("00189457").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle FieldOfViewDimensionsInFloat
        {
            get { return _dicom.FindFirst("00189461") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FieldOfViewDimensionsInFloat_
        {
            get { return _dicom.FindAll("00189461").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector IsocenterReferenceSystemSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189462") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IsocenterReferenceSystemSequence_
        {
            get { return _dicom.FindAll("00189462").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle PositionerIsocenterPrimaryAngle
        {
            get { return _dicom.FindFirst("00189463") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PositionerIsocenterPrimaryAngle_
        {
            get { return _dicom.FindAll("00189463").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PositionerIsocenterSecondaryAngle
        {
            get { return _dicom.FindFirst("00189464") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PositionerIsocenterSecondaryAngle_
        {
            get { return _dicom.FindAll("00189464").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PositionerIsocenterDetectorRotationAngle
        {
            get { return _dicom.FindFirst("00189465") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PositionerIsocenterDetectorRotationAngle_
        {
            get { return _dicom.FindAll("00189465").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle TableXPositionToIsocenter
        {
            get { return _dicom.FindFirst("00189466") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableXPositionToIsocenter_
        {
            get { return _dicom.FindAll("00189466").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle TableYPositionToIsocenter
        {
            get { return _dicom.FindFirst("00189467") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableYPositionToIsocenter_
        {
            get { return _dicom.FindAll("00189467").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle TableZPositionToIsocenter
        {
            get { return _dicom.FindFirst("00189468") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableZPositionToIsocenter_
        {
            get { return _dicom.FindAll("00189468").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle TableHorizontalRotationAngle
        {
            get { return _dicom.FindFirst("00189469") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableHorizontalRotationAngle_
        {
            get { return _dicom.FindAll("00189469").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle TableHeadTiltAngle
        {
            get { return _dicom.FindFirst("00189470") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableHeadTiltAngle_
        {
            get { return _dicom.FindAll("00189470").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle TableCradleTiltAngle
        {
            get { return _dicom.FindFirst("00189471") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableCradleTiltAngle_
        {
            get { return _dicom.FindAll("00189471").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector FrameDisplayShutterSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189472") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameDisplayShutterSequence_
        {
            get { return _dicom.FindAll("00189472").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle AcquiredImageAreaDoseProduct
        {
            get { return _dicom.FindFirst("00189473") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AcquiredImageAreaDoseProduct_
        {
            get { return _dicom.FindAll("00189473").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString CArmPositionerTabletopRelationship
        {
            get { return _dicom.FindFirst("00189474") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CArmPositionerTabletopRelationship_
        {
            get { return _dicom.FindAll("00189474").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector XRayGeometrySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189476") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> XRayGeometrySequence_
        {
            get { return _dicom.FindAll("00189476").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IrradiationEventIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189477") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IrradiationEventIdentificationSequence_
        {
            get { return _dicom.FindAll("00189477").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector XRay3DFrameTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189504") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> XRay3DFrameTypeSequence_
        {
            get { return _dicom.FindAll("00189504").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContributingSourcesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189506") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContributingSourcesSequence_
        {
            get { return _dicom.FindAll("00189506").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector XRay3DAcquisitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189507") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> XRay3DAcquisitionSequence_
        {
            get { return _dicom.FindAll("00189507").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle PrimaryPositionerScanArc
        {
            get { return _dicom.FindFirst("00189508") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PrimaryPositionerScanArc_
        {
            get { return _dicom.FindAll("00189508").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle SecondaryPositionerScanArc
        {
            get { return _dicom.FindFirst("00189509") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SecondaryPositionerScanArc_
        {
            get { return _dicom.FindAll("00189509").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PrimaryPositionerScanStartAngle
        {
            get { return _dicom.FindFirst("00189510") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PrimaryPositionerScanStartAngle_
        {
            get { return _dicom.FindAll("00189510").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle SecondaryPositionerScanStartAngle
        {
            get { return _dicom.FindFirst("00189511") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SecondaryPositionerScanStartAngle_
        {
            get { return _dicom.FindAll("00189511").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PrimaryPositionerIncrement
        {
            get { return _dicom.FindFirst("00189514") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PrimaryPositionerIncrement_
        {
            get { return _dicom.FindAll("00189514").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle SecondaryPositionerIncrement
        {
            get { return _dicom.FindFirst("00189515") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SecondaryPositionerIncrement_
        {
            get { return _dicom.FindAll("00189515").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public DateTime StartAcquisitionDateTime
        {
            get { return _dicom.FindFirst("00189516") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> StartAcquisitionDateTime_
        {
            get { return _dicom.FindAll("00189516").Select(d => d as DateTime).ToList(); }
        }

        public DateTime EndAcquisitionDateTime
        {
            get { return _dicom.FindFirst("00189517") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> EndAcquisitionDateTime_
        {
            get { return _dicom.FindAll("00189517").Select(d => d as DateTime).ToList(); }
        }

        public LongString ApplicationName
        {
            get { return _dicom.FindFirst("00189524") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ApplicationName_
        {
            get { return _dicom.FindAll("00189524").Select(d => d as LongString).ToList(); }
        }

        public LongString ApplicationVersion
        {
            get { return _dicom.FindFirst("00189525") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ApplicationVersion_
        {
            get { return _dicom.FindAll("00189525").Select(d => d as LongString).ToList(); }
        }

        public LongString ApplicationManufacturer
        {
            get { return _dicom.FindFirst("00189526") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ApplicationManufacturer_
        {
            get { return _dicom.FindAll("00189526").Select(d => d as LongString).ToList(); }
        }

        public CodeString AlgorithmType
        {
            get { return _dicom.FindFirst("00189527") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AlgorithmType_
        {
            get { return _dicom.FindAll("00189527").Select(d => d as CodeString).ToList(); }
        }

        public LongString AlgorithmDescription
        {
            get { return _dicom.FindFirst("00189528") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AlgorithmDescription_
        {
            get { return _dicom.FindAll("00189528").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector XRay3DReconstructionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189530") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> XRay3DReconstructionSequence_
        {
            get { return _dicom.FindAll("00189530").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ReconstructionDescription
        {
            get { return _dicom.FindFirst("00189531") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReconstructionDescription_
        {
            get { return _dicom.FindAll("00189531").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PerProjectionAcquisitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189538") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerProjectionAcquisitionSequence_
        {
            get { return _dicom.FindAll("00189538").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector DiffusionBMatrixSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189601") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DiffusionBMatrixSequence_
        {
            get { return _dicom.FindAll("00189601").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble DiffusionBValueXX
        {
            get { return _dicom.FindFirst("00189602") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionBValueXX_
        {
            get { return _dicom.FindAll("00189602").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble DiffusionBValueXY
        {
            get { return _dicom.FindFirst("00189603") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionBValueXY_
        {
            get { return _dicom.FindAll("00189603").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble DiffusionBValueXZ
        {
            get { return _dicom.FindFirst("00189604") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionBValueXZ_
        {
            get { return _dicom.FindAll("00189604").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble DiffusionBValueYY
        {
            get { return _dicom.FindFirst("00189605") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionBValueYY_
        {
            get { return _dicom.FindAll("00189605").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble DiffusionBValueYZ
        {
            get { return _dicom.FindFirst("00189606") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionBValueYZ_
        {
            get { return _dicom.FindAll("00189606").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble DiffusionBValueZZ
        {
            get { return _dicom.FindFirst("00189607") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DiffusionBValueZZ_
        {
            get { return _dicom.FindAll("00189607").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public DateTime DecayCorrectionDateTime
        {
            get { return _dicom.FindFirst("00189701") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> DecayCorrectionDateTime_
        {
            get { return _dicom.FindAll("00189701").Select(d => d as DateTime).ToList(); }
        }

        public FloatingPointDouble StartDensityThreshold
        {
            get { return _dicom.FindFirst("00189715") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> StartDensityThreshold_
        {
            get { return _dicom.FindAll("00189715").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble StartRelativeDensityDifferenceThreshold
        {
            get { return _dicom.FindFirst("00189716") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> StartRelativeDensityDifferenceThreshold_
        {
            get { return _dicom.FindAll("00189716").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble StartCardiacTriggerCountThreshold
        {
            get { return _dicom.FindFirst("00189717") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> StartCardiacTriggerCountThreshold_
        {
            get { return _dicom.FindAll("00189717").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble StartRespiratoryTriggerCountThreshold
        {
            get { return _dicom.FindFirst("00189718") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> StartRespiratoryTriggerCountThreshold_
        {
            get { return _dicom.FindAll("00189718").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TerminationCountsThreshold
        {
            get { return _dicom.FindFirst("00189719") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TerminationCountsThreshold_
        {
            get { return _dicom.FindAll("00189719").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TerminationDensityThreshold
        {
            get { return _dicom.FindFirst("00189720") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TerminationDensityThreshold_
        {
            get { return _dicom.FindAll("00189720").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TerminationRelativeDensityThreshold
        {
            get { return _dicom.FindFirst("00189721") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TerminationRelativeDensityThreshold_
        {
            get { return _dicom.FindAll("00189721").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TerminationTimeThreshold
        {
            get { return _dicom.FindFirst("00189722") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TerminationTimeThreshold_
        {
            get { return _dicom.FindAll("00189722").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TerminationCardiacTriggerCountThreshold
        {
            get { return _dicom.FindFirst("00189723") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TerminationCardiacTriggerCountThreshold_
        {
            get { return _dicom.FindAll("00189723").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TerminationRespiratoryTriggerCountThreshold
        {
            get { return _dicom.FindFirst("00189724") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TerminationRespiratoryTriggerCountThreshold_
        {
            get { return _dicom.FindAll("00189724").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString DetectorGeometry
        {
            get { return _dicom.FindFirst("00189725") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DetectorGeometry_
        {
            get { return _dicom.FindAll("00189725").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble TransverseDetectorSeparation
        {
            get { return _dicom.FindFirst("00189726") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TransverseDetectorSeparation_
        {
            get { return _dicom.FindAll("00189726").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble AxialDetectorDimension
        {
            get { return _dicom.FindFirst("00189727") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> AxialDetectorDimension_
        {
            get { return _dicom.FindAll("00189727").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort RadiopharmaceuticalAgentNumber
        {
            get { return _dicom.FindFirst("00189729") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RadiopharmaceuticalAgentNumber_
        {
            get { return _dicom.FindAll("00189729").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector PETFrameAcquisitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189732") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PETFrameAcquisitionSequence_
        {
            get { return _dicom.FindAll("00189732").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PETDetectorMotionDetailsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189733") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PETDetectorMotionDetailsSequence_
        {
            get { return _dicom.FindAll("00189733").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PETTableDynamicsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189734") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PETTableDynamicsSequence_
        {
            get { return _dicom.FindAll("00189734").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PETPositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189735") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PETPositionSequence_
        {
            get { return _dicom.FindAll("00189735").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PETFrameCorrectionFactorsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189736") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PETFrameCorrectionFactorsSequence_
        {
            get { return _dicom.FindAll("00189736").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RadiopharmaceuticalUsageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189737") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RadiopharmaceuticalUsageSequence_
        {
            get { return _dicom.FindAll("00189737").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString AttenuationCorrectionSource
        {
            get { return _dicom.FindFirst("00189738") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AttenuationCorrectionSource_
        {
            get { return _dicom.FindAll("00189738").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfIterations
        {
            get { return _dicom.FindFirst("00189739") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfIterations_
        {
            get { return _dicom.FindAll("00189739").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfSubsets
        {
            get { return _dicom.FindFirst("00189740") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfSubsets_
        {
            get { return _dicom.FindAll("00189740").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector PETReconstructionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189749") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PETReconstructionSequence_
        {
            get { return _dicom.FindAll("00189749").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PETFrameTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189751") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PETFrameTypeSequence_
        {
            get { return _dicom.FindAll("00189751").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString TimeOfFlightInformationUsed
        {
            get { return _dicom.FindFirst("00189755") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TimeOfFlightInformationUsed_
        {
            get { return _dicom.FindAll("00189755").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ReconstructionType
        {
            get { return _dicom.FindFirst("00189756") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReconstructionType_
        {
            get { return _dicom.FindAll("00189756").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DecayCorrected
        {
            get { return _dicom.FindFirst("00189758") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DecayCorrected_
        {
            get { return _dicom.FindAll("00189758").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AttenuationCorrected
        {
            get { return _dicom.FindFirst("00189759") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AttenuationCorrected_
        {
            get { return _dicom.FindAll("00189759").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ScatterCorrected
        {
            get { return _dicom.FindFirst("00189760") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScatterCorrected_
        {
            get { return _dicom.FindAll("00189760").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DeadTimeCorrected
        {
            get { return _dicom.FindFirst("00189761") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DeadTimeCorrected_
        {
            get { return _dicom.FindAll("00189761").Select(d => d as CodeString).ToList(); }
        }

        public CodeString GantryMotionCorrected
        {
            get { return _dicom.FindFirst("00189762") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GantryMotionCorrected_
        {
            get { return _dicom.FindAll("00189762").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PatientMotionCorrected
        {
            get { return _dicom.FindFirst("00189763") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientMotionCorrected_
        {
            get { return _dicom.FindAll("00189763").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CountLossNormalizationCorrected
        {
            get { return _dicom.FindFirst("00189764") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CountLossNormalizationCorrected_
        {
            get { return _dicom.FindAll("00189764").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RandomsCorrected
        {
            get { return _dicom.FindFirst("00189765") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RandomsCorrected_
        {
            get { return _dicom.FindAll("00189765").Select(d => d as CodeString).ToList(); }
        }

        public CodeString NonUniformRadialSamplingCorrected
        {
            get { return _dicom.FindFirst("00189766") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> NonUniformRadialSamplingCorrected_
        {
            get { return _dicom.FindAll("00189766").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SensitivityCalibrated
        {
            get { return _dicom.FindFirst("00189767") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SensitivityCalibrated_
        {
            get { return _dicom.FindAll("00189767").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DetectorNormalizationCorrection
        {
            get { return _dicom.FindFirst("00189768") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DetectorNormalizationCorrection_
        {
            get { return _dicom.FindAll("00189768").Select(d => d as CodeString).ToList(); }
        }

        public CodeString IterativeReconstructionMethod
        {
            get { return _dicom.FindFirst("00189769") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IterativeReconstructionMethod_
        {
            get { return _dicom.FindAll("00189769").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AttenuationCorrectionTemporalRelationship
        {
            get { return _dicom.FindFirst("00189770") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AttenuationCorrectionTemporalRelationship_
        {
            get { return _dicom.FindAll("00189770").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector PatientPhysiologicalStateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189771") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientPhysiologicalStateSequence_
        {
            get { return _dicom.FindAll("00189771").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PatientPhysiologicalStateCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189772") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientPhysiologicalStateCodeSequence_
        {
            get { return _dicom.FindAll("00189772").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble DepthsOfFocus
        {
            get { return _dicom.FindFirst("00189801") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DepthsOfFocus_
        {
            get { return _dicom.FindAll("00189801").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector ExcludedIntervalsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189803") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ExcludedIntervalsSequence_
        {
            get { return _dicom.FindAll("00189803").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime ExclusionStartDatetime
        {
            get { return _dicom.FindFirst("00189804") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ExclusionStartDatetime_
        {
            get { return _dicom.FindAll("00189804").Select(d => d as DateTime).ToList(); }
        }

        public FloatingPointDouble ExclusionDuration
        {
            get { return _dicom.FindFirst("00189805") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ExclusionDuration_
        {
            get { return _dicom.FindAll("00189805").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector USImageDescriptionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189806") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> USImageDescriptionSequence_
        {
            get { return _dicom.FindAll("00189806").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImageDataTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189807") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageDataTypeSequence_
        {
            get { return _dicom.FindAll("00189807").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString DataType
        {
            get { return _dicom.FindFirst("00189808") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DataType_
        {
            get { return _dicom.FindAll("00189808").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector TransducerScanPatternCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00189809") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerScanPatternCodeSequence_
        {
            get { return _dicom.FindAll("00189809").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString AliasedDataType
        {
            get { return _dicom.FindFirst("0018980B") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AliasedDataType_
        {
            get { return _dicom.FindAll("0018980B").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PositionMeasuringDeviceUsed
        {
            get { return _dicom.FindFirst("0018980C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PositionMeasuringDeviceUsed_
        {
            get { return _dicom.FindAll("0018980C").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector TransducerGeometryCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0018980D") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerGeometryCodeSequence_
        {
            get { return _dicom.FindAll("0018980D").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TransducerBeamSteeringCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0018980E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerBeamSteeringCodeSequence_
        {
            get { return _dicom.FindAll("0018980E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TransducerApplicationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0018980F") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TransducerApplicationCodeSequence_
        {
            get { return _dicom.FindAll("0018980F").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContributingEquipmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0018A001") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContributingEquipmentSequence_
        {
            get { return _dicom.FindAll("0018A001").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime ContributionDateTime
        {
            get { return _dicom.FindFirst("0018A002") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ContributionDateTime_
        {
            get { return _dicom.FindAll("0018A002").Select(d => d as DateTime).ToList(); }
        }

        public ShortText ContributionDescription
        {
            get { return _dicom.FindFirst("0018A003") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ContributionDescription_
        {
            get { return _dicom.FindAll("0018A003").Select(d => d as ShortText).ToList(); }
        }

        public UniqueIdentifier StudyInstanceUID
        {
            get { return _dicom.FindFirst("0020000D") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> StudyInstanceUID_
        {
            get { return _dicom.FindAll("0020000D").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier SeriesInstanceUID
        {
            get { return _dicom.FindFirst("0020000E") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SeriesInstanceUID_
        {
            get { return _dicom.FindAll("0020000E").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public ShortString StudyID
        {
            get { return _dicom.FindFirst("00200010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> StudyID_
        {
            get { return _dicom.FindAll("00200010").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString SeriesNumber
        {
            get { return _dicom.FindFirst("00200011") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SeriesNumber_
        {
            get { return _dicom.FindAll("00200011").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString AcquisitionNumber
        {
            get { return _dicom.FindFirst("00200012") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AcquisitionNumber_
        {
            get { return _dicom.FindAll("00200012").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString InstanceNumber
        {
            get { return _dicom.FindFirst("00200013") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> InstanceNumber_
        {
            get { return _dicom.FindAll("00200013").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString IsotopeNumberRetired
        {
            get { return _dicom.FindFirst("00200014") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> IsotopeNumberRetired_
        {
            get { return _dicom.FindAll("00200014").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString PhaseNumberRetired
        {
            get { return _dicom.FindFirst("00200015") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PhaseNumberRetired_
        {
            get { return _dicom.FindAll("00200015").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString IntervalNumberRetired
        {
            get { return _dicom.FindFirst("00200016") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> IntervalNumberRetired_
        {
            get { return _dicom.FindAll("00200016").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString TimeSlotNumberRetired
        {
            get { return _dicom.FindFirst("00200017") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TimeSlotNumberRetired_
        {
            get { return _dicom.FindAll("00200017").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString AngleNumberRetired
        {
            get { return _dicom.FindFirst("00200018") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AngleNumberRetired_
        {
            get { return _dicom.FindAll("00200018").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ItemNumber
        {
            get { return _dicom.FindFirst("00200019") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ItemNumber_
        {
            get { return _dicom.FindAll("00200019").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString PatientOrientation
        {
            get { return _dicom.FindFirst("00200020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientOrientation_
        {
            get { return _dicom.FindAll("00200020").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString OverlayNumberRetired
        {
            get { return _dicom.FindFirst("00200022") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> OverlayNumberRetired_
        {
            get { return _dicom.FindAll("00200022").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CurveNumberRetired
        {
            get { return _dicom.FindFirst("00200024") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CurveNumberRetired_
        {
            get { return _dicom.FindAll("00200024").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString LUTNumberRetired
        {
            get { return _dicom.FindFirst("00200026") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> LUTNumberRetired_
        {
            get { return _dicom.FindAll("00200026").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ImagePositionRetired
        {
            get { return _dicom.FindFirst("00200030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImagePositionRetired_
        {
            get { return _dicom.FindAll("00200030").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImagePositionPatient
        {
            get { return _dicom.FindFirst("00200032") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImagePositionPatient_
        {
            get { return _dicom.FindAll("00200032").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImageOrientationRetired
        {
            get { return _dicom.FindFirst("00200035") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageOrientationRetired_
        {
            get { return _dicom.FindAll("00200035").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImageOrientationPatient
        {
            get { return _dicom.FindFirst("00200037") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageOrientationPatient_
        {
            get { return _dicom.FindAll("00200037").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString LocationRetired
        {
            get { return _dicom.FindFirst("00200050") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> LocationRetired_
        {
            get { return _dicom.FindAll("00200050").Select(d => d as DecimalString).ToList(); }
        }

        public UniqueIdentifier FrameOfReferenceUID
        {
            get { return _dicom.FindFirst("00200052") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> FrameOfReferenceUID_
        {
            get { return _dicom.FindAll("00200052").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString Laterality
        {
            get { return _dicom.FindFirst("00200060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Laterality_
        {
            get { return _dicom.FindAll("00200060").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ImageLaterality
        {
            get { return _dicom.FindFirst("00200062") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageLaterality_
        {
            get { return _dicom.FindAll("00200062").Select(d => d as CodeString).ToList(); }
        }

        public LongString ImageGeometryTypeRetired
        {
            get { return _dicom.FindFirst("00200070") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImageGeometryTypeRetired_
        {
            get { return _dicom.FindAll("00200070").Select(d => d as LongString).ToList(); }
        }

        public CodeString MaskingImageRetired
        {
            get { return _dicom.FindFirst("00200080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MaskingImageRetired_
        {
            get { return _dicom.FindAll("00200080").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString ReportNumberRetired
        {
            get { return _dicom.FindFirst("002000AA") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReportNumberRetired_
        {
            get { return _dicom.FindAll("002000AA").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString TemporalPositionIdentifier
        {
            get { return _dicom.FindFirst("00200100") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TemporalPositionIdentifier_
        {
            get { return _dicom.FindAll("00200100").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfTemporalPositions
        {
            get { return _dicom.FindFirst("00200105") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfTemporalPositions_
        {
            get { return _dicom.FindAll("00200105").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString TemporalResolution
        {
            get { return _dicom.FindFirst("00200110") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TemporalResolution_
        {
            get { return _dicom.FindAll("00200110").Select(d => d as DecimalString).ToList(); }
        }

        public UniqueIdentifier SynchronizationFrameOfReferenceUID
        {
            get { return _dicom.FindFirst("00200200") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SynchronizationFrameOfReferenceUID_
        {
            get { return _dicom.FindAll("00200200").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier SOPInstanceUIDOfConcatenationSource
        {
            get { return _dicom.FindFirst("00200242") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SOPInstanceUIDOfConcatenationSource_
        {
            get { return _dicom.FindAll("00200242").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public IntegerString SeriesInStudyRetired
        {
            get { return _dicom.FindFirst("00201000") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SeriesInStudyRetired_
        {
            get { return _dicom.FindAll("00201000").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString AcquisitionsInSeriesRetired
        {
            get { return _dicom.FindFirst("00201001") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AcquisitionsInSeriesRetired_
        {
            get { return _dicom.FindAll("00201001").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ImagesInAcquisition
        {
            get { return _dicom.FindFirst("00201002") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ImagesInAcquisition_
        {
            get { return _dicom.FindAll("00201002").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ImagesInSeriesRetired
        {
            get { return _dicom.FindFirst("00201003") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ImagesInSeriesRetired_
        {
            get { return _dicom.FindAll("00201003").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString AcquisitionsInStudyRetired
        {
            get { return _dicom.FindFirst("00201004") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AcquisitionsInStudyRetired_
        {
            get { return _dicom.FindAll("00201004").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ImagesInStudyRetired
        {
            get { return _dicom.FindFirst("00201005") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ImagesInStudyRetired_
        {
            get { return _dicom.FindAll("00201005").Select(d => d as IntegerString).ToList(); }
        }

        public LongString ReferenceRetired
        {
            get { return _dicom.FindFirst("00201020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReferenceRetired_
        {
            get { return _dicom.FindAll("00201020").Select(d => d as LongString).ToList(); }
        }

        public LongString PositionReferenceIndicator
        {
            get { return _dicom.FindFirst("00201040") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PositionReferenceIndicator_
        {
            get { return _dicom.FindAll("00201040").Select(d => d as LongString).ToList(); }
        }

        public DecimalString SliceLocation
        {
            get { return _dicom.FindFirst("00201041") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SliceLocation_
        {
            get { return _dicom.FindAll("00201041").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString OtherStudyNumbersRetired
        {
            get { return _dicom.FindFirst("00201070") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> OtherStudyNumbersRetired_
        {
            get { return _dicom.FindAll("00201070").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfPatientRelatedStudies
        {
            get { return _dicom.FindFirst("00201200") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfPatientRelatedStudies_
        {
            get { return _dicom.FindAll("00201200").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfPatientRelatedSeries
        {
            get { return _dicom.FindFirst("00201202") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfPatientRelatedSeries_
        {
            get { return _dicom.FindAll("00201202").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfPatientRelatedInstances
        {
            get { return _dicom.FindFirst("00201204") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfPatientRelatedInstances_
        {
            get { return _dicom.FindAll("00201204").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfStudyRelatedSeries
        {
            get { return _dicom.FindFirst("00201206") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfStudyRelatedSeries_
        {
            get { return _dicom.FindAll("00201206").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfStudyRelatedInstances
        {
            get { return _dicom.FindFirst("00201208") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfStudyRelatedInstances_
        {
            get { return _dicom.FindAll("00201208").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfSeriesRelatedInstances
        {
            get { return _dicom.FindFirst("00201209") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfSeriesRelatedInstances_
        {
            get { return _dicom.FindAll("00201209").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString SourceImageIDsRetired
        {
            get { return _dicom.FindFirst("002031xx") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SourceImageIDsRetired_
        {
            get { return _dicom.FindAll("002031xx").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ModifyingDeviceIDRetired
        {
            get { return _dicom.FindFirst("00203401") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ModifyingDeviceIDRetired_
        {
            get { return _dicom.FindAll("00203401").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ModifiedImageIDRetired
        {
            get { return _dicom.FindFirst("00203402") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ModifiedImageIDRetired_
        {
            get { return _dicom.FindAll("00203402").Select(d => d as CodeString).ToList(); }
        }

        public Date ModifiedImageDateRetired
        {
            get { return _dicom.FindFirst("00203403") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ModifiedImageDateRetired_
        {
            get { return _dicom.FindAll("00203403").Select(d => d as Date).ToList(); }
        }

        public LongString ModifyingDeviceManufacturerRetired
        {
            get { return _dicom.FindFirst("00203404") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ModifyingDeviceManufacturerRetired_
        {
            get { return _dicom.FindAll("00203404").Select(d => d as LongString).ToList(); }
        }

        public Time ModifiedImageTimeRetired
        {
            get { return _dicom.FindFirst("00203405") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ModifiedImageTimeRetired_
        {
            get { return _dicom.FindAll("00203405").Select(d => d as Time).ToList(); }
        }

        public LongString ModifiedImageDescriptionRetired
        {
            get { return _dicom.FindFirst("00203406") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ModifiedImageDescriptionRetired_
        {
            get { return _dicom.FindAll("00203406").Select(d => d as LongString).ToList(); }
        }

        public LongText ImageComments
        {
            get { return _dicom.FindFirst("00204000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ImageComments_
        {
            get { return _dicom.FindAll("00204000").Select(d => d as LongText).ToList(); }
        }

        public AttributeTag OriginalImageIdentificationRetired
        {
            get { return _dicom.FindFirst("00205000") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> OriginalImageIdentificationRetired_
        {
            get { return _dicom.FindAll("00205000").Select(d => d as AttributeTag).ToList(); }
        }

        public LongString OriginalImageIdentificationNomenclatureRetired
        {
            get { return _dicom.FindFirst("00205002") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OriginalImageIdentificationNomenclatureRetired_
        {
            get { return _dicom.FindAll("00205002").Select(d => d as LongString).ToList(); }
        }

        public ShortString StackID
        {
            get { return _dicom.FindFirst("00209056") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> StackID_
        {
            get { return _dicom.FindAll("00209056").Select(d => d as ShortString).ToList(); }
        }

        public UnsignedLong InStackPositionNumber
        {
            get { return _dicom.FindFirst("00209057") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> InStackPositionNumber_
        {
            get { return _dicom.FindAll("00209057").Select(d => d as UnsignedLong).ToList(); }
        }

        public SequenceSelector FrameAnatomySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209071") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameAnatomySequence_
        {
            get { return _dicom.FindAll("00209071").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FrameLaterality
        {
            get { return _dicom.FindFirst("00209072") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FrameLaterality_
        {
            get { return _dicom.FindAll("00209072").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector FrameContentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209111") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameContentSequence_
        {
            get { return _dicom.FindAll("00209111").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PlanePositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209113") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlanePositionSequence_
        {
            get { return _dicom.FindAll("00209113").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PlaneOrientationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209116") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlaneOrientationSequence_
        {
            get { return _dicom.FindAll("00209116").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong TemporalPositionIndex
        {
            get { return _dicom.FindFirst("00209128") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TemporalPositionIndex_
        {
            get { return _dicom.FindAll("00209128").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointDouble NominalCardiacTriggerDelayTime
        {
            get { return _dicom.FindFirst("00209153") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> NominalCardiacTriggerDelayTime_
        {
            get { return _dicom.FindAll("00209153").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointSingle NominalCardiacTriggerTimePriorToRPeak
        {
            get { return _dicom.FindFirst("00209154") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> NominalCardiacTriggerTimePriorToRPeak_
        {
            get { return _dicom.FindAll("00209154").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ActualCardiacTriggerTimePriorToRPeak
        {
            get { return _dicom.FindFirst("00209155") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ActualCardiacTriggerTimePriorToRPeak_
        {
            get { return _dicom.FindAll("00209155").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedShort FrameAcquisitionNumber
        {
            get { return _dicom.FindFirst("00209156") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> FrameAcquisitionNumber_
        {
            get { return _dicom.FindAll("00209156").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong DimensionIndexValues
        {
            get { return _dicom.FindFirst("00209157") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> DimensionIndexValues_
        {
            get { return _dicom.FindAll("00209157").Select(d => d as UnsignedLong).ToList(); }
        }

        public LongText FrameComments
        {
            get { return _dicom.FindFirst("00209158") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> FrameComments_
        {
            get { return _dicom.FindAll("00209158").Select(d => d as LongText).ToList(); }
        }

        public UniqueIdentifier ConcatenationUID
        {
            get { return _dicom.FindFirst("00209161") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ConcatenationUID_
        {
            get { return _dicom.FindAll("00209161").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UnsignedShort InConcatenationNumber
        {
            get { return _dicom.FindFirst("00209162") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> InConcatenationNumber_
        {
            get { return _dicom.FindAll("00209162").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort InConcatenationTotalNumber
        {
            get { return _dicom.FindFirst("00209163") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> InConcatenationTotalNumber_
        {
            get { return _dicom.FindAll("00209163").Select(d => d as UnsignedShort).ToList(); }
        }

        public UniqueIdentifier DimensionOrganizationUID
        {
            get { return _dicom.FindFirst("00209164") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> DimensionOrganizationUID_
        {
            get { return _dicom.FindAll("00209164").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public AttributeTag DimensionIndexPointer
        {
            get { return _dicom.FindFirst("00209165") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> DimensionIndexPointer_
        {
            get { return _dicom.FindAll("00209165").Select(d => d as AttributeTag).ToList(); }
        }

        public AttributeTag FunctionalGroupPointer
        {
            get { return _dicom.FindFirst("00209167") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> FunctionalGroupPointer_
        {
            get { return _dicom.FindAll("00209167").Select(d => d as AttributeTag).ToList(); }
        }

        public LongString DimensionIndexPrivateCreator
        {
            get { return _dicom.FindFirst("00209213") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DimensionIndexPrivateCreator_
        {
            get { return _dicom.FindAll("00209213").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector DimensionOrganizationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209221") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DimensionOrganizationSequence_
        {
            get { return _dicom.FindAll("00209221").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector DimensionIndexSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209222") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DimensionIndexSequence_
        {
            get { return _dicom.FindAll("00209222").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong ConcatenationFrameOffsetNumber
        {
            get { return _dicom.FindFirst("00209228") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> ConcatenationFrameOffsetNumber_
        {
            get { return _dicom.FindAll("00209228").Select(d => d as UnsignedLong).ToList(); }
        }

        public LongString FunctionalGroupPrivateCreator
        {
            get { return _dicom.FindFirst("00209238") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FunctionalGroupPrivateCreator_
        {
            get { return _dicom.FindAll("00209238").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle NominalPercentageOfCardiacPhase
        {
            get { return _dicom.FindFirst("00209241") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> NominalPercentageOfCardiacPhase_
        {
            get { return _dicom.FindAll("00209241").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle NominalPercentageOfRespiratoryPhase
        {
            get { return _dicom.FindFirst("00209245") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> NominalPercentageOfRespiratoryPhase_
        {
            get { return _dicom.FindAll("00209245").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle StartingRespiratoryAmplitude
        {
            get { return _dicom.FindFirst("00209246") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StartingRespiratoryAmplitude_
        {
            get { return _dicom.FindAll("00209246").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString StartingRespiratoryPhase
        {
            get { return _dicom.FindFirst("00209247") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> StartingRespiratoryPhase_
        {
            get { return _dicom.FindAll("00209247").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle EndingRespiratoryAmplitude
        {
            get { return _dicom.FindFirst("00209248") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> EndingRespiratoryAmplitude_
        {
            get { return _dicom.FindAll("00209248").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString EndingRespiratoryPhase
        {
            get { return _dicom.FindFirst("00209249") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> EndingRespiratoryPhase_
        {
            get { return _dicom.FindAll("00209249").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RespiratoryTriggerType
        {
            get { return _dicom.FindFirst("00209250") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RespiratoryTriggerType_
        {
            get { return _dicom.FindAll("00209250").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble RRIntervalTimeNominal
        {
            get { return _dicom.FindFirst("00209251") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RRIntervalTimeNominal_
        {
            get { return _dicom.FindAll("00209251").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ActualCardiacTriggerDelayTime
        {
            get { return _dicom.FindFirst("00209252") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ActualCardiacTriggerDelayTime_
        {
            get { return _dicom.FindAll("00209252").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector RespiratorySynchronizationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209253") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RespiratorySynchronizationSequence_
        {
            get { return _dicom.FindAll("00209253").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble RespiratoryIntervalTime
        {
            get { return _dicom.FindFirst("00209254") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RespiratoryIntervalTime_
        {
            get { return _dicom.FindAll("00209254").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble NominalRespiratoryTriggerDelayTime
        {
            get { return _dicom.FindFirst("00209255") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> NominalRespiratoryTriggerDelayTime_
        {
            get { return _dicom.FindAll("00209255").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble RespiratoryTriggerDelayThreshold
        {
            get { return _dicom.FindFirst("00209256") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RespiratoryTriggerDelayThreshold_
        {
            get { return _dicom.FindAll("00209256").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ActualRespiratoryTriggerDelayTime
        {
            get { return _dicom.FindFirst("00209257") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ActualRespiratoryTriggerDelayTime_
        {
            get { return _dicom.FindAll("00209257").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ImagePositionVolume
        {
            get { return _dicom.FindFirst("00209301") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ImagePositionVolume_
        {
            get { return _dicom.FindAll("00209301").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ImageOrientationVolume
        {
            get { return _dicom.FindFirst("00209302") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ImageOrientationVolume_
        {
            get { return _dicom.FindAll("00209302").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString UltrasoundAcquisitionGeometry
        {
            get { return _dicom.FindFirst("00209307") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> UltrasoundAcquisitionGeometry_
        {
            get { return _dicom.FindAll("00209307").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble ApexPosition
        {
            get { return _dicom.FindFirst("00209308") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ApexPosition_
        {
            get { return _dicom.FindAll("00209308").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble VolumeToTransducerMappingMatrix
        {
            get { return _dicom.FindFirst("00209309") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> VolumeToTransducerMappingMatrix_
        {
            get { return _dicom.FindAll("00209309").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble VolumeToTableMappingMatrix
        {
            get { return _dicom.FindFirst("0020930A") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> VolumeToTableMappingMatrix_
        {
            get { return _dicom.FindAll("0020930A").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString PatientFrameOfReferenceSource
        {
            get { return _dicom.FindFirst("0020930C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientFrameOfReferenceSource_
        {
            get { return _dicom.FindAll("0020930C").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble TemporalPositionTimeOffset
        {
            get { return _dicom.FindFirst("0020930D") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TemporalPositionTimeOffset_
        {
            get { return _dicom.FindAll("0020930D").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector PlanePositionVolumeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0020930E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlanePositionVolumeSequence_
        {
            get { return _dicom.FindAll("0020930E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PlaneOrientationVolumeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0020930F") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlaneOrientationVolumeSequence_
        {
            get { return _dicom.FindAll("0020930F").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TemporalPositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209310") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TemporalPositionSequence_
        {
            get { return _dicom.FindAll("00209310").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString DimensionOrganizationType
        {
            get { return _dicom.FindFirst("00209311") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DimensionOrganizationType_
        {
            get { return _dicom.FindAll("00209311").Select(d => d as CodeString).ToList(); }
        }

        public UniqueIdentifier VolumeFrameOfReferenceUID
        {
            get { return _dicom.FindFirst("00209312") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> VolumeFrameOfReferenceUID_
        {
            get { return _dicom.FindAll("00209312").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier TableFrameOfReferenceUID
        {
            get { return _dicom.FindFirst("00209313") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> TableFrameOfReferenceUID_
        {
            get { return _dicom.FindAll("00209313").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public LongString DimensionDescriptionLabel
        {
            get { return _dicom.FindFirst("00209421") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DimensionDescriptionLabel_
        {
            get { return _dicom.FindAll("00209421").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PatientOrientationInFrameSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209450") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientOrientationInFrameSequence_
        {
            get { return _dicom.FindAll("00209450").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString FrameLabel
        {
            get { return _dicom.FindFirst("00209453") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FrameLabel_
        {
            get { return _dicom.FindAll("00209453").Select(d => d as LongString).ToList(); }
        }

        public UnsignedShort AcquisitionIndex
        {
            get { return _dicom.FindFirst("00209518") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AcquisitionIndex_
        {
            get { return _dicom.FindAll("00209518").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ContributingSOPInstancesReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00209529") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContributingSOPInstancesReferenceSequence_
        {
            get { return _dicom.FindAll("00209529").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ReconstructionIndex
        {
            get { return _dicom.FindFirst("00209536") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReconstructionIndex_
        {
            get { return _dicom.FindAll("00209536").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LightPathFilterPassThroughWavelength
        {
            get { return _dicom.FindFirst("00220001") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LightPathFilterPassThroughWavelength_
        {
            get { return _dicom.FindAll("00220001").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LightPathFilterPassBand
        {
            get { return _dicom.FindFirst("00220002") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LightPathFilterPassBand_
        {
            get { return _dicom.FindAll("00220002").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ImagePathFilterPassThroughWavelength
        {
            get { return _dicom.FindFirst("00220003") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImagePathFilterPassThroughWavelength_
        {
            get { return _dicom.FindAll("00220003").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ImagePathFilterPassBand
        {
            get { return _dicom.FindFirst("00220004") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImagePathFilterPassBand_
        {
            get { return _dicom.FindAll("00220004").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString PatientEyeMovementCommanded
        {
            get { return _dicom.FindFirst("00220005") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientEyeMovementCommanded_
        {
            get { return _dicom.FindAll("00220005").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector PatientEyeMovementCommandCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220006") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientEyeMovementCommandCodeSequence_
        {
            get { return _dicom.FindAll("00220006").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle SphericalLensPower
        {
            get { return _dicom.FindFirst("00220007") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SphericalLensPower_
        {
            get { return _dicom.FindAll("00220007").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CylinderLensPower
        {
            get { return _dicom.FindFirst("00220008") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CylinderLensPower_
        {
            get { return _dicom.FindAll("00220008").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CylinderAxis
        {
            get { return _dicom.FindFirst("00220009") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CylinderAxis_
        {
            get { return _dicom.FindAll("00220009").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle EmmetropicMagnification
        {
            get { return _dicom.FindFirst("0022000A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> EmmetropicMagnification_
        {
            get { return _dicom.FindAll("0022000A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle IntraOcularPressure
        {
            get { return _dicom.FindFirst("0022000B") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IntraOcularPressure_
        {
            get { return _dicom.FindAll("0022000B").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle HorizontalFieldOfView
        {
            get { return _dicom.FindFirst("0022000C") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> HorizontalFieldOfView_
        {
            get { return _dicom.FindAll("0022000C").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString PupilDilated
        {
            get { return _dicom.FindFirst("0022000D") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PupilDilated_
        {
            get { return _dicom.FindAll("0022000D").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle DegreeOfDilation
        {
            get { return _dicom.FindFirst("0022000E") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DegreeOfDilation_
        {
            get { return _dicom.FindAll("0022000E").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle StereoBaselineAngle
        {
            get { return _dicom.FindFirst("00220010") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StereoBaselineAngle_
        {
            get { return _dicom.FindAll("00220010").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle StereoBaselineDisplacement
        {
            get { return _dicom.FindFirst("00220011") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StereoBaselineDisplacement_
        {
            get { return _dicom.FindAll("00220011").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle StereoHorizontalPixelOffset
        {
            get { return _dicom.FindFirst("00220012") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StereoHorizontalPixelOffset_
        {
            get { return _dicom.FindAll("00220012").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle StereoVerticalPixelOffset
        {
            get { return _dicom.FindFirst("00220013") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StereoVerticalPixelOffset_
        {
            get { return _dicom.FindAll("00220013").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle StereoRotation
        {
            get { return _dicom.FindFirst("00220014") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StereoRotation_
        {
            get { return _dicom.FindAll("00220014").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector AcquisitionDeviceTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220015") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AcquisitionDeviceTypeCodeSequence_
        {
            get { return _dicom.FindAll("00220015").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IlluminationTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220016") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IlluminationTypeCodeSequence_
        {
            get { return _dicom.FindAll("00220016").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LightPathFilterTypeStackCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220017") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LightPathFilterTypeStackCodeSequence_
        {
            get { return _dicom.FindAll("00220017").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImagePathFilterTypeStackCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220018") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImagePathFilterTypeStackCodeSequence_
        {
            get { return _dicom.FindAll("00220018").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LensesCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220019") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LensesCodeSequence_
        {
            get { return _dicom.FindAll("00220019").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ChannelDescriptionCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0022001A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelDescriptionCodeSequence_
        {
            get { return _dicom.FindAll("0022001A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RefractiveStateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0022001B") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RefractiveStateSequence_
        {
            get { return _dicom.FindAll("0022001B").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MydriaticAgentCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0022001C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MydriaticAgentCodeSequence_
        {
            get { return _dicom.FindAll("0022001C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RelativeImagePositionCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0022001D") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelativeImagePositionCodeSequence_
        {
            get { return _dicom.FindAll("0022001D").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle CameraAngleOfView
        {
            get { return _dicom.FindFirst("0022001E") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CameraAngleOfView_
        {
            get { return _dicom.FindAll("0022001E").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector StereoPairsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> StereoPairsSequence_
        {
            get { return _dicom.FindAll("00220020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LeftImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220021") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LeftImageSequence_
        {
            get { return _dicom.FindAll("00220021").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RightImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220022") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RightImageSequence_
        {
            get { return _dicom.FindAll("00220022").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle AxialLengthOfTheEye
        {
            get { return _dicom.FindFirst("00220030") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AxialLengthOfTheEye_
        {
            get { return _dicom.FindAll("00220030").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector OphthalmicFrameLocationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220031") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicFrameLocationSequence_
        {
            get { return _dicom.FindAll("00220031").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle ReferenceCoordinates
        {
            get { return _dicom.FindFirst("00220032") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ReferenceCoordinates_
        {
            get { return _dicom.FindAll("00220032").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle DepthSpatialResolution
        {
            get { return _dicom.FindFirst("00220035") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DepthSpatialResolution_
        {
            get { return _dicom.FindAll("00220035").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MaximumDepthDistortion
        {
            get { return _dicom.FindFirst("00220036") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MaximumDepthDistortion_
        {
            get { return _dicom.FindAll("00220036").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle AlongScanSpatialResolution
        {
            get { return _dicom.FindFirst("00220037") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AlongScanSpatialResolution_
        {
            get { return _dicom.FindAll("00220037").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MaximumAlongScanDistortion
        {
            get { return _dicom.FindFirst("00220038") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MaximumAlongScanDistortion_
        {
            get { return _dicom.FindAll("00220038").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString OphthalmicImageOrientation
        {
            get { return _dicom.FindFirst("00220039") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OphthalmicImageOrientation_
        {
            get { return _dicom.FindAll("00220039").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle DepthOfTransverseImage
        {
            get { return _dicom.FindFirst("00220041") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DepthOfTransverseImage_
        {
            get { return _dicom.FindAll("00220041").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector MydriaticAgentConcentrationUnitsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220042") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MydriaticAgentConcentrationUnitsSequence_
        {
            get { return _dicom.FindAll("00220042").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle AcrossScanSpatialResolution
        {
            get { return _dicom.FindFirst("00220048") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AcrossScanSpatialResolution_
        {
            get { return _dicom.FindAll("00220048").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MaximumAcrossScanDistortion
        {
            get { return _dicom.FindFirst("00220049") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MaximumAcrossScanDistortion_
        {
            get { return _dicom.FindAll("00220049").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public DecimalString MydriaticAgentConcentration
        {
            get { return _dicom.FindFirst("0022004E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MydriaticAgentConcentration_
        {
            get { return _dicom.FindAll("0022004E").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle IlluminationWaveLength
        {
            get { return _dicom.FindFirst("00220055") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IlluminationWaveLength_
        {
            get { return _dicom.FindAll("00220055").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle IlluminationPower
        {
            get { return _dicom.FindFirst("00220056") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IlluminationPower_
        {
            get { return _dicom.FindAll("00220056").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle IlluminationBandwidth
        {
            get { return _dicom.FindFirst("00220057") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IlluminationBandwidth_
        {
            get { return _dicom.FindAll("00220057").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector MydriaticAgentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00220058") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MydriaticAgentSequence_
        {
            get { return _dicom.FindAll("00220058").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialMeasurementsRightEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221007") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialMeasurementsRightEyeSequence_
        {
            get { return _dicom.FindAll("00221007").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialMeasurementsLeftEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialMeasurementsLeftEyeSequence_
        {
            get { return _dicom.FindAll("00221008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString OphthalmicAxialLengthMeasurementsType
        {
            get { return _dicom.FindFirst("00221010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OphthalmicAxialLengthMeasurementsType_
        {
            get { return _dicom.FindAll("00221010").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle OphthalmicAxialLength
        {
            get { return _dicom.FindFirst("00221019") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> OphthalmicAxialLength_
        {
            get { return _dicom.FindAll("00221019").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector LensStatusCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221024") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LensStatusCodeSequence_
        {
            get { return _dicom.FindAll("00221024").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VitreousStatusCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221025") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VitreousStatusCodeSequence_
        {
            get { return _dicom.FindAll("00221025").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IOLFormulaCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221028") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IOLFormulaCodeSequence_
        {
            get { return _dicom.FindAll("00221028").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString IOLFormulaDetail
        {
            get { return _dicom.FindFirst("00221029") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> IOLFormulaDetail_
        {
            get { return _dicom.FindAll("00221029").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle KeratometerIndex
        {
            get { return _dicom.FindFirst("00221033") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> KeratometerIndex_
        {
            get { return _dicom.FindAll("00221033").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector SourceOfOphthalmicAxialLengthCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221035") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceOfOphthalmicAxialLengthCodeSequence_
        {
            get { return _dicom.FindAll("00221035").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle TargetRefraction
        {
            get { return _dicom.FindFirst("00221037") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TargetRefraction_
        {
            get { return _dicom.FindAll("00221037").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString RefractiveProcedureOccurred
        {
            get { return _dicom.FindFirst("00221039") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RefractiveProcedureOccurred_
        {
            get { return _dicom.FindAll("00221039").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector RefractiveSurgeryTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RefractiveSurgeryTypeCodeSequence_
        {
            get { return _dicom.FindAll("00221040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicUltrasoundAxialMeasurementsTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221044") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicUltrasoundAxialMeasurementsTypeCodeSequence_
        {
            get { return _dicom.FindAll("00221044").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthMeasurementsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthMeasurementsSequence_
        {
            get { return _dicom.FindAll("00221050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle IOLPower
        {
            get { return _dicom.FindFirst("00221053") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IOLPower_
        {
            get { return _dicom.FindAll("00221053").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PredictedRefractiveError
        {
            get { return _dicom.FindFirst("00221054") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PredictedRefractiveError_
        {
            get { return _dicom.FindAll("00221054").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle OphthalmicAxialLengthVelocity
        {
            get { return _dicom.FindFirst("00221059") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> OphthalmicAxialLengthVelocity_
        {
            get { return _dicom.FindAll("00221059").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongString LensStatusDescription
        {
            get { return _dicom.FindFirst("00221065") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> LensStatusDescription_
        {
            get { return _dicom.FindAll("00221065").Select(d => d as LongString).ToList(); }
        }

        public LongString VitreousStatusDescription
        {
            get { return _dicom.FindFirst("00221066") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> VitreousStatusDescription_
        {
            get { return _dicom.FindAll("00221066").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector IOLPowerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221090") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IOLPowerSequence_
        {
            get { return _dicom.FindAll("00221090").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LensConstantSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221092") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LensConstantSequence_
        {
            get { return _dicom.FindAll("00221092").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString IOLManufacturer
        {
            get { return _dicom.FindFirst("00221093") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> IOLManufacturer_
        {
            get { return _dicom.FindAll("00221093").Select(d => d as LongString).ToList(); }
        }

        public LongString LensConstantDescription
        {
            get { return _dicom.FindFirst("00221094") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> LensConstantDescription_
        {
            get { return _dicom.FindAll("00221094").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector KeratometryMeasurementTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221096") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> KeratometryMeasurementTypeCodeSequence_
        {
            get { return _dicom.FindAll("00221096").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedOphthalmicAxialMeasurementsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedOphthalmicAxialMeasurementsSequence_
        {
            get { return _dicom.FindAll("00221100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221101") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence_
        {
            get { return _dicom.FindAll("00221101").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RefractiveErrorBeforeRefractiveSurgeryCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221103") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RefractiveErrorBeforeRefractiveSurgeryCodeSequence_
        {
            get { return _dicom.FindAll("00221103").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle IOLPowerForExactEmmetropia
        {
            get { return _dicom.FindFirst("00221121") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IOLPowerForExactEmmetropia_
        {
            get { return _dicom.FindAll("00221121").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle IOLPowerForExactTargetRefraction
        {
            get { return _dicom.FindFirst("00221122") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IOLPowerForExactTargetRefraction_
        {
            get { return _dicom.FindAll("00221122").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector AnteriorChamberDepthDefinitionCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221125") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnteriorChamberDepthDefinitionCodeSequence_
        {
            get { return _dicom.FindAll("00221125").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle LensThickness
        {
            get { return _dicom.FindFirst("00221130") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> LensThickness_
        {
            get { return _dicom.FindAll("00221130").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle AnteriorChamberDepth
        {
            get { return _dicom.FindFirst("00221131") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AnteriorChamberDepth_
        {
            get { return _dicom.FindAll("00221131").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector SourceOfLensThicknessDataCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221132") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceOfLensThicknessDataCodeSequence_
        {
            get { return _dicom.FindAll("00221132").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SourceOfAnteriorChamberDepthDataCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221133") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceOfAnteriorChamberDepthDataCodeSequence_
        {
            get { return _dicom.FindAll("00221133").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SourceOfRefractiveErrorDataCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221135") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceOfRefractiveErrorDataCodeSequence_
        {
            get { return _dicom.FindAll("00221135").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString OphthalmicAxialLengthMeasurementModified
        {
            get { return _dicom.FindFirst("00221140") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OphthalmicAxialLengthMeasurementModified_
        {
            get { return _dicom.FindAll("00221140").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthDataSourceCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221150") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthDataSourceCodeSequence_
        {
            get { return _dicom.FindAll("00221150").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthAcquisitionMethodCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221153") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthAcquisitionMethodCodeSequence_
        {
            get { return _dicom.FindAll("00221153").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle SignalToNoiseRatio
        {
            get { return _dicom.FindFirst("00221155") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SignalToNoiseRatio_
        {
            get { return _dicom.FindAll("00221155").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongString OphthalmicAxialLengthDataSourceDescription
        {
            get { return _dicom.FindFirst("00221159") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OphthalmicAxialLengthDataSourceDescription_
        {
            get { return _dicom.FindAll("00221159").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthMeasurementsTotalLengthSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221210") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthMeasurementsTotalLengthSequence_
        {
            get { return _dicom.FindAll("00221210").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthMeasurementsSegmentalLengthSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221211") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthMeasurementsSegmentalLengthSequence_
        {
            get { return _dicom.FindAll("00221211").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthMeasurementsLengthSummationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221212") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthMeasurementsLengthSummationSequence_
        {
            get { return _dicom.FindAll("00221212").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector UltrasoundOphthalmicAxialLengthMeasurementsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> UltrasoundOphthalmicAxialLengthMeasurementsSequence_
        {
            get { return _dicom.FindAll("00221220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OpticalOphthalmicAxialLengthMeasurementsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221225") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OpticalOphthalmicAxialLengthMeasurementsSequence_
        {
            get { return _dicom.FindAll("00221225").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector UltrasoundSelectedOphthalmicAxialLengthSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221230") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> UltrasoundSelectedOphthalmicAxialLengthSequence_
        {
            get { return _dicom.FindAll("00221230").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthSelectionMethodCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221250") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthSelectionMethodCodeSequence_
        {
            get { return _dicom.FindAll("00221250").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OpticalSelectedOphthalmicAxialLengthSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221255") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OpticalSelectedOphthalmicAxialLengthSequence_
        {
            get { return _dicom.FindAll("00221255").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SelectedSegmentalOphthalmicAxialLengthSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221257") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SelectedSegmentalOphthalmicAxialLengthSequence_
        {
            get { return _dicom.FindAll("00221257").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SelectedTotalOphthalmicAxialLengthSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221260") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SelectedTotalOphthalmicAxialLengthSequence_
        {
            get { return _dicom.FindAll("00221260").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicAxialLengthQualityMetricSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221262") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicAxialLengthQualityMetricSequence_
        {
            get { return _dicom.FindAll("00221262").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString OphthalmicAxialLengthQualityMetricTypeDescription
        {
            get { return _dicom.FindFirst("00221273") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OphthalmicAxialLengthQualityMetricTypeDescription_
        {
            get { return _dicom.FindAll("00221273").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector IntraocularLensCalculationsRightEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221300") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IntraocularLensCalculationsRightEyeSequence_
        {
            get { return _dicom.FindAll("00221300").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IntraocularLensCalculationsLeftEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221310") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IntraocularLensCalculationsLeftEyeSequence_
        {
            get { return _dicom.FindAll("00221310").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedOphthalmicAxialLengthMeasurementQCImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00221330") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedOphthalmicAxialLengthMeasurementQCImageSequence_
        {
            get { return _dicom.FindAll("00221330").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle VisualFieldHorizontalExtent
        {
            get { return _dicom.FindFirst("00240010") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VisualFieldHorizontalExtent_
        {
            get { return _dicom.FindAll("00240010").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle VisualFieldVerticalExtent
        {
            get { return _dicom.FindFirst("00240011") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VisualFieldVerticalExtent_
        {
            get { return _dicom.FindAll("00240011").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString VisualFieldShape
        {
            get { return _dicom.FindFirst("00240012") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VisualFieldShape_
        {
            get { return _dicom.FindAll("00240012").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ScreeningTestModeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240016") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScreeningTestModeCodeSequence_
        {
            get { return _dicom.FindAll("00240016").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle MaximumStimulusLuminance
        {
            get { return _dicom.FindFirst("00240018") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MaximumStimulusLuminance_
        {
            get { return _dicom.FindAll("00240018").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BackgroundLuminance
        {
            get { return _dicom.FindFirst("00240020") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BackgroundLuminance_
        {
            get { return _dicom.FindAll("00240020").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector StimulusColorCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240021") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> StimulusColorCodeSequence_
        {
            get { return _dicom.FindAll("00240021").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector BackgroundIlluminationColorCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240024") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BackgroundIlluminationColorCodeSequence_
        {
            get { return _dicom.FindAll("00240024").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle StimulusArea
        {
            get { return _dicom.FindFirst("00240025") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StimulusArea_
        {
            get { return _dicom.FindAll("00240025").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle StimulusPresentationTime
        {
            get { return _dicom.FindFirst("00240028") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> StimulusPresentationTime_
        {
            get { return _dicom.FindAll("00240028").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector FixationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240032") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FixationSequence_
        {
            get { return _dicom.FindAll("00240032").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FixationMonitoringCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240033") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FixationMonitoringCodeSequence_
        {
            get { return _dicom.FindAll("00240033").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VisualFieldCatchTrialSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240034") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualFieldCatchTrialSequence_
        {
            get { return _dicom.FindAll("00240034").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort FixationCheckedQuantity
        {
            get { return _dicom.FindFirst("00240035") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> FixationCheckedQuantity_
        {
            get { return _dicom.FindAll("00240035").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PatientNotProperlyFixatedQuantity
        {
            get { return _dicom.FindFirst("00240036") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PatientNotProperlyFixatedQuantity_
        {
            get { return _dicom.FindAll("00240036").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString PresentedVisualStimuliDataFlag
        {
            get { return _dicom.FindFirst("00240037") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PresentedVisualStimuliDataFlag_
        {
            get { return _dicom.FindAll("00240037").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfVisualStimuli
        {
            get { return _dicom.FindFirst("00240038") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfVisualStimuli_
        {
            get { return _dicom.FindAll("00240038").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ExcessiveFixationLossesDataFlag
        {
            get { return _dicom.FindFirst("00240039") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExcessiveFixationLossesDataFlag_
        {
            get { return _dicom.FindAll("00240039").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ExcessiveFixationLosses
        {
            get { return _dicom.FindFirst("00240040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExcessiveFixationLosses_
        {
            get { return _dicom.FindAll("00240040").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort StimuliRetestingQuantity
        {
            get { return _dicom.FindFirst("00240042") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> StimuliRetestingQuantity_
        {
            get { return _dicom.FindAll("00240042").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongText CommentsOnPatientPerformanceOfVisualField
        {
            get { return _dicom.FindFirst("00240044") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> CommentsOnPatientPerformanceOfVisualField_
        {
            get { return _dicom.FindAll("00240044").Select(d => d as LongText).ToList(); }
        }

        public CodeString FalseNegativesEstimateFlag
        {
            get { return _dicom.FindFirst("00240045") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FalseNegativesEstimateFlag_
        {
            get { return _dicom.FindAll("00240045").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle FalseNegativesEstimate
        {
            get { return _dicom.FindFirst("00240046") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FalseNegativesEstimate_
        {
            get { return _dicom.FindAll("00240046").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedShort NegativeCatchTrialsQuantity
        {
            get { return _dicom.FindFirst("00240048") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NegativeCatchTrialsQuantity_
        {
            get { return _dicom.FindAll("00240048").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort FalseNegativesQuantity
        {
            get { return _dicom.FindFirst("00240050") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> FalseNegativesQuantity_
        {
            get { return _dicom.FindAll("00240050").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ExcessiveFalseNegativesDataFlag
        {
            get { return _dicom.FindFirst("00240051") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExcessiveFalseNegativesDataFlag_
        {
            get { return _dicom.FindAll("00240051").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ExcessiveFalseNegatives
        {
            get { return _dicom.FindFirst("00240052") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExcessiveFalseNegatives_
        {
            get { return _dicom.FindAll("00240052").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FalsePositivesEstimateFlag
        {
            get { return _dicom.FindFirst("00240053") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FalsePositivesEstimateFlag_
        {
            get { return _dicom.FindAll("00240053").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle FalsePositivesEstimate
        {
            get { return _dicom.FindFirst("00240054") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FalsePositivesEstimate_
        {
            get { return _dicom.FindAll("00240054").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString CatchTrialsDataFlag
        {
            get { return _dicom.FindFirst("00240055") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CatchTrialsDataFlag_
        {
            get { return _dicom.FindAll("00240055").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort PositiveCatchTrialsQuantity
        {
            get { return _dicom.FindFirst("00240056") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PositiveCatchTrialsQuantity_
        {
            get { return _dicom.FindAll("00240056").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString TestPointNormalsDataFlag
        {
            get { return _dicom.FindFirst("00240057") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TestPointNormalsDataFlag_
        {
            get { return _dicom.FindAll("00240057").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector TestPointNormalsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240058") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TestPointNormalsSequence_
        {
            get { return _dicom.FindAll("00240058").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString GlobalDeviationProbabilityNormalsFlag
        {
            get { return _dicom.FindFirst("00240059") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GlobalDeviationProbabilityNormalsFlag_
        {
            get { return _dicom.FindAll("00240059").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort FalsePositivesQuantity
        {
            get { return _dicom.FindFirst("00240060") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> FalsePositivesQuantity_
        {
            get { return _dicom.FindAll("00240060").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ExcessiveFalsePositivesDataFlag
        {
            get { return _dicom.FindFirst("00240061") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExcessiveFalsePositivesDataFlag_
        {
            get { return _dicom.FindAll("00240061").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ExcessiveFalsePositives
        {
            get { return _dicom.FindFirst("00240062") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExcessiveFalsePositives_
        {
            get { return _dicom.FindAll("00240062").Select(d => d as CodeString).ToList(); }
        }

        public CodeString VisualFieldTestNormalsFlag
        {
            get { return _dicom.FindFirst("00240063") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VisualFieldTestNormalsFlag_
        {
            get { return _dicom.FindAll("00240063").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ResultsNormalsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240064") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ResultsNormalsSequence_
        {
            get { return _dicom.FindAll("00240064").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AgeCorrectedSensitivityDeviationAlgorithmSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240065") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AgeCorrectedSensitivityDeviationAlgorithmSequence_
        {
            get { return _dicom.FindAll("00240065").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle GlobalDeviationFromNormal
        {
            get { return _dicom.FindFirst("00240066") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GlobalDeviationFromNormal_
        {
            get { return _dicom.FindAll("00240066").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector GeneralizedDefectSensitivityDeviationAlgorithmSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240067") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GeneralizedDefectSensitivityDeviationAlgorithmSequence_
        {
            get { return _dicom.FindAll("00240067").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle LocalizedDeviationfromNormal
        {
            get { return _dicom.FindFirst("00240068") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> LocalizedDeviationfromNormal_
        {
            get { return _dicom.FindAll("00240068").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongString PatientReliabilityIndicator
        {
            get { return _dicom.FindFirst("00240069") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientReliabilityIndicator_
        {
            get { return _dicom.FindAll("00240069").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle VisualFieldMeanSensitivity
        {
            get { return _dicom.FindFirst("00240070") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VisualFieldMeanSensitivity_
        {
            get { return _dicom.FindAll("00240070").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle GlobalDeviationProbability
        {
            get { return _dicom.FindFirst("00240071") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GlobalDeviationProbability_
        {
            get { return _dicom.FindAll("00240071").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString LocalDeviationProbabilityNormalsFlag
        {
            get { return _dicom.FindFirst("00240072") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LocalDeviationProbabilityNormalsFlag_
        {
            get { return _dicom.FindAll("00240072").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle LocalizedDeviationProbability
        {
            get { return _dicom.FindFirst("00240073") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> LocalizedDeviationProbability_
        {
            get { return _dicom.FindAll("00240073").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString ShortTermFluctuationCalculated
        {
            get { return _dicom.FindFirst("00240074") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShortTermFluctuationCalculated_
        {
            get { return _dicom.FindAll("00240074").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle ShortTermFluctuation
        {
            get { return _dicom.FindFirst("00240075") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ShortTermFluctuation_
        {
            get { return _dicom.FindAll("00240075").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString ShortTermFluctuationProbabilityCalculated
        {
            get { return _dicom.FindFirst("00240076") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShortTermFluctuationProbabilityCalculated_
        {
            get { return _dicom.FindAll("00240076").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle ShortTermFluctuationProbability
        {
            get { return _dicom.FindFirst("00240077") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ShortTermFluctuationProbability_
        {
            get { return _dicom.FindAll("00240077").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString CorrectedLocalizedDeviationFromNormalCalculated
        {
            get { return _dicom.FindFirst("00240078") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CorrectedLocalizedDeviationFromNormalCalculated_
        {
            get { return _dicom.FindAll("00240078").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle CorrectedLocalizedDeviationFromNormal
        {
            get { return _dicom.FindFirst("00240079") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CorrectedLocalizedDeviationFromNormal_
        {
            get { return _dicom.FindAll("00240079").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString CorrectedLocalizedDeviationFromNormalProbabilityCalculated
        {
            get { return _dicom.FindFirst("00240080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CorrectedLocalizedDeviationFromNormalProbabilityCalculated_
        {
            get { return _dicom.FindAll("00240080").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle CorrectedLocalizedDeviationFromNormalProbability
        {
            get { return _dicom.FindFirst("00240081") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CorrectedLocalizedDeviationFromNormalProbability_
        {
            get { return _dicom.FindAll("00240081").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector GlobalDeviationProbabilitySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240083") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GlobalDeviationProbabilitySequence_
        {
            get { return _dicom.FindAll("00240083").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LocalizedDeviationProbabilitySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240085") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LocalizedDeviationProbabilitySequence_
        {
            get { return _dicom.FindAll("00240085").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FovealSensitivityMeasured
        {
            get { return _dicom.FindFirst("00240086") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FovealSensitivityMeasured_
        {
            get { return _dicom.FindAll("00240086").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle FovealSensitivity
        {
            get { return _dicom.FindFirst("00240087") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FovealSensitivity_
        {
            get { return _dicom.FindAll("00240087").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle VisualFieldTestDuration
        {
            get { return _dicom.FindFirst("00240088") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VisualFieldTestDuration_
        {
            get { return _dicom.FindAll("00240088").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector VisualFieldTestPointSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240089") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualFieldTestPointSequence_
        {
            get { return _dicom.FindAll("00240089").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle VisualFieldTestPointXCoordinate
        {
            get { return _dicom.FindFirst("00240090") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VisualFieldTestPointXCoordinate_
        {
            get { return _dicom.FindAll("00240090").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle VisualFieldTestPointYCoordinate
        {
            get { return _dicom.FindFirst("00240091") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VisualFieldTestPointYCoordinate_
        {
            get { return _dicom.FindAll("00240091").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle AgeCorrectedSensitivityDeviationValue
        {
            get { return _dicom.FindFirst("00240092") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AgeCorrectedSensitivityDeviationValue_
        {
            get { return _dicom.FindAll("00240092").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString StimulusResults
        {
            get { return _dicom.FindFirst("00240093") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> StimulusResults_
        {
            get { return _dicom.FindAll("00240093").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle SensitivityValue
        {
            get { return _dicom.FindFirst("00240094") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SensitivityValue_
        {
            get { return _dicom.FindAll("00240094").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString RetestStimulusSeen
        {
            get { return _dicom.FindFirst("00240095") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RetestStimulusSeen_
        {
            get { return _dicom.FindAll("00240095").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle RetestSensitivityValue
        {
            get { return _dicom.FindFirst("00240096") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RetestSensitivityValue_
        {
            get { return _dicom.FindAll("00240096").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector VisualFieldTestPointNormalsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240097") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualFieldTestPointNormalsSequence_
        {
            get { return _dicom.FindAll("00240097").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle QuantifiedDefect
        {
            get { return _dicom.FindFirst("00240098") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> QuantifiedDefect_
        {
            get { return _dicom.FindAll("00240098").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle AgeCorrectedSensitivityDeviationProbabilityValue
        {
            get { return _dicom.FindFirst("00240100") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AgeCorrectedSensitivityDeviationProbabilityValue_
        {
            get { return _dicom.FindAll("00240100").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString GeneralizedDefectCorrectedSensitivityDeviationFlag
        {
            get { return _dicom.FindFirst("00240102") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GeneralizedDefectCorrectedSensitivityDeviationFlag_
        {
            get { return _dicom.FindAll("00240102").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle GeneralizedDefectCorrectedSensitivityDeviationValue
        {
            get { return _dicom.FindFirst("00240103") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GeneralizedDefectCorrectedSensitivityDeviationValue_
        {
            get { return _dicom.FindAll("00240103").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue
        {
            get { return _dicom.FindFirst("00240104") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue_
        {
            get { return _dicom.FindAll("00240104").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MinimumSensitivityValue
        {
            get { return _dicom.FindFirst("00240105") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MinimumSensitivityValue_
        {
            get { return _dicom.FindAll("00240105").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString BlindSpotLocalized
        {
            get { return _dicom.FindFirst("00240106") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlindSpotLocalized_
        {
            get { return _dicom.FindAll("00240106").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle BlindSpotXCoordinate
        {
            get { return _dicom.FindFirst("00240107") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BlindSpotXCoordinate_
        {
            get { return _dicom.FindAll("00240107").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BlindSpotYCoordinate
        {
            get { return _dicom.FindFirst("00240108") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BlindSpotYCoordinate_
        {
            get { return _dicom.FindAll("00240108").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector VisualAcuityMeasurementSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualAcuityMeasurementSequence_
        {
            get { return _dicom.FindAll("00240110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RefractiveParametersUsedOnPatientSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240112") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RefractiveParametersUsedOnPatientSequence_
        {
            get { return _dicom.FindAll("00240112").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString MeasurementLaterality
        {
            get { return _dicom.FindFirst("00240113") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MeasurementLaterality_
        {
            get { return _dicom.FindAll("00240113").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector OphthalmicPatientClinicalInformationLeftEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240114") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicPatientClinicalInformationLeftEyeSequence_
        {
            get { return _dicom.FindAll("00240114").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OphthalmicPatientClinicalInformationRightEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240115") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OphthalmicPatientClinicalInformationRightEyeSequence_
        {
            get { return _dicom.FindAll("00240115").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FovealPointNormativeDataFlag
        {
            get { return _dicom.FindFirst("00240117") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FovealPointNormativeDataFlag_
        {
            get { return _dicom.FindAll("00240117").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle FovealPointProbabilityValue
        {
            get { return _dicom.FindFirst("00240118") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FovealPointProbabilityValue_
        {
            get { return _dicom.FindAll("00240118").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString ScreeningBaselineMeasured
        {
            get { return _dicom.FindFirst("00240120") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScreeningBaselineMeasured_
        {
            get { return _dicom.FindAll("00240120").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ScreeningBaselineMeasuredSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240122") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScreeningBaselineMeasuredSequence_
        {
            get { return _dicom.FindAll("00240122").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ScreeningBaselineType
        {
            get { return _dicom.FindFirst("00240124") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScreeningBaselineType_
        {
            get { return _dicom.FindAll("00240124").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle ScreeningBaselineValue
        {
            get { return _dicom.FindFirst("00240126") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ScreeningBaselineValue_
        {
            get { return _dicom.FindAll("00240126").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongString AlgorithmSource
        {
            get { return _dicom.FindFirst("00240202") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AlgorithmSource_
        {
            get { return _dicom.FindAll("00240202").Select(d => d as LongString).ToList(); }
        }

        public LongString DataSetName
        {
            get { return _dicom.FindFirst("00240306") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DataSetName_
        {
            get { return _dicom.FindAll("00240306").Select(d => d as LongString).ToList(); }
        }

        public LongString DataSetVersion
        {
            get { return _dicom.FindFirst("00240307") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DataSetVersion_
        {
            get { return _dicom.FindAll("00240307").Select(d => d as LongString).ToList(); }
        }

        public LongString DataSetSource
        {
            get { return _dicom.FindFirst("00240308") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DataSetSource_
        {
            get { return _dicom.FindAll("00240308").Select(d => d as LongString).ToList(); }
        }

        public LongString DataSetDescription
        {
            get { return _dicom.FindFirst("00240309") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DataSetDescription_
        {
            get { return _dicom.FindAll("00240309").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector VisualFieldTestReliabilityGlobalIndexSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240317") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualFieldTestReliabilityGlobalIndexSequence_
        {
            get { return _dicom.FindAll("00240317").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VisualFieldGlobalResultsIndexSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240320") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualFieldGlobalResultsIndexSequence_
        {
            get { return _dicom.FindAll("00240320").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector DataObservationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240325") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DataObservationSequence_
        {
            get { return _dicom.FindAll("00240325").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString IndexNormalsFlag
        {
            get { return _dicom.FindFirst("00240338") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IndexNormalsFlag_
        {
            get { return _dicom.FindAll("00240338").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle IndexProbability
        {
            get { return _dicom.FindFirst("00240341") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IndexProbability_
        {
            get { return _dicom.FindAll("00240341").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector IndexProbabilitySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00240344") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IndexProbabilitySequence_
        {
            get { return _dicom.FindAll("00240344").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort SamplesPerPixel
        {
            get { return _dicom.FindFirst("00280002") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SamplesPerPixel_
        {
            get { return _dicom.FindAll("00280002").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort SamplesPerPixelUsed
        {
            get { return _dicom.FindFirst("00280003") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SamplesPerPixelUsed_
        {
            get { return _dicom.FindAll("00280003").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString PhotometricInterpretation
        {
            get { return _dicom.FindFirst("00280004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PhotometricInterpretation_
        {
            get { return _dicom.FindAll("00280004").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort ImageDimensionsRetired
        {
            get { return _dicom.FindFirst("00280005") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageDimensionsRetired_
        {
            get { return _dicom.FindAll("00280005").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PlanarConfiguration
        {
            get { return _dicom.FindFirst("00280006") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PlanarConfiguration_
        {
            get { return _dicom.FindAll("00280006").Select(d => d as UnsignedShort).ToList(); }
        }

        public IntegerString NumberOfFrames
        {
            get { return _dicom.FindFirst("00280008") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfFrames_
        {
            get { return _dicom.FindAll("00280008").Select(d => d as IntegerString).ToList(); }
        }

        public AttributeTag FrameIncrementPointer
        {
            get { return _dicom.FindFirst("00280009") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> FrameIncrementPointer_
        {
            get { return _dicom.FindAll("00280009").Select(d => d as AttributeTag).ToList(); }
        }

        public AttributeTag FrameDimensionPointer
        {
            get { return _dicom.FindFirst("0028000A") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> FrameDimensionPointer_
        {
            get { return _dicom.FindAll("0028000A").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort Rows
        {
            get { return _dicom.FindFirst("00280010") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Rows_
        {
            get { return _dicom.FindAll("00280010").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort Columns
        {
            get { return _dicom.FindFirst("00280011") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Columns_
        {
            get { return _dicom.FindAll("00280011").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PlanesRetired
        {
            get { return _dicom.FindFirst("00280012") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PlanesRetired_
        {
            get { return _dicom.FindAll("00280012").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort UltrasoundColorDataPresent
        {
            get { return _dicom.FindFirst("00280014") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> UltrasoundColorDataPresent_
        {
            get { return _dicom.FindAll("00280014").Select(d => d as UnsignedShort).ToList(); }
        }

        public DecimalString PixelSpacing
        {
            get { return _dicom.FindFirst("00280030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PixelSpacing_
        {
            get { return _dicom.FindAll("00280030").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ZoomFactor
        {
            get { return _dicom.FindFirst("00280031") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ZoomFactor_
        {
            get { return _dicom.FindAll("00280031").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ZoomCenter
        {
            get { return _dicom.FindFirst("00280032") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ZoomCenter_
        {
            get { return _dicom.FindAll("00280032").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString PixelAspectRatio
        {
            get { return _dicom.FindFirst("00280034") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PixelAspectRatio_
        {
            get { return _dicom.FindAll("00280034").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString ImageFormatRetired
        {
            get { return _dicom.FindFirst("00280040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageFormatRetired_
        {
            get { return _dicom.FindAll("00280040").Select(d => d as CodeString).ToList(); }
        }

        public LongString ManipulatedImageRetired
        {
            get { return _dicom.FindFirst("00280050") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ManipulatedImageRetired_
        {
            get { return _dicom.FindAll("00280050").Select(d => d as LongString).ToList(); }
        }

        public CodeString CorrectedImage
        {
            get { return _dicom.FindFirst("00280051") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CorrectedImage_
        {
            get { return _dicom.FindAll("00280051").Select(d => d as CodeString).ToList(); }
        }

        public LongString CompressionRecognitionCodeRetired
        {
            get { return _dicom.FindFirst("0028005F") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CompressionRecognitionCodeRetired_
        {
            get { return _dicom.FindAll("0028005F").Select(d => d as LongString).ToList(); }
        }

        public CodeString CompressionCodeRetired
        {
            get { return _dicom.FindFirst("00280060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompressionCodeRetired_
        {
            get { return _dicom.FindAll("00280060").Select(d => d as CodeString).ToList(); }
        }

        public ShortString CompressionOriginatorRetired
        {
            get { return _dicom.FindFirst("00280061") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CompressionOriginatorRetired_
        {
            get { return _dicom.FindAll("00280061").Select(d => d as ShortString).ToList(); }
        }

        public LongString CompressionLabelRetired
        {
            get { return _dicom.FindFirst("00280062") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CompressionLabelRetired_
        {
            get { return _dicom.FindAll("00280062").Select(d => d as LongString).ToList(); }
        }

        public ShortString CompressionDescriptionRetired
        {
            get { return _dicom.FindFirst("00280063") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CompressionDescriptionRetired_
        {
            get { return _dicom.FindAll("00280063").Select(d => d as ShortString).ToList(); }
        }

        public CodeString CompressionSequenceRetired
        {
            get { return _dicom.FindFirst("00280065") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompressionSequenceRetired_
        {
            get { return _dicom.FindAll("00280065").Select(d => d as CodeString).ToList(); }
        }

        public AttributeTag CompressionStepPointersRetired
        {
            get { return _dicom.FindFirst("00280066") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> CompressionStepPointersRetired_
        {
            get { return _dicom.FindAll("00280066").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort RepeatIntervalRetired
        {
            get { return _dicom.FindFirst("00280068") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RepeatIntervalRetired_
        {
            get { return _dicom.FindAll("00280068").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort BitsGroupedRetired
        {
            get { return _dicom.FindFirst("00280069") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BitsGroupedRetired_
        {
            get { return _dicom.FindAll("00280069").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PerimeterTableRetired
        {
            get { return _dicom.FindFirst("00280070") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PerimeterTableRetired_
        {
            get { return _dicom.FindAll("00280070").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PerimeterValueRetired
        {
            get { return _dicom.FindFirst("00280071") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PerimeterValueRetired_
        {
            get { return _dicom.FindAll("00280071").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PredictorRowsRetired
        {
            get { return _dicom.FindFirst("00280080") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PredictorRowsRetired_
        {
            get { return _dicom.FindAll("00280080").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PredictorColumnsRetired
        {
            get { return _dicom.FindFirst("00280081") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PredictorColumnsRetired_
        {
            get { return _dicom.FindAll("00280081").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PredictorConstantsRetired
        {
            get { return _dicom.FindFirst("00280082") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PredictorConstantsRetired_
        {
            get { return _dicom.FindAll("00280082").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString BlockedPixelsRetired
        {
            get { return _dicom.FindFirst("00280090") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlockedPixelsRetired_
        {
            get { return _dicom.FindAll("00280090").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort BlockRowsRetired
        {
            get { return _dicom.FindFirst("00280091") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BlockRowsRetired_
        {
            get { return _dicom.FindAll("00280091").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort BlockColumnsRetired
        {
            get { return _dicom.FindFirst("00280092") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BlockColumnsRetired_
        {
            get { return _dicom.FindAll("00280092").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RowOverlapRetired
        {
            get { return _dicom.FindFirst("00280093") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RowOverlapRetired_
        {
            get { return _dicom.FindAll("00280093").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ColumnOverlapRetired
        {
            get { return _dicom.FindFirst("00280094") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ColumnOverlapRetired_
        {
            get { return _dicom.FindAll("00280094").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort BitsAllocated
        {
            get { return _dicom.FindFirst("00280100") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BitsAllocated_
        {
            get { return _dicom.FindAll("00280100").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort BitsStored
        {
            get { return _dicom.FindFirst("00280101") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BitsStored_
        {
            get { return _dicom.FindAll("00280101").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort HighBit
        {
            get { return _dicom.FindFirst("00280102") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HighBit_
        {
            get { return _dicom.FindAll("00280102").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PixelRepresentation
        {
            get { return _dicom.FindFirst("00280103") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PixelRepresentation_
        {
            get { return _dicom.FindAll("00280103").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort SmallestValidPixelValueRetired
        {
            get { return _dicom.FindFirst("00280104") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SmallestValidPixelValueRetired_
        {
            get { return _dicom.FindAll("00280104").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LargestValidPixelValueRetired
        {
            get { return _dicom.FindFirst("00280105") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargestValidPixelValueRetired_
        {
            get { return _dicom.FindAll("00280105").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort SmallestImagePixelValue
        {
            get { return _dicom.FindFirst("00280106") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SmallestImagePixelValue_
        {
            get { return _dicom.FindAll("00280106").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LargestImagePixelValue
        {
            get { return _dicom.FindFirst("00280107") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargestImagePixelValue_
        {
            get { return _dicom.FindAll("00280107").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort SmallestPixelValueInSeries
        {
            get { return _dicom.FindFirst("00280108") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SmallestPixelValueInSeries_
        {
            get { return _dicom.FindAll("00280108").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LargestPixelValueInSeries
        {
            get { return _dicom.FindFirst("00280109") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargestPixelValueInSeries_
        {
            get { return _dicom.FindAll("00280109").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort SmallestImagePixelValueInPlaneRetired
        {
            get { return _dicom.FindFirst("00280110") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SmallestImagePixelValueInPlaneRetired_
        {
            get { return _dicom.FindAll("00280110").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LargestImagePixelValueInPlaneRetired
        {
            get { return _dicom.FindFirst("00280111") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargestImagePixelValueInPlaneRetired_
        {
            get { return _dicom.FindAll("00280111").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PixelPaddingValue
        {
            get { return _dicom.FindFirst("00280120") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PixelPaddingValue_
        {
            get { return _dicom.FindAll("00280120").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PixelPaddingRangeLimit
        {
            get { return _dicom.FindFirst("00280121") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PixelPaddingRangeLimit_
        {
            get { return _dicom.FindAll("00280121").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ImageLocationRetired
        {
            get { return _dicom.FindFirst("00280200") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageLocationRetired_
        {
            get { return _dicom.FindAll("00280200").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString QualityControlImage
        {
            get { return _dicom.FindFirst("00280300") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> QualityControlImage_
        {
            get { return _dicom.FindAll("00280300").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BurnedInAnnotation
        {
            get { return _dicom.FindFirst("00280301") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BurnedInAnnotation_
        {
            get { return _dicom.FindAll("00280301").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RecognizableVisualFeatures
        {
            get { return _dicom.FindFirst("00280302") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RecognizableVisualFeatures_
        {
            get { return _dicom.FindAll("00280302").Select(d => d as CodeString).ToList(); }
        }

        public CodeString LongitudinalTemporalInformationModified
        {
            get { return _dicom.FindFirst("00280303") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LongitudinalTemporalInformationModified_
        {
            get { return _dicom.FindAll("00280303").Select(d => d as CodeString).ToList(); }
        }

        public LongString TransformLabelRetired
        {
            get { return _dicom.FindFirst("00280400") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TransformLabelRetired_
        {
            get { return _dicom.FindAll("00280400").Select(d => d as LongString).ToList(); }
        }

        public LongString TransformVersionNumberRetired
        {
            get { return _dicom.FindFirst("00280401") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TransformVersionNumberRetired_
        {
            get { return _dicom.FindAll("00280401").Select(d => d as LongString).ToList(); }
        }

        public UnsignedShort NumberOfTransformStepsRetired
        {
            get { return _dicom.FindFirst("00280402") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfTransformStepsRetired_
        {
            get { return _dicom.FindAll("00280402").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString SequenceOfCompressedDataRetired
        {
            get { return _dicom.FindFirst("00280403") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SequenceOfCompressedDataRetired_
        {
            get { return _dicom.FindAll("00280403").Select(d => d as LongString).ToList(); }
        }

        public AttributeTag DetailsOfCoefficientsRetired
        {
            get { return _dicom.FindFirst("00280404") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> DetailsOfCoefficientsRetired_
        {
            get { return _dicom.FindAll("00280404").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort RowsForNthOrderCoefficientsRetired
        {
            get { return _dicom.FindFirst("002804x0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RowsForNthOrderCoefficientsRetired_
        {
            get { return _dicom.FindAll("002804x0").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ColumnsForNthOrderCoefficientsRetired
        {
            get { return _dicom.FindFirst("002804x1") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ColumnsForNthOrderCoefficientsRetired_
        {
            get { return _dicom.FindAll("002804x1").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString CoefficientCodingRetired
        {
            get { return _dicom.FindFirst("002804x2") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CoefficientCodingRetired_
        {
            get { return _dicom.FindAll("002804x2").Select(d => d as LongString).ToList(); }
        }

        public AttributeTag CoefficientCodingPointersRetired
        {
            get { return _dicom.FindFirst("002804x3") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> CoefficientCodingPointersRetired_
        {
            get { return _dicom.FindAll("002804x3").Select(d => d as AttributeTag).ToList(); }
        }

        public LongString DCTLabelRetired
        {
            get { return _dicom.FindFirst("00280700") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DCTLabelRetired_
        {
            get { return _dicom.FindAll("00280700").Select(d => d as LongString).ToList(); }
        }

        public CodeString DataBlockDescriptionRetired
        {
            get { return _dicom.FindFirst("00280701") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DataBlockDescriptionRetired_
        {
            get { return _dicom.FindAll("00280701").Select(d => d as CodeString).ToList(); }
        }

        public AttributeTag DataBlockRetired
        {
            get { return _dicom.FindFirst("00280702") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> DataBlockRetired_
        {
            get { return _dicom.FindAll("00280702").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort NormalizationFactorFormatRetired
        {
            get { return _dicom.FindFirst("00280710") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NormalizationFactorFormatRetired_
        {
            get { return _dicom.FindAll("00280710").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ZonalMapNumberFormatRetired
        {
            get { return _dicom.FindFirst("00280720") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ZonalMapNumberFormatRetired_
        {
            get { return _dicom.FindAll("00280720").Select(d => d as UnsignedShort).ToList(); }
        }

        public AttributeTag ZonalMapLocationRetired
        {
            get { return _dicom.FindFirst("00280721") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> ZonalMapLocationRetired_
        {
            get { return _dicom.FindAll("00280721").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort ZonalMapFormatRetired
        {
            get { return _dicom.FindFirst("00280722") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ZonalMapFormatRetired_
        {
            get { return _dicom.FindAll("00280722").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort AdaptiveMapFormatRetired
        {
            get { return _dicom.FindFirst("00280730") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AdaptiveMapFormatRetired_
        {
            get { return _dicom.FindAll("00280730").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort CodeNumberFormatRetired
        {
            get { return _dicom.FindFirst("00280740") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CodeNumberFormatRetired_
        {
            get { return _dicom.FindAll("00280740").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString CodeLabelRetired
        {
            get { return _dicom.FindFirst("002808x0") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CodeLabelRetired_
        {
            get { return _dicom.FindAll("002808x0").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfTablesRetired
        {
            get { return _dicom.FindFirst("002808x2") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfTablesRetired_
        {
            get { return _dicom.FindAll("002808x2").Select(d => d as UnsignedShort).ToList(); }
        }

        public AttributeTag CodeTableLocationRetired
        {
            get { return _dicom.FindFirst("002808x3") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> CodeTableLocationRetired_
        {
            get { return _dicom.FindAll("002808x3").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort BitsForCodeWordRetired
        {
            get { return _dicom.FindFirst("002808x4") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BitsForCodeWordRetired_
        {
            get { return _dicom.FindAll("002808x4").Select(d => d as UnsignedShort).ToList(); }
        }

        public AttributeTag ImageDataLocationRetired
        {
            get { return _dicom.FindFirst("002808x8") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> ImageDataLocationRetired_
        {
            get { return _dicom.FindAll("002808x8").Select(d => d as AttributeTag).ToList(); }
        }

        public CodeString PixelSpacingCalibrationType
        {
            get { return _dicom.FindFirst("00280A02") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PixelSpacingCalibrationType_
        {
            get { return _dicom.FindAll("00280A02").Select(d => d as CodeString).ToList(); }
        }

        public LongString PixelSpacingCalibrationDescription
        {
            get { return _dicom.FindFirst("00280A04") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PixelSpacingCalibrationDescription_
        {
            get { return _dicom.FindAll("00280A04").Select(d => d as LongString).ToList(); }
        }

        public CodeString PixelIntensityRelationship
        {
            get { return _dicom.FindFirst("00281040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PixelIntensityRelationship_
        {
            get { return _dicom.FindAll("00281040").Select(d => d as CodeString).ToList(); }
        }

        public SignedShort PixelIntensityRelationshipSign
        {
            get { return _dicom.FindFirst("00281041") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> PixelIntensityRelationshipSign_
        {
            get { return _dicom.FindAll("00281041").Select(d => d as SignedShort).ToList(); }
        }

        public DecimalString WindowCenter
        {
            get { return _dicom.FindFirst("00281050") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> WindowCenter_
        {
            get { return _dicom.FindAll("00281050").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString WindowWidth
        {
            get { return _dicom.FindFirst("00281051") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> WindowWidth_
        {
            get { return _dicom.FindAll("00281051").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RescaleIntercept
        {
            get { return _dicom.FindFirst("00281052") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RescaleIntercept_
        {
            get { return _dicom.FindAll("00281052").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RescaleSlope
        {
            get { return _dicom.FindFirst("00281053") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RescaleSlope_
        {
            get { return _dicom.FindAll("00281053").Select(d => d as DecimalString).ToList(); }
        }

        public LongString RescaleType
        {
            get { return _dicom.FindFirst("00281054") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RescaleType_
        {
            get { return _dicom.FindAll("00281054").Select(d => d as LongString).ToList(); }
        }

        public LongString WindowCenterWidthExplanation
        {
            get { return _dicom.FindFirst("00281055") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> WindowCenterWidthExplanation_
        {
            get { return _dicom.FindAll("00281055").Select(d => d as LongString).ToList(); }
        }

        public CodeString VOILUTFunction
        {
            get { return _dicom.FindFirst("00281056") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VOILUTFunction_
        {
            get { return _dicom.FindAll("00281056").Select(d => d as CodeString).ToList(); }
        }

        public CodeString GrayScaleRetired
        {
            get { return _dicom.FindFirst("00281080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GrayScaleRetired_
        {
            get { return _dicom.FindAll("00281080").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RecommendedViewingMode
        {
            get { return _dicom.FindFirst("00281090") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RecommendedViewingMode_
        {
            get { return _dicom.FindAll("00281090").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort GrayLookupTableDescriptorRetired
        {
            get { return _dicom.FindFirst("00281100") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GrayLookupTableDescriptorRetired_
        {
            get { return _dicom.FindAll("00281100").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RedPaletteColorLookupTableDescriptor
        {
            get { return _dicom.FindFirst("00281101") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RedPaletteColorLookupTableDescriptor_
        {
            get { return _dicom.FindAll("00281101").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort GreenPaletteColorLookupTableDescriptor
        {
            get { return _dicom.FindFirst("00281102") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GreenPaletteColorLookupTableDescriptor_
        {
            get { return _dicom.FindAll("00281102").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort BluePaletteColorLookupTableDescriptor
        {
            get { return _dicom.FindFirst("00281103") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BluePaletteColorLookupTableDescriptor_
        {
            get { return _dicom.FindAll("00281103").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort AlphaPaletteColorLookupTableDescriptor
        {
            get { return _dicom.FindFirst("00281104") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AlphaPaletteColorLookupTableDescriptor_
        {
            get { return _dicom.FindAll("00281104").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LargeRedPaletteColorLookupTableDescriptorRetired
        {
            get { return _dicom.FindFirst("00281111") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargeRedPaletteColorLookupTableDescriptorRetired_
        {
            get { return _dicom.FindAll("00281111").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LargeGreenPaletteColorLookupTableDescriptorRetired
        {
            get { return _dicom.FindFirst("00281112") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargeGreenPaletteColorLookupTableDescriptorRetired_
        {
            get { return _dicom.FindAll("00281112").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LargeBluePaletteColorLookupTableDescriptorRetired
        {
            get { return _dicom.FindFirst("00281113") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargeBluePaletteColorLookupTableDescriptorRetired_
        {
            get { return _dicom.FindAll("00281113").Select(d => d as UnsignedShort).ToList(); }
        }

        public UniqueIdentifier PaletteColorLookupTableUID
        {
            get { return _dicom.FindFirst("00281199") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> PaletteColorLookupTableUID_
        {
            get { return _dicom.FindAll("00281199").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UnsignedShort GrayLookupTableDataRetired
        {
            get { return _dicom.FindFirst("00281200") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GrayLookupTableDataRetired_
        {
            get { return _dicom.FindAll("00281200").Select(d => d as UnsignedShort).ToList(); }
        }

        public OtherWordString RedPaletteColorLookupTableData
        {
            get { return _dicom.FindFirst("00281201") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> RedPaletteColorLookupTableData_
        {
            get { return _dicom.FindAll("00281201").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString GreenPaletteColorLookupTableData
        {
            get { return _dicom.FindFirst("00281202") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> GreenPaletteColorLookupTableData_
        {
            get { return _dicom.FindAll("00281202").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString BluePaletteColorLookupTableData
        {
            get { return _dicom.FindFirst("00281203") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> BluePaletteColorLookupTableData_
        {
            get { return _dicom.FindAll("00281203").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString AlphaPaletteColorLookupTableData
        {
            get { return _dicom.FindFirst("00281204") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> AlphaPaletteColorLookupTableData_
        {
            get { return _dicom.FindAll("00281204").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString LargeRedPaletteColorLookupTableDataRetired
        {
            get { return _dicom.FindFirst("00281211") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> LargeRedPaletteColorLookupTableDataRetired_
        {
            get { return _dicom.FindAll("00281211").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString LargeGreenPaletteColorLookupTableDataRetired
        {
            get { return _dicom.FindFirst("00281212") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> LargeGreenPaletteColorLookupTableDataRetired_
        {
            get { return _dicom.FindAll("00281212").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString LargeBluePaletteColorLookupTableDataRetired
        {
            get { return _dicom.FindFirst("00281213") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> LargeBluePaletteColorLookupTableDataRetired_
        {
            get { return _dicom.FindAll("00281213").Select(d => d as OtherWordString).ToList(); }
        }

        public UniqueIdentifier LargePaletteColorLookupTableUIDRetired
        {
            get { return _dicom.FindFirst("00281214") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> LargePaletteColorLookupTableUIDRetired_
        {
            get { return _dicom.FindAll("00281214").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public OtherWordString SegmentedRedPaletteColorLookupTableData
        {
            get { return _dicom.FindFirst("00281221") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> SegmentedRedPaletteColorLookupTableData_
        {
            get { return _dicom.FindAll("00281221").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString SegmentedGreenPaletteColorLookupTableData
        {
            get { return _dicom.FindFirst("00281222") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> SegmentedGreenPaletteColorLookupTableData_
        {
            get { return _dicom.FindAll("00281222").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString SegmentedBluePaletteColorLookupTableData
        {
            get { return _dicom.FindFirst("00281223") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> SegmentedBluePaletteColorLookupTableData_
        {
            get { return _dicom.FindAll("00281223").Select(d => d as OtherWordString).ToList(); }
        }

        public CodeString BreastImplantPresent
        {
            get { return _dicom.FindFirst("00281300") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BreastImplantPresent_
        {
            get { return _dicom.FindAll("00281300").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PartialView
        {
            get { return _dicom.FindFirst("00281350") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PartialView_
        {
            get { return _dicom.FindAll("00281350").Select(d => d as CodeString).ToList(); }
        }

        public ShortText PartialViewDescription
        {
            get { return _dicom.FindFirst("00281351") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> PartialViewDescription_
        {
            get { return _dicom.FindAll("00281351").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector PartialViewCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00281352") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PartialViewCodeSequence_
        {
            get { return _dicom.FindAll("00281352").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString SpatialLocationsPreserved
        {
            get { return _dicom.FindFirst("0028135A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpatialLocationsPreserved_
        {
            get { return _dicom.FindAll("0028135A").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DataFrameAssignmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00281401") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DataFrameAssignmentSequence_
        {
            get { return _dicom.FindAll("00281401").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString DataPathAssignment
        {
            get { return _dicom.FindFirst("00281402") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DataPathAssignment_
        {
            get { return _dicom.FindAll("00281402").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort BitsMappedToColorLookupTable
        {
            get { return _dicom.FindFirst("00281403") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BitsMappedToColorLookupTable_
        {
            get { return _dicom.FindAll("00281403").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector BlendingLUT1Sequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00281404") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BlendingLUT1Sequence_
        {
            get { return _dicom.FindAll("00281404").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString BlendingLUT1TransferFunction
        {
            get { return _dicom.FindFirst("00281405") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlendingLUT1TransferFunction_
        {
            get { return _dicom.FindAll("00281405").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble BlendingWeightConstant
        {
            get { return _dicom.FindFirst("00281406") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> BlendingWeightConstant_
        {
            get { return _dicom.FindAll("00281406").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort BlendingLookupTableDescriptor
        {
            get { return _dicom.FindFirst("00281407") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BlendingLookupTableDescriptor_
        {
            get { return _dicom.FindAll("00281407").Select(d => d as UnsignedShort).ToList(); }
        }

        public OtherWordString BlendingLookupTableData
        {
            get { return _dicom.FindFirst("00281408") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> BlendingLookupTableData_
        {
            get { return _dicom.FindAll("00281408").Select(d => d as OtherWordString).ToList(); }
        }

        public SequenceSelector EnhancedPaletteColorLookupTableSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0028140B") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EnhancedPaletteColorLookupTableSequence_
        {
            get { return _dicom.FindAll("0028140B").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector BlendingLUT2Sequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0028140C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BlendingLUT2Sequence_
        {
            get { return _dicom.FindAll("0028140C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString BlendingLUT2TransferFunction
        {
            get { return _dicom.FindFirst("0028140D") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlendingLUT2TransferFunction_
        {
            get { return _dicom.FindAll("0028140D").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DataPathID
        {
            get { return _dicom.FindFirst("0028140E") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DataPathID_
        {
            get { return _dicom.FindAll("0028140E").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RGBLUTTransferFunction
        {
            get { return _dicom.FindFirst("0028140F") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RGBLUTTransferFunction_
        {
            get { return _dicom.FindAll("0028140F").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AlphaLUTTransferFunction
        {
            get { return _dicom.FindFirst("00281410") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AlphaLUTTransferFunction_
        {
            get { return _dicom.FindAll("00281410").Select(d => d as CodeString).ToList(); }
        }

        public OtherByteString ICCProfile
        {
            get { return _dicom.FindFirst("00282000") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> ICCProfile_
        {
            get { return _dicom.FindAll("00282000").Select(d => d as OtherByteString).ToList(); }
        }

        public CodeString LossyImageCompression
        {
            get { return _dicom.FindFirst("00282110") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LossyImageCompression_
        {
            get { return _dicom.FindAll("00282110").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString LossyImageCompressionRatio
        {
            get { return _dicom.FindFirst("00282112") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> LossyImageCompressionRatio_
        {
            get { return _dicom.FindAll("00282112").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString LossyImageCompressionMethod
        {
            get { return _dicom.FindFirst("00282114") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LossyImageCompressionMethod_
        {
            get { return _dicom.FindAll("00282114").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ModalityLUTSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00283000") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ModalityLUTSequence_
        {
            get { return _dicom.FindAll("00283000").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort LUTDescriptor
        {
            get { return _dicom.FindFirst("00283002") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LUTDescriptor_
        {
            get { return _dicom.FindAll("00283002").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString LUTExplanation
        {
            get { return _dicom.FindFirst("00283003") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> LUTExplanation_
        {
            get { return _dicom.FindAll("00283003").Select(d => d as LongString).ToList(); }
        }

        public LongString ModalityLUTType
        {
            get { return _dicom.FindFirst("00283004") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ModalityLUTType_
        {
            get { return _dicom.FindAll("00283004").Select(d => d as LongString).ToList(); }
        }

        public UnsignedShort LUTData
        {
            get { return _dicom.FindFirst("00283006") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LUTData_
        {
            get { return _dicom.FindAll("00283006").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector VOILUTSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00283010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VOILUTSequence_
        {
            get { return _dicom.FindAll("00283010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SoftcopyVOILUTSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00283110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SoftcopyVOILUTSequence_
        {
            get { return _dicom.FindAll("00283110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongText ImagePresentationCommentsRetired
        {
            get { return _dicom.FindFirst("00284000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ImagePresentationCommentsRetired_
        {
            get { return _dicom.FindAll("00284000").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector BiPlaneAcquisitionSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00285000") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BiPlaneAcquisitionSequenceRetired_
        {
            get { return _dicom.FindAll("00285000").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort RepresentativeFrameNumber
        {
            get { return _dicom.FindFirst("00286010") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RepresentativeFrameNumber_
        {
            get { return _dicom.FindAll("00286010").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort FrameNumbersOfInterest
        {
            get { return _dicom.FindFirst("00286020") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> FrameNumbersOfInterest_
        {
            get { return _dicom.FindAll("00286020").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString FrameOfInterestDescription
        {
            get { return _dicom.FindFirst("00286022") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FrameOfInterestDescription_
        {
            get { return _dicom.FindAll("00286022").Select(d => d as LongString).ToList(); }
        }

        public CodeString FrameOfInterestType
        {
            get { return _dicom.FindFirst("00286023") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FrameOfInterestType_
        {
            get { return _dicom.FindAll("00286023").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort MaskPointersRetired
        {
            get { return _dicom.FindFirst("00286030") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MaskPointersRetired_
        {
            get { return _dicom.FindAll("00286030").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RWavePointer
        {
            get { return _dicom.FindFirst("00286040") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RWavePointer_
        {
            get { return _dicom.FindAll("00286040").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector MaskSubtractionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00286100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MaskSubtractionSequence_
        {
            get { return _dicom.FindAll("00286100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString MaskOperation
        {
            get { return _dicom.FindFirst("00286101") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MaskOperation_
        {
            get { return _dicom.FindAll("00286101").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort ApplicableFrameRange
        {
            get { return _dicom.FindFirst("00286102") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ApplicableFrameRange_
        {
            get { return _dicom.FindAll("00286102").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MaskFrameNumbers
        {
            get { return _dicom.FindFirst("00286110") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MaskFrameNumbers_
        {
            get { return _dicom.FindAll("00286110").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ContrastFrameAveraging
        {
            get { return _dicom.FindFirst("00286112") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ContrastFrameAveraging_
        {
            get { return _dicom.FindAll("00286112").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointSingle MaskSubPixelShift
        {
            get { return _dicom.FindFirst("00286114") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MaskSubPixelShift_
        {
            get { return _dicom.FindAll("00286114").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SignedShort TIDOffset
        {
            get { return _dicom.FindFirst("00286120") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> TIDOffset_
        {
            get { return _dicom.FindAll("00286120").Select(d => d as SignedShort).ToList(); }
        }

        public ShortText MaskOperationExplanation
        {
            get { return _dicom.FindFirst("00286190") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> MaskOperationExplanation_
        {
            get { return _dicom.FindAll("00286190").Select(d => d as ShortText).ToList(); }
        }

        public UnlimitedText PixelDataProviderURL
        {
            get { return _dicom.FindFirst("00287FE0") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> PixelDataProviderURL_
        {
            get { return _dicom.FindAll("00287FE0").Select(d => d as UnlimitedText).ToList(); }
        }

        public UnsignedLong DataPointRows
        {
            get { return _dicom.FindFirst("00289001") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> DataPointRows_
        {
            get { return _dicom.FindAll("00289001").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong DataPointColumns
        {
            get { return _dicom.FindFirst("00289002") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> DataPointColumns_
        {
            get { return _dicom.FindAll("00289002").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString SignalDomainColumns
        {
            get { return _dicom.FindFirst("00289003") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SignalDomainColumns_
        {
            get { return _dicom.FindAll("00289003").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort LargestMonochromePixelValueRetired
        {
            get { return _dicom.FindFirst("00289099") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LargestMonochromePixelValueRetired_
        {
            get { return _dicom.FindAll("00289099").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString DataRepresentation
        {
            get { return _dicom.FindFirst("00289108") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DataRepresentation_
        {
            get { return _dicom.FindAll("00289108").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector PixelMeasuresSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PixelMeasuresSequence_
        {
            get { return _dicom.FindAll("00289110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FrameVOILUTSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289132") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameVOILUTSequence_
        {
            get { return _dicom.FindAll("00289132").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PixelValueTransformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289145") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PixelValueTransformationSequence_
        {
            get { return _dicom.FindAll("00289145").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString SignalDomainRows
        {
            get { return _dicom.FindFirst("00289235") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SignalDomainRows_
        {
            get { return _dicom.FindAll("00289235").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle DisplayFilterPercentage
        {
            get { return _dicom.FindFirst("00289411") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DisplayFilterPercentage_
        {
            get { return _dicom.FindAll("00289411").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector FramePixelShiftSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289415") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FramePixelShiftSequence_
        {
            get { return _dicom.FindAll("00289415").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort SubtractionItemID
        {
            get { return _dicom.FindFirst("00289416") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SubtractionItemID_
        {
            get { return _dicom.FindAll("00289416").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector PixelIntensityRelationshipLUTSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289422") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PixelIntensityRelationshipLUTSequence_
        {
            get { return _dicom.FindAll("00289422").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FramePixelDataPropertiesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289443") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FramePixelDataPropertiesSequence_
        {
            get { return _dicom.FindAll("00289443").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString GeometricalProperties
        {
            get { return _dicom.FindFirst("00289444") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GeometricalProperties_
        {
            get { return _dicom.FindAll("00289444").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle GeometricMaximumDistortion
        {
            get { return _dicom.FindFirst("00289445") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GeometricMaximumDistortion_
        {
            get { return _dicom.FindAll("00289445").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString ImageProcessingApplied
        {
            get { return _dicom.FindFirst("00289446") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageProcessingApplied_
        {
            get { return _dicom.FindAll("00289446").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MaskSelectionMode
        {
            get { return _dicom.FindFirst("00289454") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MaskSelectionMode_
        {
            get { return _dicom.FindAll("00289454").Select(d => d as CodeString).ToList(); }
        }

        public CodeString LUTFunction
        {
            get { return _dicom.FindFirst("00289474") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LUTFunction_
        {
            get { return _dicom.FindAll("00289474").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle MaskVisibilityPercentage
        {
            get { return _dicom.FindFirst("00289478") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MaskVisibilityPercentage_
        {
            get { return _dicom.FindAll("00289478").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector PixelShiftSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289501") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PixelShiftSequence_
        {
            get { return _dicom.FindAll("00289501").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RegionPixelShiftSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289502") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RegionPixelShiftSequence_
        {
            get { return _dicom.FindAll("00289502").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SignedShort VerticesOfTheRegion
        {
            get { return _dicom.FindFirst("00289503") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> VerticesOfTheRegion_
        {
            get { return _dicom.FindAll("00289503").Select(d => d as SignedShort).ToList(); }
        }

        public SequenceSelector MultiFramePresentationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00289505") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MultiFramePresentationSequence_
        {
            get { return _dicom.FindAll("00289505").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort PixelShiftFrameRange
        {
            get { return _dicom.FindFirst("00289506") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PixelShiftFrameRange_
        {
            get { return _dicom.FindAll("00289506").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort LUTFrameRange
        {
            get { return _dicom.FindFirst("00289507") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> LUTFrameRange_
        {
            get { return _dicom.FindAll("00289507").Select(d => d as UnsignedShort).ToList(); }
        }

        public DecimalString ImageToEquipmentMappingMatrix
        {
            get { return _dicom.FindFirst("00289520") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageToEquipmentMappingMatrix_
        {
            get { return _dicom.FindAll("00289520").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString EquipmentCoordinateSystemIdentification
        {
            get { return _dicom.FindFirst("00289537") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> EquipmentCoordinateSystemIdentification_
        {
            get { return _dicom.FindAll("00289537").Select(d => d as CodeString).ToList(); }
        }

        public CodeString StudyStatusIDRetired
        {
            get { return _dicom.FindFirst("0032000A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> StudyStatusIDRetired_
        {
            get { return _dicom.FindAll("0032000A").Select(d => d as CodeString).ToList(); }
        }

        public CodeString StudyPriorityIDRetired
        {
            get { return _dicom.FindFirst("0032000C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> StudyPriorityIDRetired_
        {
            get { return _dicom.FindAll("0032000C").Select(d => d as CodeString).ToList(); }
        }

        public LongString StudyIDIssuerRetired
        {
            get { return _dicom.FindFirst("00320012") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> StudyIDIssuerRetired_
        {
            get { return _dicom.FindAll("00320012").Select(d => d as LongString).ToList(); }
        }

        public Date StudyVerifiedDateRetired
        {
            get { return _dicom.FindFirst("00320032") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> StudyVerifiedDateRetired_
        {
            get { return _dicom.FindAll("00320032").Select(d => d as Date).ToList(); }
        }

        public Time StudyVerifiedTimeRetired
        {
            get { return _dicom.FindFirst("00320033") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> StudyVerifiedTimeRetired_
        {
            get { return _dicom.FindAll("00320033").Select(d => d as Time).ToList(); }
        }

        public Date StudyReadDateRetired
        {
            get { return _dicom.FindFirst("00320034") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> StudyReadDateRetired_
        {
            get { return _dicom.FindAll("00320034").Select(d => d as Date).ToList(); }
        }

        public Time StudyReadTimeRetired
        {
            get { return _dicom.FindFirst("00320035") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> StudyReadTimeRetired_
        {
            get { return _dicom.FindAll("00320035").Select(d => d as Time).ToList(); }
        }

        public Date ScheduledStudyStartDateRetired
        {
            get { return _dicom.FindFirst("00321000") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ScheduledStudyStartDateRetired_
        {
            get { return _dicom.FindAll("00321000").Select(d => d as Date).ToList(); }
        }

        public Time ScheduledStudyStartTimeRetired
        {
            get { return _dicom.FindFirst("00321001") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ScheduledStudyStartTimeRetired_
        {
            get { return _dicom.FindAll("00321001").Select(d => d as Time).ToList(); }
        }

        public Date ScheduledStudyStopDateRetired
        {
            get { return _dicom.FindFirst("00321010") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ScheduledStudyStopDateRetired_
        {
            get { return _dicom.FindAll("00321010").Select(d => d as Date).ToList(); }
        }

        public Time ScheduledStudyStopTimeRetired
        {
            get { return _dicom.FindFirst("00321011") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ScheduledStudyStopTimeRetired_
        {
            get { return _dicom.FindAll("00321011").Select(d => d as Time).ToList(); }
        }

        public LongString ScheduledStudyLocationRetired
        {
            get { return _dicom.FindFirst("00321020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ScheduledStudyLocationRetired_
        {
            get { return _dicom.FindAll("00321020").Select(d => d as LongString).ToList(); }
        }

        public ApplicationEntity ScheduledStudyLocationAETitleRetired
        {
            get { return _dicom.FindFirst("00321021") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> ScheduledStudyLocationAETitleRetired_
        {
            get { return _dicom.FindAll("00321021").Select(d => d as ApplicationEntity).ToList(); }
        }

        public LongString ReasonForStudyRetired
        {
            get { return _dicom.FindFirst("00321030") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReasonForStudyRetired_
        {
            get { return _dicom.FindAll("00321030").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector RequestingPhysicianIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00321031") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RequestingPhysicianIdentificationSequence_
        {
            get { return _dicom.FindAll("00321031").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName RequestingPhysician
        {
            get { return _dicom.FindFirst("00321032") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> RequestingPhysician_
        {
            get { return _dicom.FindAll("00321032").Select(d => d as PersonName).ToList(); }
        }

        public LongString RequestingService
        {
            get { return _dicom.FindFirst("00321033") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RequestingService_
        {
            get { return _dicom.FindAll("00321033").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector RequestingServiceCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00321034") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RequestingServiceCodeSequence_
        {
            get { return _dicom.FindAll("00321034").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public Date StudyArrivalDateRetired
        {
            get { return _dicom.FindFirst("00321040") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> StudyArrivalDateRetired_
        {
            get { return _dicom.FindAll("00321040").Select(d => d as Date).ToList(); }
        }

        public Time StudyArrivalTimeRetired
        {
            get { return _dicom.FindFirst("00321041") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> StudyArrivalTimeRetired_
        {
            get { return _dicom.FindAll("00321041").Select(d => d as Time).ToList(); }
        }

        public Date StudyCompletionDateRetired
        {
            get { return _dicom.FindFirst("00321050") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> StudyCompletionDateRetired_
        {
            get { return _dicom.FindAll("00321050").Select(d => d as Date).ToList(); }
        }

        public Time StudyCompletionTimeRetired
        {
            get { return _dicom.FindFirst("00321051") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> StudyCompletionTimeRetired_
        {
            get { return _dicom.FindAll("00321051").Select(d => d as Time).ToList(); }
        }

        public CodeString StudyComponentStatusIDRetired
        {
            get { return _dicom.FindFirst("00321055") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> StudyComponentStatusIDRetired_
        {
            get { return _dicom.FindAll("00321055").Select(d => d as CodeString).ToList(); }
        }

        public LongString RequestedProcedureDescription
        {
            get { return _dicom.FindFirst("00321060") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RequestedProcedureDescription_
        {
            get { return _dicom.FindAll("00321060").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector RequestedProcedureCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00321064") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RequestedProcedureCodeSequence_
        {
            get { return _dicom.FindAll("00321064").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString RequestedContrastAgent
        {
            get { return _dicom.FindFirst("00321070") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RequestedContrastAgent_
        {
            get { return _dicom.FindAll("00321070").Select(d => d as LongString).ToList(); }
        }

        public LongText StudyCommentsRetired
        {
            get { return _dicom.FindFirst("00324000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> StudyCommentsRetired_
        {
            get { return _dicom.FindAll("00324000").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector ReferencedPatientAliasSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00380004") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedPatientAliasSequence_
        {
            get { return _dicom.FindAll("00380004").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString VisitStatusID
        {
            get { return _dicom.FindFirst("00380008") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VisitStatusID_
        {
            get { return _dicom.FindAll("00380008").Select(d => d as CodeString).ToList(); }
        }

        public LongString AdmissionID
        {
            get { return _dicom.FindFirst("00380010") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AdmissionID_
        {
            get { return _dicom.FindAll("00380010").Select(d => d as LongString).ToList(); }
        }

        public LongString IssuerOfAdmissionIDRetired
        {
            get { return _dicom.FindFirst("00380011") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> IssuerOfAdmissionIDRetired_
        {
            get { return _dicom.FindAll("00380011").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector IssuerOfAdmissionIDSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00380014") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IssuerOfAdmissionIDSequence_
        {
            get { return _dicom.FindAll("00380014").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString RouteOfAdmissions
        {
            get { return _dicom.FindFirst("00380016") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RouteOfAdmissions_
        {
            get { return _dicom.FindAll("00380016").Select(d => d as LongString).ToList(); }
        }

        public Date ScheduledAdmissionDateRetired
        {
            get { return _dicom.FindFirst("0038001A") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ScheduledAdmissionDateRetired_
        {
            get { return _dicom.FindAll("0038001A").Select(d => d as Date).ToList(); }
        }

        public Time ScheduledAdmissionTimeRetired
        {
            get { return _dicom.FindFirst("0038001B") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ScheduledAdmissionTimeRetired_
        {
            get { return _dicom.FindAll("0038001B").Select(d => d as Time).ToList(); }
        }

        public Date ScheduledDischargeDateRetired
        {
            get { return _dicom.FindFirst("0038001C") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ScheduledDischargeDateRetired_
        {
            get { return _dicom.FindAll("0038001C").Select(d => d as Date).ToList(); }
        }

        public Time ScheduledDischargeTimeRetired
        {
            get { return _dicom.FindFirst("0038001D") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ScheduledDischargeTimeRetired_
        {
            get { return _dicom.FindAll("0038001D").Select(d => d as Time).ToList(); }
        }

        public LongString ScheduledPatientInstitutionResidenceRetired
        {
            get { return _dicom.FindFirst("0038001E") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ScheduledPatientInstitutionResidenceRetired_
        {
            get { return _dicom.FindAll("0038001E").Select(d => d as LongString).ToList(); }
        }

        public Date AdmittingDate
        {
            get { return _dicom.FindFirst("00380020") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> AdmittingDate_
        {
            get { return _dicom.FindAll("00380020").Select(d => d as Date).ToList(); }
        }

        public Time AdmittingTime
        {
            get { return _dicom.FindFirst("00380021") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> AdmittingTime_
        {
            get { return _dicom.FindAll("00380021").Select(d => d as Time).ToList(); }
        }

        public Date DischargeDateRetired
        {
            get { return _dicom.FindFirst("00380030") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> DischargeDateRetired_
        {
            get { return _dicom.FindAll("00380030").Select(d => d as Date).ToList(); }
        }

        public Time DischargeTimeRetired
        {
            get { return _dicom.FindFirst("00380032") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> DischargeTimeRetired_
        {
            get { return _dicom.FindAll("00380032").Select(d => d as Time).ToList(); }
        }

        public LongString DischargeDiagnosisDescriptionRetired
        {
            get { return _dicom.FindFirst("00380040") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DischargeDiagnosisDescriptionRetired_
        {
            get { return _dicom.FindAll("00380040").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector DischargeDiagnosisCodeSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00380044") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DischargeDiagnosisCodeSequenceRetired_
        {
            get { return _dicom.FindAll("00380044").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SpecialNeeds
        {
            get { return _dicom.FindFirst("00380050") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SpecialNeeds_
        {
            get { return _dicom.FindAll("00380050").Select(d => d as LongString).ToList(); }
        }

        public LongString ServiceEpisodeID
        {
            get { return _dicom.FindFirst("00380060") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ServiceEpisodeID_
        {
            get { return _dicom.FindAll("00380060").Select(d => d as LongString).ToList(); }
        }

        public LongString IssuerOfServiceEpisodeIDRetired
        {
            get { return _dicom.FindFirst("00380061") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> IssuerOfServiceEpisodeIDRetired_
        {
            get { return _dicom.FindAll("00380061").Select(d => d as LongString).ToList(); }
        }

        public LongString ServiceEpisodeDescription
        {
            get { return _dicom.FindFirst("00380062") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ServiceEpisodeDescription_
        {
            get { return _dicom.FindAll("00380062").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector IssuerOfServiceEpisodeIDSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00380064") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IssuerOfServiceEpisodeIDSequence_
        {
            get { return _dicom.FindAll("00380064").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PertinentDocumentsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00380100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PertinentDocumentsSequence_
        {
            get { return _dicom.FindAll("00380100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString CurrentPatientLocation
        {
            get { return _dicom.FindFirst("00380300") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CurrentPatientLocation_
        {
            get { return _dicom.FindAll("00380300").Select(d => d as LongString).ToList(); }
        }

        public LongString PatientInstitutionResidence
        {
            get { return _dicom.FindFirst("00380400") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientInstitutionResidence_
        {
            get { return _dicom.FindAll("00380400").Select(d => d as LongString).ToList(); }
        }

        public LongString PatientState
        {
            get { return _dicom.FindFirst("00380500") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientState_
        {
            get { return _dicom.FindAll("00380500").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PatientClinicalTrialParticipationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00380502") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientClinicalTrialParticipationSequence_
        {
            get { return _dicom.FindAll("00380502").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongText VisitComments
        {
            get { return _dicom.FindFirst("00384000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> VisitComments_
        {
            get { return _dicom.FindAll("00384000").Select(d => d as LongText).ToList(); }
        }

        public CodeString WaveformOriginality
        {
            get { return _dicom.FindFirst("003A0004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> WaveformOriginality_
        {
            get { return _dicom.FindAll("003A0004").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfWaveformChannels
        {
            get { return _dicom.FindFirst("003A0005") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfWaveformChannels_
        {
            get { return _dicom.FindAll("003A0005").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong NumberOfWaveformSamples
        {
            get { return _dicom.FindFirst("003A0010") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfWaveformSamples_
        {
            get { return _dicom.FindAll("003A0010").Select(d => d as UnsignedLong).ToList(); }
        }

        public DecimalString SamplingFrequency
        {
            get { return _dicom.FindFirst("003A001A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SamplingFrequency_
        {
            get { return _dicom.FindAll("003A001A").Select(d => d as DecimalString).ToList(); }
        }

        public ShortString MultiplexGroupLabel
        {
            get { return _dicom.FindFirst("003A0020") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> MultiplexGroupLabel_
        {
            get { return _dicom.FindAll("003A0020").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector ChannelDefinitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A0200") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelDefinitionSequence_
        {
            get { return _dicom.FindAll("003A0200").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString WaveformChannelNumber
        {
            get { return _dicom.FindFirst("003A0202") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> WaveformChannelNumber_
        {
            get { return _dicom.FindAll("003A0202").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString ChannelLabel
        {
            get { return _dicom.FindFirst("003A0203") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ChannelLabel_
        {
            get { return _dicom.FindAll("003A0203").Select(d => d as ShortString).ToList(); }
        }

        public CodeString ChannelStatus
        {
            get { return _dicom.FindFirst("003A0205") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ChannelStatus_
        {
            get { return _dicom.FindAll("003A0205").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ChannelSourceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A0208") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelSourceSequence_
        {
            get { return _dicom.FindAll("003A0208").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ChannelSourceModifiersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A0209") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelSourceModifiersSequence_
        {
            get { return _dicom.FindAll("003A0209").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SourceWaveformSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A020A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceWaveformSequence_
        {
            get { return _dicom.FindAll("003A020A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ChannelDerivationDescription
        {
            get { return _dicom.FindFirst("003A020C") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ChannelDerivationDescription_
        {
            get { return _dicom.FindAll("003A020C").Select(d => d as LongString).ToList(); }
        }

        public DecimalString ChannelSensitivity
        {
            get { return _dicom.FindFirst("003A0210") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelSensitivity_
        {
            get { return _dicom.FindAll("003A0210").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ChannelSensitivityUnitsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A0211") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelSensitivityUnitsSequence_
        {
            get { return _dicom.FindAll("003A0211").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString ChannelSensitivityCorrectionFactor
        {
            get { return _dicom.FindFirst("003A0212") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelSensitivityCorrectionFactor_
        {
            get { return _dicom.FindAll("003A0212").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ChannelBaseline
        {
            get { return _dicom.FindFirst("003A0213") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelBaseline_
        {
            get { return _dicom.FindAll("003A0213").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ChannelTimeSkew
        {
            get { return _dicom.FindFirst("003A0214") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelTimeSkew_
        {
            get { return _dicom.FindAll("003A0214").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ChannelSampleSkew
        {
            get { return _dicom.FindFirst("003A0215") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelSampleSkew_
        {
            get { return _dicom.FindAll("003A0215").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ChannelOffset
        {
            get { return _dicom.FindFirst("003A0218") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelOffset_
        {
            get { return _dicom.FindAll("003A0218").Select(d => d as DecimalString).ToList(); }
        }

        public UnsignedShort WaveformBitsStored
        {
            get { return _dicom.FindFirst("003A021A") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> WaveformBitsStored_
        {
            get { return _dicom.FindAll("003A021A").Select(d => d as UnsignedShort).ToList(); }
        }

        public DecimalString FilterLowFrequency
        {
            get { return _dicom.FindFirst("003A0220") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FilterLowFrequency_
        {
            get { return _dicom.FindAll("003A0220").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FilterHighFrequency
        {
            get { return _dicom.FindFirst("003A0221") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FilterHighFrequency_
        {
            get { return _dicom.FindAll("003A0221").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString NotchFilterFrequency
        {
            get { return _dicom.FindFirst("003A0222") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NotchFilterFrequency_
        {
            get { return _dicom.FindAll("003A0222").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString NotchFilterBandwidth
        {
            get { return _dicom.FindFirst("003A0223") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NotchFilterBandwidth_
        {
            get { return _dicom.FindAll("003A0223").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle WaveformDataDisplayScale
        {
            get { return _dicom.FindFirst("003A0230") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> WaveformDataDisplayScale_
        {
            get { return _dicom.FindAll("003A0230").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedShort WaveformDisplayBackgroundCIELabValue
        {
            get { return _dicom.FindFirst("003A0231") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> WaveformDisplayBackgroundCIELabValue_
        {
            get { return _dicom.FindAll("003A0231").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector WaveformPresentationGroupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A0240") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> WaveformPresentationGroupSequence_
        {
            get { return _dicom.FindAll("003A0240").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort PresentationGroupNumber
        {
            get { return _dicom.FindFirst("003A0241") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PresentationGroupNumber_
        {
            get { return _dicom.FindAll("003A0241").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ChannelDisplaySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A0242") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelDisplaySequence_
        {
            get { return _dicom.FindAll("003A0242").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ChannelRecommendedDisplayCIELabValue
        {
            get { return _dicom.FindFirst("003A0244") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ChannelRecommendedDisplayCIELabValue_
        {
            get { return _dicom.FindAll("003A0244").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointSingle ChannelPosition
        {
            get { return _dicom.FindFirst("003A0245") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ChannelPosition_
        {
            get { return _dicom.FindAll("003A0245").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString DisplayShadingFlag
        {
            get { return _dicom.FindFirst("003A0246") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DisplayShadingFlag_
        {
            get { return _dicom.FindAll("003A0246").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle FractionalChannelDisplayScale
        {
            get { return _dicom.FindFirst("003A0247") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FractionalChannelDisplayScale_
        {
            get { return _dicom.FindAll("003A0247").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle AbsoluteChannelDisplayScale
        {
            get { return _dicom.FindFirst("003A0248") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AbsoluteChannelDisplayScale_
        {
            get { return _dicom.FindAll("003A0248").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector MultiplexedAudioChannelsDescriptionCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("003A0300") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MultiplexedAudioChannelsDescriptionCodeSequence_
        {
            get { return _dicom.FindAll("003A0300").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ChannelIdentificationCode
        {
            get { return _dicom.FindFirst("003A0301") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ChannelIdentificationCode_
        {
            get { return _dicom.FindAll("003A0301").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString ChannelMode
        {
            get { return _dicom.FindFirst("003A0302") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ChannelMode_
        {
            get { return _dicom.FindAll("003A0302").Select(d => d as CodeString).ToList(); }
        }

        public ApplicationEntity ScheduledStationAETitle
        {
            get { return _dicom.FindFirst("00400001") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> ScheduledStationAETitle_
        {
            get { return _dicom.FindAll("00400001").Select(d => d as ApplicationEntity).ToList(); }
        }

        public Date ScheduledProcedureStepStartDate
        {
            get { return _dicom.FindFirst("00400002") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ScheduledProcedureStepStartDate_
        {
            get { return _dicom.FindAll("00400002").Select(d => d as Date).ToList(); }
        }

        public Time ScheduledProcedureStepStartTime
        {
            get { return _dicom.FindFirst("00400003") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ScheduledProcedureStepStartTime_
        {
            get { return _dicom.FindAll("00400003").Select(d => d as Time).ToList(); }
        }

        public Date ScheduledProcedureStepEndDate
        {
            get { return _dicom.FindFirst("00400004") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ScheduledProcedureStepEndDate_
        {
            get { return _dicom.FindAll("00400004").Select(d => d as Date).ToList(); }
        }

        public Time ScheduledProcedureStepEndTime
        {
            get { return _dicom.FindFirst("00400005") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ScheduledProcedureStepEndTime_
        {
            get { return _dicom.FindAll("00400005").Select(d => d as Time).ToList(); }
        }

        public PersonName ScheduledPerformingPhysicianName
        {
            get { return _dicom.FindFirst("00400006") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> ScheduledPerformingPhysicianName_
        {
            get { return _dicom.FindAll("00400006").Select(d => d as PersonName).ToList(); }
        }

        public LongString ScheduledProcedureStepDescription
        {
            get { return _dicom.FindFirst("00400007") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ScheduledProcedureStepDescription_
        {
            get { return _dicom.FindAll("00400007").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ScheduledProtocolCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledProtocolCodeSequence_
        {
            get { return _dicom.FindAll("00400008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString ScheduledProcedureStepID
        {
            get { return _dicom.FindFirst("00400009") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ScheduledProcedureStepID_
        {
            get { return _dicom.FindAll("00400009").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector StageCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040000A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> StageCodeSequence_
        {
            get { return _dicom.FindAll("0040000A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ScheduledPerformingPhysicianIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040000B") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledPerformingPhysicianIdentificationSequence_
        {
            get { return _dicom.FindAll("0040000B").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString ScheduledStationName
        {
            get { return _dicom.FindFirst("00400010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ScheduledStationName_
        {
            get { return _dicom.FindAll("00400010").Select(d => d as ShortString).ToList(); }
        }

        public ShortString ScheduledProcedureStepLocation
        {
            get { return _dicom.FindFirst("00400011") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ScheduledProcedureStepLocation_
        {
            get { return _dicom.FindAll("00400011").Select(d => d as ShortString).ToList(); }
        }

        public LongString PreMedication
        {
            get { return _dicom.FindFirst("00400012") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PreMedication_
        {
            get { return _dicom.FindAll("00400012").Select(d => d as LongString).ToList(); }
        }

        public CodeString ScheduledProcedureStepStatus
        {
            get { return _dicom.FindFirst("00400020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScheduledProcedureStepStatus_
        {
            get { return _dicom.FindAll("00400020").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector OrderPlacerIdentifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400026") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OrderPlacerIdentifierSequence_
        {
            get { return _dicom.FindAll("00400026").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OrderFillerIdentifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400027") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OrderFillerIdentifierSequence_
        {
            get { return _dicom.FindAll("00400027").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnlimitedText LocalNamespaceEntityID
        {
            get { return _dicom.FindFirst("00400031") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> LocalNamespaceEntityID_
        {
            get { return _dicom.FindAll("00400031").Select(d => d as UnlimitedText).ToList(); }
        }

        public UnlimitedText UniversalEntityID
        {
            get { return _dicom.FindFirst("00400032") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> UniversalEntityID_
        {
            get { return _dicom.FindAll("00400032").Select(d => d as UnlimitedText).ToList(); }
        }

        public CodeString UniversalEntityIDType
        {
            get { return _dicom.FindFirst("00400033") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> UniversalEntityIDType_
        {
            get { return _dicom.FindAll("00400033").Select(d => d as CodeString).ToList(); }
        }

        public CodeString IdentifierTypeCode
        {
            get { return _dicom.FindFirst("00400035") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IdentifierTypeCode_
        {
            get { return _dicom.FindAll("00400035").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector AssigningFacilitySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400036") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AssigningFacilitySequence_
        {
            get { return _dicom.FindAll("00400036").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AssigningJurisdictionCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400039") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AssigningJurisdictionCodeSequence_
        {
            get { return _dicom.FindAll("00400039").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AssigningAgencyOrDepartmentCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040003A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AssigningAgencyOrDepartmentCodeSequence_
        {
            get { return _dicom.FindAll("0040003A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ScheduledProcedureStepSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledProcedureStepSequence_
        {
            get { return _dicom.FindAll("00400100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedNonImageCompositeSOPInstanceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedNonImageCompositeSOPInstanceSequence_
        {
            get { return _dicom.FindAll("00400220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ApplicationEntity PerformedStationAETitle
        {
            get { return _dicom.FindFirst("00400241") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> PerformedStationAETitle_
        {
            get { return _dicom.FindAll("00400241").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ShortString PerformedStationName
        {
            get { return _dicom.FindFirst("00400242") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PerformedStationName_
        {
            get { return _dicom.FindAll("00400242").Select(d => d as ShortString).ToList(); }
        }

        public ShortString PerformedLocation
        {
            get { return _dicom.FindFirst("00400243") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PerformedLocation_
        {
            get { return _dicom.FindAll("00400243").Select(d => d as ShortString).ToList(); }
        }

        public Date PerformedProcedureStepStartDate
        {
            get { return _dicom.FindFirst("00400244") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> PerformedProcedureStepStartDate_
        {
            get { return _dicom.FindAll("00400244").Select(d => d as Date).ToList(); }
        }

        public Time PerformedProcedureStepStartTime
        {
            get { return _dicom.FindFirst("00400245") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> PerformedProcedureStepStartTime_
        {
            get { return _dicom.FindAll("00400245").Select(d => d as Time).ToList(); }
        }

        public Date PerformedProcedureStepEndDate
        {
            get { return _dicom.FindFirst("00400250") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> PerformedProcedureStepEndDate_
        {
            get { return _dicom.FindAll("00400250").Select(d => d as Date).ToList(); }
        }

        public Time PerformedProcedureStepEndTime
        {
            get { return _dicom.FindFirst("00400251") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> PerformedProcedureStepEndTime_
        {
            get { return _dicom.FindAll("00400251").Select(d => d as Time).ToList(); }
        }

        public CodeString PerformedProcedureStepStatus
        {
            get { return _dicom.FindFirst("00400252") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PerformedProcedureStepStatus_
        {
            get { return _dicom.FindAll("00400252").Select(d => d as CodeString).ToList(); }
        }

        public ShortString PerformedProcedureStepID
        {
            get { return _dicom.FindFirst("00400253") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PerformedProcedureStepID_
        {
            get { return _dicom.FindAll("00400253").Select(d => d as ShortString).ToList(); }
        }

        public LongString PerformedProcedureStepDescription
        {
            get { return _dicom.FindFirst("00400254") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PerformedProcedureStepDescription_
        {
            get { return _dicom.FindAll("00400254").Select(d => d as LongString).ToList(); }
        }

        public LongString PerformedProcedureTypeDescription
        {
            get { return _dicom.FindFirst("00400255") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PerformedProcedureTypeDescription_
        {
            get { return _dicom.FindAll("00400255").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PerformedProtocolCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400260") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedProtocolCodeSequence_
        {
            get { return _dicom.FindAll("00400260").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PerformedProtocolType
        {
            get { return _dicom.FindFirst("00400261") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PerformedProtocolType_
        {
            get { return _dicom.FindAll("00400261").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ScheduledStepAttributesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400270") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledStepAttributesSequence_
        {
            get { return _dicom.FindAll("00400270").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RequestAttributesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400275") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RequestAttributesSequence_
        {
            get { return _dicom.FindAll("00400275").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText CommentsOnThePerformedProcedureStep
        {
            get { return _dicom.FindFirst("00400280") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CommentsOnThePerformedProcedureStep_
        {
            get { return _dicom.FindAll("00400280").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector PerformedProcedureStepDiscontinuationReasonCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400281") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedProcedureStepDiscontinuationReasonCodeSequence_
        {
            get { return _dicom.FindAll("00400281").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector QuantitySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400293") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> QuantitySequence_
        {
            get { return _dicom.FindAll("00400293").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString Quantity
        {
            get { return _dicom.FindFirst("00400294") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> Quantity_
        {
            get { return _dicom.FindAll("00400294").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector MeasuringUnitsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400295") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MeasuringUnitsSequence_
        {
            get { return _dicom.FindAll("00400295").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector BillingItemSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400296") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BillingItemSequence_
        {
            get { return _dicom.FindAll("00400296").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort TotalTimeOfFluoroscopy
        {
            get { return _dicom.FindFirst("00400300") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> TotalTimeOfFluoroscopy_
        {
            get { return _dicom.FindAll("00400300").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort TotalNumberOfExposures
        {
            get { return _dicom.FindFirst("00400301") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> TotalNumberOfExposures_
        {
            get { return _dicom.FindAll("00400301").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort EntranceDose
        {
            get { return _dicom.FindFirst("00400302") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> EntranceDose_
        {
            get { return _dicom.FindAll("00400302").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ExposedArea
        {
            get { return _dicom.FindFirst("00400303") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ExposedArea_
        {
            get { return _dicom.FindAll("00400303").Select(d => d as UnsignedShort).ToList(); }
        }

        public DecimalString DistanceSourceToEntrance
        {
            get { return _dicom.FindFirst("00400306") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DistanceSourceToEntrance_
        {
            get { return _dicom.FindAll("00400306").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DistanceSourceToSupportRetired
        {
            get { return _dicom.FindFirst("00400307") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DistanceSourceToSupportRetired_
        {
            get { return _dicom.FindAll("00400307").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ExposureDoseSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040030E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ExposureDoseSequence_
        {
            get { return _dicom.FindAll("0040030E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText CommentsOnRadiationDose
        {
            get { return _dicom.FindFirst("00400310") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CommentsOnRadiationDose_
        {
            get { return _dicom.FindAll("00400310").Select(d => d as ShortText).ToList(); }
        }

        public DecimalString XRayOutput
        {
            get { return _dicom.FindFirst("00400312") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> XRayOutput_
        {
            get { return _dicom.FindAll("00400312").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString HalfValueLayer
        {
            get { return _dicom.FindFirst("00400314") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> HalfValueLayer_
        {
            get { return _dicom.FindAll("00400314").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString OrganDose
        {
            get { return _dicom.FindFirst("00400316") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> OrganDose_
        {
            get { return _dicom.FindAll("00400316").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString OrganExposed
        {
            get { return _dicom.FindFirst("00400318") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OrganExposed_
        {
            get { return _dicom.FindAll("00400318").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector BillingProcedureStepSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400320") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BillingProcedureStepSequence_
        {
            get { return _dicom.FindAll("00400320").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FilmConsumptionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400321") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FilmConsumptionSequence_
        {
            get { return _dicom.FindAll("00400321").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector BillingSuppliesAndDevicesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400324") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BillingSuppliesAndDevicesSequence_
        {
            get { return _dicom.FindAll("00400324").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedProcedureStepSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400330") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedProcedureStepSequenceRetired_
        {
            get { return _dicom.FindAll("00400330").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerformedSeriesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400340") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedSeriesSequence_
        {
            get { return _dicom.FindAll("00400340").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongText CommentsOnTheScheduledProcedureStep
        {
            get { return _dicom.FindFirst("00400400") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> CommentsOnTheScheduledProcedureStep_
        {
            get { return _dicom.FindAll("00400400").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector ProtocolContextSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400440") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProtocolContextSequence_
        {
            get { return _dicom.FindAll("00400440").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContentItemModifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400441") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContentItemModifierSequence_
        {
            get { return _dicom.FindAll("00400441").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ScheduledSpecimenSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledSpecimenSequence_
        {
            get { return _dicom.FindAll("00400500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SpecimenAccessionNumberRetired
        {
            get { return _dicom.FindFirst("0040050A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SpecimenAccessionNumberRetired_
        {
            get { return _dicom.FindAll("0040050A").Select(d => d as LongString).ToList(); }
        }

        public LongString ContainerIdentifier
        {
            get { return _dicom.FindFirst("00400512") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContainerIdentifier_
        {
            get { return _dicom.FindAll("00400512").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector IssuerOfTheContainerIdentifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400513") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IssuerOfTheContainerIdentifierSequence_
        {
            get { return _dicom.FindAll("00400513").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AlternateContainerIdentifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400515") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AlternateContainerIdentifierSequence_
        {
            get { return _dicom.FindAll("00400515").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContainerTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400518") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContainerTypeCodeSequence_
        {
            get { return _dicom.FindAll("00400518").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ContainerDescription
        {
            get { return _dicom.FindFirst("0040051A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContainerDescription_
        {
            get { return _dicom.FindAll("0040051A").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ContainerComponentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400520") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContainerComponentSequence_
        {
            get { return _dicom.FindAll("00400520").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SpecimenSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400550") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenSequenceRetired_
        {
            get { return _dicom.FindAll("00400550").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SpecimenIdentifier
        {
            get { return _dicom.FindFirst("00400551") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SpecimenIdentifier_
        {
            get { return _dicom.FindAll("00400551").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector SpecimenDescriptionSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400552") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenDescriptionSequenceTrialRetired_
        {
            get { return _dicom.FindAll("00400552").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText SpecimenDescriptionTrialRetired
        {
            get { return _dicom.FindFirst("00400553") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> SpecimenDescriptionTrialRetired_
        {
            get { return _dicom.FindAll("00400553").Select(d => d as ShortText).ToList(); }
        }

        public UniqueIdentifier SpecimenUID
        {
            get { return _dicom.FindFirst("00400554") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SpecimenUID_
        {
            get { return _dicom.FindAll("00400554").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public SequenceSelector AcquisitionContextSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400555") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AcquisitionContextSequence_
        {
            get { return _dicom.FindAll("00400555").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText AcquisitionContextDescription
        {
            get { return _dicom.FindFirst("00400556") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> AcquisitionContextDescription_
        {
            get { return _dicom.FindAll("00400556").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector SpecimenDescriptionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400560") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenDescriptionSequence_
        {
            get { return _dicom.FindAll("00400560").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IssuerOfTheSpecimenIdentifierSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400562") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IssuerOfTheSpecimenIdentifierSequence_
        {
            get { return _dicom.FindAll("00400562").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SpecimenTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040059A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenTypeCodeSequence_
        {
            get { return _dicom.FindAll("0040059A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SpecimenShortDescription
        {
            get { return _dicom.FindFirst("00400600") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SpecimenShortDescription_
        {
            get { return _dicom.FindAll("00400600").Select(d => d as LongString).ToList(); }
        }

        public UnlimitedText SpecimenDetailedDescription
        {
            get { return _dicom.FindFirst("00400602") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> SpecimenDetailedDescription_
        {
            get { return _dicom.FindAll("00400602").Select(d => d as UnlimitedText).ToList(); }
        }

        public SequenceSelector SpecimenPreparationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400610") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenPreparationSequence_
        {
            get { return _dicom.FindAll("00400610").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SpecimenPreparationStepContentItemSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400612") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenPreparationStepContentItemSequence_
        {
            get { return _dicom.FindAll("00400612").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SpecimenLocalizationContentItemSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00400620") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenLocalizationContentItemSequence_
        {
            get { return _dicom.FindAll("00400620").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SlideIdentifierRetired
        {
            get { return _dicom.FindFirst("004006FA") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SlideIdentifierRetired_
        {
            get { return _dicom.FindAll("004006FA").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ImageCenterPointCoordinatesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040071A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageCenterPointCoordinatesSequence_
        {
            get { return _dicom.FindAll("0040071A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString XOffsetInSlideCoordinateSystem
        {
            get { return _dicom.FindFirst("0040072A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> XOffsetInSlideCoordinateSystem_
        {
            get { return _dicom.FindAll("0040072A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString YOffsetInSlideCoordinateSystem
        {
            get { return _dicom.FindFirst("0040073A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> YOffsetInSlideCoordinateSystem_
        {
            get { return _dicom.FindAll("0040073A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ZOffsetInSlideCoordinateSystem
        {
            get { return _dicom.FindFirst("0040074A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ZOffsetInSlideCoordinateSystem_
        {
            get { return _dicom.FindAll("0040074A").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector PixelSpacingSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("004008D8") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PixelSpacingSequenceRetired_
        {
            get { return _dicom.FindAll("004008D8").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CoordinateSystemAxisCodeSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("004008DA") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CoordinateSystemAxisCodeSequenceRetired_
        {
            get { return _dicom.FindAll("004008DA").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MeasurementUnitsCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("004008EA") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MeasurementUnitsCodeSequence_
        {
            get { return _dicom.FindAll("004008EA").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VitalStainCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("004009F8") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VitalStainCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("004009F8").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString RequestedProcedureID
        {
            get { return _dicom.FindFirst("00401001") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RequestedProcedureID_
        {
            get { return _dicom.FindAll("00401001").Select(d => d as ShortString).ToList(); }
        }

        public LongString ReasonForTheRequestedProcedure
        {
            get { return _dicom.FindFirst("00401002") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReasonForTheRequestedProcedure_
        {
            get { return _dicom.FindAll("00401002").Select(d => d as LongString).ToList(); }
        }

        public ShortString RequestedProcedurePriority
        {
            get { return _dicom.FindFirst("00401003") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RequestedProcedurePriority_
        {
            get { return _dicom.FindAll("00401003").Select(d => d as ShortString).ToList(); }
        }

        public LongString PatientTransportArrangements
        {
            get { return _dicom.FindFirst("00401004") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientTransportArrangements_
        {
            get { return _dicom.FindAll("00401004").Select(d => d as LongString).ToList(); }
        }

        public LongString RequestedProcedureLocation
        {
            get { return _dicom.FindFirst("00401005") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RequestedProcedureLocation_
        {
            get { return _dicom.FindAll("00401005").Select(d => d as LongString).ToList(); }
        }

        public ShortString PlacerOrderNumberProcedureRetired
        {
            get { return _dicom.FindFirst("00401006") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PlacerOrderNumberProcedureRetired_
        {
            get { return _dicom.FindAll("00401006").Select(d => d as ShortString).ToList(); }
        }

        public ShortString FillerOrderNumberProcedureRetired
        {
            get { return _dicom.FindFirst("00401007") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FillerOrderNumberProcedureRetired_
        {
            get { return _dicom.FindAll("00401007").Select(d => d as ShortString).ToList(); }
        }

        public LongString ConfidentialityCode
        {
            get { return _dicom.FindFirst("00401008") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ConfidentialityCode_
        {
            get { return _dicom.FindAll("00401008").Select(d => d as LongString).ToList(); }
        }

        public ShortString ReportingPriority
        {
            get { return _dicom.FindFirst("00401009") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ReportingPriority_
        {
            get { return _dicom.FindAll("00401009").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector ReasonForRequestedProcedureCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040100A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReasonForRequestedProcedureCodeSequence_
        {
            get { return _dicom.FindAll("0040100A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName NamesOfIntendedRecipientsOfResults
        {
            get { return _dicom.FindFirst("00401010") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> NamesOfIntendedRecipientsOfResults_
        {
            get { return _dicom.FindAll("00401010").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector IntendedRecipientsOfResultsIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00401011") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IntendedRecipientsOfResultsIdentificationSequence_
        {
            get { return _dicom.FindAll("00401011").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReasonForPerformedProcedureCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00401012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReasonForPerformedProcedureCodeSequence_
        {
            get { return _dicom.FindAll("00401012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString RequestedProcedureDescriptionTrialRetired
        {
            get { return _dicom.FindFirst("00401060") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RequestedProcedureDescriptionTrialRetired_
        {
            get { return _dicom.FindAll("00401060").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PersonIdentificationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00401101") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PersonIdentificationCodeSequence_
        {
            get { return _dicom.FindAll("00401101").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText PersonAddress
        {
            get { return _dicom.FindFirst("00401102") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> PersonAddress_
        {
            get { return _dicom.FindAll("00401102").Select(d => d as ShortText).ToList(); }
        }

        public LongString PersonTelephoneNumbers
        {
            get { return _dicom.FindFirst("00401103") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PersonTelephoneNumbers_
        {
            get { return _dicom.FindAll("00401103").Select(d => d as LongString).ToList(); }
        }

        public LongText RequestedProcedureComments
        {
            get { return _dicom.FindFirst("00401400") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> RequestedProcedureComments_
        {
            get { return _dicom.FindAll("00401400").Select(d => d as LongText).ToList(); }
        }

        public LongString ReasonForTheImagingServiceRequestRetired
        {
            get { return _dicom.FindFirst("00402001") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReasonForTheImagingServiceRequestRetired_
        {
            get { return _dicom.FindAll("00402001").Select(d => d as LongString).ToList(); }
        }

        public Date IssueDateOfImagingServiceRequest
        {
            get { return _dicom.FindFirst("00402004") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> IssueDateOfImagingServiceRequest_
        {
            get { return _dicom.FindAll("00402004").Select(d => d as Date).ToList(); }
        }

        public Time IssueTimeOfImagingServiceRequest
        {
            get { return _dicom.FindFirst("00402005") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> IssueTimeOfImagingServiceRequest_
        {
            get { return _dicom.FindAll("00402005").Select(d => d as Time).ToList(); }
        }

        public ShortString PlacerOrderNumberImagingServiceRequestRetired
        {
            get { return _dicom.FindFirst("00402006") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PlacerOrderNumberImagingServiceRequestRetired_
        {
            get { return _dicom.FindAll("00402006").Select(d => d as ShortString).ToList(); }
        }

        public ShortString FillerOrderNumberImagingServiceRequestRetired
        {
            get { return _dicom.FindFirst("00402007") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FillerOrderNumberImagingServiceRequestRetired_
        {
            get { return _dicom.FindAll("00402007").Select(d => d as ShortString).ToList(); }
        }

        public PersonName OrderEnteredBy
        {
            get { return _dicom.FindFirst("00402008") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> OrderEnteredBy_
        {
            get { return _dicom.FindAll("00402008").Select(d => d as PersonName).ToList(); }
        }

        public ShortString OrderEntererLocation
        {
            get { return _dicom.FindFirst("00402009") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> OrderEntererLocation_
        {
            get { return _dicom.FindAll("00402009").Select(d => d as ShortString).ToList(); }
        }

        public ShortString OrderCallbackPhoneNumber
        {
            get { return _dicom.FindFirst("00402010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> OrderCallbackPhoneNumber_
        {
            get { return _dicom.FindAll("00402010").Select(d => d as ShortString).ToList(); }
        }

        public LongString PlacerOrderNumberImagingServiceRequest
        {
            get { return _dicom.FindFirst("00402016") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PlacerOrderNumberImagingServiceRequest_
        {
            get { return _dicom.FindAll("00402016").Select(d => d as LongString).ToList(); }
        }

        public LongString FillerOrderNumberImagingServiceRequest
        {
            get { return _dicom.FindFirst("00402017") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FillerOrderNumberImagingServiceRequest_
        {
            get { return _dicom.FindAll("00402017").Select(d => d as LongString).ToList(); }
        }

        public LongText ImagingServiceRequestComments
        {
            get { return _dicom.FindFirst("00402400") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ImagingServiceRequestComments_
        {
            get { return _dicom.FindAll("00402400").Select(d => d as LongText).ToList(); }
        }

        public LongString ConfidentialityConstraintOnPatientDataDescription
        {
            get { return _dicom.FindFirst("00403001") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ConfidentialityConstraintOnPatientDataDescription_
        {
            get { return _dicom.FindAll("00403001").Select(d => d as LongString).ToList(); }
        }

        public CodeString GeneralPurposeScheduledProcedureStepStatus
        {
            get { return _dicom.FindFirst("00404001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GeneralPurposeScheduledProcedureStepStatus_
        {
            get { return _dicom.FindAll("00404001").Select(d => d as CodeString).ToList(); }
        }

        public CodeString GeneralPurposePerformedProcedureStepStatus
        {
            get { return _dicom.FindFirst("00404002") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GeneralPurposePerformedProcedureStepStatus_
        {
            get { return _dicom.FindAll("00404002").Select(d => d as CodeString).ToList(); }
        }

        public CodeString GeneralPurposeScheduledProcedureStepPriority
        {
            get { return _dicom.FindFirst("00404003") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GeneralPurposeScheduledProcedureStepPriority_
        {
            get { return _dicom.FindAll("00404003").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ScheduledProcessingApplicationsCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404004") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledProcessingApplicationsCodeSequence_
        {
            get { return _dicom.FindAll("00404004").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime ScheduledProcedureStepStartDateTime
        {
            get { return _dicom.FindFirst("00404005") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ScheduledProcedureStepStartDateTime_
        {
            get { return _dicom.FindAll("00404005").Select(d => d as DateTime).ToList(); }
        }

        public CodeString MultipleCopiesFlag
        {
            get { return _dicom.FindFirst("00404006") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MultipleCopiesFlag_
        {
            get { return _dicom.FindAll("00404006").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector PerformedProcessingApplicationsCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404007") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedProcessingApplicationsCodeSequence_
        {
            get { return _dicom.FindAll("00404007").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector HumanPerformerCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404009") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HumanPerformerCodeSequence_
        {
            get { return _dicom.FindAll("00404009").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime ScheduledProcedureStepModificationDateTime
        {
            get { return _dicom.FindFirst("00404010") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ScheduledProcedureStepModificationDateTime_
        {
            get { return _dicom.FindAll("00404010").Select(d => d as DateTime).ToList(); }
        }

        public DateTime ExpectedCompletionDateTime
        {
            get { return _dicom.FindFirst("00404011") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ExpectedCompletionDateTime_
        {
            get { return _dicom.FindAll("00404011").Select(d => d as DateTime).ToList(); }
        }

        public SequenceSelector ResultingGeneralPurposePerformedProcedureStepsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404015") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ResultingGeneralPurposePerformedProcedureStepsSequence_
        {
            get { return _dicom.FindAll("00404015").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedGeneralPurposeScheduledProcedureStepSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404016") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedGeneralPurposeScheduledProcedureStepSequence_
        {
            get { return _dicom.FindAll("00404016").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ScheduledWorkitemCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404018") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledWorkitemCodeSequence_
        {
            get { return _dicom.FindAll("00404018").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerformedWorkitemCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404019") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedWorkitemCodeSequence_
        {
            get { return _dicom.FindAll("00404019").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString InputAvailabilityFlag
        {
            get { return _dicom.FindFirst("00404020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InputAvailabilityFlag_
        {
            get { return _dicom.FindAll("00404020").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector InputInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404021") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InputInformationSequence_
        {
            get { return _dicom.FindAll("00404021").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RelevantInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404022") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelevantInformationSequence_
        {
            get { return _dicom.FindAll("00404022").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier ReferencedGeneralPurposeScheduledProcedureStepTransactionUID
        {
            get { return _dicom.FindFirst("00404023") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedGeneralPurposeScheduledProcedureStepTransactionUID_
        {
            get { return _dicom.FindAll("00404023").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public SequenceSelector ScheduledStationNameCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404025") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledStationNameCodeSequence_
        {
            get { return _dicom.FindAll("00404025").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ScheduledStationClassCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404026") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledStationClassCodeSequence_
        {
            get { return _dicom.FindAll("00404026").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ScheduledStationGeographicLocationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404027") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledStationGeographicLocationCodeSequence_
        {
            get { return _dicom.FindAll("00404027").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerformedStationNameCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404028") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedStationNameCodeSequence_
        {
            get { return _dicom.FindAll("00404028").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerformedStationClassCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404029") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedStationClassCodeSequence_
        {
            get { return _dicom.FindAll("00404029").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerformedStationGeographicLocationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedStationGeographicLocationCodeSequence_
        {
            get { return _dicom.FindAll("00404030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RequestedSubsequentWorkitemCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404031") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RequestedSubsequentWorkitemCodeSequence_
        {
            get { return _dicom.FindAll("00404031").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector NonDICOMOutputCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404032") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> NonDICOMOutputCodeSequence_
        {
            get { return _dicom.FindAll("00404032").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OutputInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404033") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OutputInformationSequence_
        {
            get { return _dicom.FindAll("00404033").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ScheduledHumanPerformersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404034") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledHumanPerformersSequence_
        {
            get { return _dicom.FindAll("00404034").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ActualHumanPerformersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00404035") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ActualHumanPerformersSequence_
        {
            get { return _dicom.FindAll("00404035").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString HumanPerformerOrganization
        {
            get { return _dicom.FindFirst("00404036") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HumanPerformerOrganization_
        {
            get { return _dicom.FindAll("00404036").Select(d => d as LongString).ToList(); }
        }

        public PersonName HumanPerformerName
        {
            get { return _dicom.FindFirst("00404037") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> HumanPerformerName_
        {
            get { return _dicom.FindAll("00404037").Select(d => d as PersonName).ToList(); }
        }

        public CodeString RawDataHandling
        {
            get { return _dicom.FindFirst("00404040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RawDataHandling_
        {
            get { return _dicom.FindAll("00404040").Select(d => d as CodeString).ToList(); }
        }

        public CodeString InputReadinessState
        {
            get { return _dicom.FindFirst("00404041") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InputReadinessState_
        {
            get { return _dicom.FindAll("00404041").Select(d => d as CodeString).ToList(); }
        }

        public DateTime PerformedProcedureStepStartDateTime
        {
            get { return _dicom.FindFirst("00404050") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> PerformedProcedureStepStartDateTime_
        {
            get { return _dicom.FindAll("00404050").Select(d => d as DateTime).ToList(); }
        }

        public DateTime PerformedProcedureStepEndDateTime
        {
            get { return _dicom.FindFirst("00404051") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> PerformedProcedureStepEndDateTime_
        {
            get { return _dicom.FindAll("00404051").Select(d => d as DateTime).ToList(); }
        }

        public DateTime ProcedureStepCancellationDateTime
        {
            get { return _dicom.FindFirst("00404052") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ProcedureStepCancellationDateTime_
        {
            get { return _dicom.FindAll("00404052").Select(d => d as DateTime).ToList(); }
        }

        public DecimalString EntranceDoseInmGy
        {
            get { return _dicom.FindFirst("00408302") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EntranceDoseInmGy_
        {
            get { return _dicom.FindAll("00408302").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ReferencedImageRealWorldValueMappingSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00409094") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedImageRealWorldValueMappingSequence_
        {
            get { return _dicom.FindAll("00409094").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RealWorldValueMappingSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00409096") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RealWorldValueMappingSequence_
        {
            get { return _dicom.FindAll("00409096").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PixelValueMappingCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00409098") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PixelValueMappingCodeSequence_
        {
            get { return _dicom.FindAll("00409098").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString LUTLabel
        {
            get { return _dicom.FindFirst("00409210") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> LUTLabel_
        {
            get { return _dicom.FindAll("00409210").Select(d => d as ShortString).ToList(); }
        }

        public UnsignedShort RealWorldValueLastValueMapped
        {
            get { return _dicom.FindFirst("00409211") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RealWorldValueLastValueMapped_
        {
            get { return _dicom.FindAll("00409211").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble RealWorldValueLUTData
        {
            get { return _dicom.FindFirst("00409212") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RealWorldValueLUTData_
        {
            get { return _dicom.FindAll("00409212").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort RealWorldValueFirstValueMapped
        {
            get { return _dicom.FindFirst("00409216") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RealWorldValueFirstValueMapped_
        {
            get { return _dicom.FindAll("00409216").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble RealWorldValueIntercept
        {
            get { return _dicom.FindFirst("00409224") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RealWorldValueIntercept_
        {
            get { return _dicom.FindAll("00409224").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble RealWorldValueSlope
        {
            get { return _dicom.FindFirst("00409225") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RealWorldValueSlope_
        {
            get { return _dicom.FindAll("00409225").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString FindingsFlagTrialRetired
        {
            get { return _dicom.FindFirst("0040A007") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FindingsFlagTrialRetired_
        {
            get { return _dicom.FindAll("0040A007").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RelationshipType
        {
            get { return _dicom.FindFirst("0040A010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RelationshipType_
        {
            get { return _dicom.FindAll("0040A010").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector FindingsSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FindingsSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier FindingsGroupUIDTrialRetired
        {
            get { return _dicom.FindFirst("0040A021") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> FindingsGroupUIDTrialRetired_
        {
            get { return _dicom.FindAll("0040A021").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ReferencedFindingsGroupUIDTrialRetired
        {
            get { return _dicom.FindFirst("0040A022") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedFindingsGroupUIDTrialRetired_
        {
            get { return _dicom.FindAll("0040A022").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public Date FindingsGroupRecordingDateTrialRetired
        {
            get { return _dicom.FindFirst("0040A023") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> FindingsGroupRecordingDateTrialRetired_
        {
            get { return _dicom.FindAll("0040A023").Select(d => d as Date).ToList(); }
        }

        public Time FindingsGroupRecordingTimeTrialRetired
        {
            get { return _dicom.FindFirst("0040A024") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> FindingsGroupRecordingTimeTrialRetired_
        {
            get { return _dicom.FindAll("0040A024").Select(d => d as Time).ToList(); }
        }

        public SequenceSelector FindingsSourceCategoryCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A026") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FindingsSourceCategoryCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A026").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString VerifyingOrganization
        {
            get { return _dicom.FindFirst("0040A027") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> VerifyingOrganization_
        {
            get { return _dicom.FindAll("0040A027").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector DocumentingOrganizationIdentifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A028") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DocumentingOrganizationIdentifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A028").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime VerificationDateTime
        {
            get { return _dicom.FindFirst("0040A030") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> VerificationDateTime_
        {
            get { return _dicom.FindAll("0040A030").Select(d => d as DateTime).ToList(); }
        }

        public DateTime ObservationDateTime
        {
            get { return _dicom.FindFirst("0040A032") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ObservationDateTime_
        {
            get { return _dicom.FindAll("0040A032").Select(d => d as DateTime).ToList(); }
        }

        public CodeString ValueType
        {
            get { return _dicom.FindFirst("0040A040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ValueType_
        {
            get { return _dicom.FindAll("0040A040").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ConceptNameCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A043") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ConceptNameCodeSequence_
        {
            get { return _dicom.FindAll("0040A043").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString MeasurementPrecisionDescriptionTrialRetired
        {
            get { return _dicom.FindFirst("0040A047") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> MeasurementPrecisionDescriptionTrialRetired_
        {
            get { return _dicom.FindAll("0040A047").Select(d => d as LongString).ToList(); }
        }

        public CodeString ContinuityOfContent
        {
            get { return _dicom.FindFirst("0040A050") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContinuityOfContent_
        {
            get { return _dicom.FindAll("0040A050").Select(d => d as CodeString).ToList(); }
        }

        public CodeString UrgencyOrPriorityAlertsTrialRetired
        {
            get { return _dicom.FindFirst("0040A057") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> UrgencyOrPriorityAlertsTrialRetired_
        {
            get { return _dicom.FindAll("0040A057").Select(d => d as CodeString).ToList(); }
        }

        public LongString SequencingIndicatorTrialRetired
        {
            get { return _dicom.FindFirst("0040A060") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SequencingIndicatorTrialRetired_
        {
            get { return _dicom.FindAll("0040A060").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector DocumentIdentifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A066") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DocumentIdentifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A066").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName DocumentAuthorTrialRetired
        {
            get { return _dicom.FindFirst("0040A067") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> DocumentAuthorTrialRetired_
        {
            get { return _dicom.FindAll("0040A067").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector DocumentAuthorIdentifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A068") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DocumentAuthorIdentifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A068").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IdentifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A070") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IdentifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A070").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VerifyingObserverSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A073") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VerifyingObserverSequence_
        {
            get { return _dicom.FindAll("0040A073").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherByteString ObjectBinaryIdentifierTrialRetired
        {
            get { return _dicom.FindFirst("0040A074") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> ObjectBinaryIdentifierTrialRetired_
        {
            get { return _dicom.FindAll("0040A074").Select(d => d as OtherByteString).ToList(); }
        }

        public PersonName VerifyingObserverName
        {
            get { return _dicom.FindFirst("0040A075") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> VerifyingObserverName_
        {
            get { return _dicom.FindAll("0040A075").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector DocumentingObserverIdentifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A076") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DocumentingObserverIdentifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A076").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AuthorObserverSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A078") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AuthorObserverSequence_
        {
            get { return _dicom.FindAll("0040A078").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ParticipantSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A07A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ParticipantSequence_
        {
            get { return _dicom.FindAll("0040A07A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CustodialOrganizationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A07C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CustodialOrganizationSequence_
        {
            get { return _dicom.FindAll("0040A07C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ParticipationType
        {
            get { return _dicom.FindFirst("0040A080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ParticipationType_
        {
            get { return _dicom.FindAll("0040A080").Select(d => d as CodeString).ToList(); }
        }

        public DateTime ParticipationDateTime
        {
            get { return _dicom.FindFirst("0040A082") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ParticipationDateTime_
        {
            get { return _dicom.FindAll("0040A082").Select(d => d as DateTime).ToList(); }
        }

        public CodeString ObserverType
        {
            get { return _dicom.FindFirst("0040A084") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ObserverType_
        {
            get { return _dicom.FindAll("0040A084").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ProcedureIdentifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A085") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProcedureIdentifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A085").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VerifyingObserverIdentificationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A088") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VerifyingObserverIdentificationCodeSequence_
        {
            get { return _dicom.FindAll("0040A088").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherByteString ObjectDirectoryBinaryIdentifierTrialRetired
        {
            get { return _dicom.FindFirst("0040A089") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> ObjectDirectoryBinaryIdentifierTrialRetired_
        {
            get { return _dicom.FindAll("0040A089").Select(d => d as OtherByteString).ToList(); }
        }

        public SequenceSelector EquivalentCDADocumentSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A090") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EquivalentCDADocumentSequenceRetired_
        {
            get { return _dicom.FindAll("0040A090").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ReferencedWaveformChannels
        {
            get { return _dicom.FindFirst("0040A0B0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReferencedWaveformChannels_
        {
            get { return _dicom.FindAll("0040A0B0").Select(d => d as UnsignedShort).ToList(); }
        }

        public Date DateOfDocumentOrVerbalTransactionTrialRetired
        {
            get { return _dicom.FindFirst("0040A110") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> DateOfDocumentOrVerbalTransactionTrialRetired_
        {
            get { return _dicom.FindAll("0040A110").Select(d => d as Date).ToList(); }
        }

        public Time TimeOfDocumentCreationOrVerbalTransactionTrialRetired
        {
            get { return _dicom.FindFirst("0040A112") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> TimeOfDocumentCreationOrVerbalTransactionTrialRetired_
        {
            get { return _dicom.FindAll("0040A112").Select(d => d as Time).ToList(); }
        }

        public DateTime DateTime
        {
            get { return _dicom.FindFirst("0040A120") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> DateTime_
        {
            get { return _dicom.FindAll("0040A120").Select(d => d as DateTime).ToList(); }
        }

        public Date Date
        {
            get { return _dicom.FindFirst("0040A121") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> Date_
        {
            get { return _dicom.FindAll("0040A121").Select(d => d as Date).ToList(); }
        }

        public Time Time
        {
            get { return _dicom.FindFirst("0040A122") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> Time_
        {
            get { return _dicom.FindAll("0040A122").Select(d => d as Time).ToList(); }
        }

        public PersonName PersonName
        {
            get { return _dicom.FindFirst("0040A123") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> PersonName_
        {
            get { return _dicom.FindAll("0040A123").Select(d => d as PersonName).ToList(); }
        }

        public UniqueIdentifier UID
        {
            get { return _dicom.FindFirst("0040A124") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> UID_
        {
            get { return _dicom.FindAll("0040A124").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString ReportStatusIDTrialRetired
        {
            get { return _dicom.FindFirst("0040A125") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReportStatusIDTrialRetired_
        {
            get { return _dicom.FindAll("0040A125").Select(d => d as CodeString).ToList(); }
        }

        public CodeString TemporalRangeType
        {
            get { return _dicom.FindFirst("0040A130") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TemporalRangeType_
        {
            get { return _dicom.FindAll("0040A130").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong ReferencedSamplePositions
        {
            get { return _dicom.FindFirst("0040A132") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> ReferencedSamplePositions_
        {
            get { return _dicom.FindAll("0040A132").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedShort ReferencedFrameNumbers
        {
            get { return _dicom.FindFirst("0040A136") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReferencedFrameNumbers_
        {
            get { return _dicom.FindAll("0040A136").Select(d => d as UnsignedShort).ToList(); }
        }

        public DecimalString ReferencedTimeOffsets
        {
            get { return _dicom.FindFirst("0040A138") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ReferencedTimeOffsets_
        {
            get { return _dicom.FindAll("0040A138").Select(d => d as DecimalString).ToList(); }
        }

        public DateTime ReferencedDateTime
        {
            get { return _dicom.FindFirst("0040A13A") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ReferencedDateTime_
        {
            get { return _dicom.FindAll("0040A13A").Select(d => d as DateTime).ToList(); }
        }

        public UnlimitedText TextValue
        {
            get { return _dicom.FindFirst("0040A160") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> TextValue_
        {
            get { return _dicom.FindAll("0040A160").Select(d => d as UnlimitedText).ToList(); }
        }

        public SequenceSelector ObservationCategoryCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A167") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ObservationCategoryCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A167").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ConceptCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A168") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ConceptCodeSequence_
        {
            get { return _dicom.FindAll("0040A168").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText BibliographicCitationTrialRetired
        {
            get { return _dicom.FindFirst("0040A16A") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> BibliographicCitationTrialRetired_
        {
            get { return _dicom.FindAll("0040A16A").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector PurposeOfReferenceCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A170") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PurposeOfReferenceCodeSequence_
        {
            get { return _dicom.FindAll("0040A170").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier ObservationUIDTrialRetired
        {
            get { return _dicom.FindFirst("0040A171") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ObservationUIDTrialRetired_
        {
            get { return _dicom.FindAll("0040A171").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier ReferencedObservationUIDTrialRetired
        {
            get { return _dicom.FindFirst("0040A172") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedObservationUIDTrialRetired_
        {
            get { return _dicom.FindAll("0040A172").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString ReferencedObservationClassTrialRetired
        {
            get { return _dicom.FindFirst("0040A173") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReferencedObservationClassTrialRetired_
        {
            get { return _dicom.FindAll("0040A173").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ReferencedObjectObservationClassTrialRetired
        {
            get { return _dicom.FindFirst("0040A174") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReferencedObjectObservationClassTrialRetired_
        {
            get { return _dicom.FindAll("0040A174").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort AnnotationGroupNumber
        {
            get { return _dicom.FindFirst("0040A180") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AnnotationGroupNumber_
        {
            get { return _dicom.FindAll("0040A180").Select(d => d as UnsignedShort).ToList(); }
        }

        public Date ObservationDateTrialRetired
        {
            get { return _dicom.FindFirst("0040A192") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ObservationDateTrialRetired_
        {
            get { return _dicom.FindAll("0040A192").Select(d => d as Date).ToList(); }
        }

        public Time ObservationTimeTrialRetired
        {
            get { return _dicom.FindFirst("0040A193") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ObservationTimeTrialRetired_
        {
            get { return _dicom.FindAll("0040A193").Select(d => d as Time).ToList(); }
        }

        public CodeString MeasurementAutomationTrialRetired
        {
            get { return _dicom.FindFirst("0040A194") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MeasurementAutomationTrialRetired_
        {
            get { return _dicom.FindAll("0040A194").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ModifierCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A195") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ModifierCodeSequence_
        {
            get { return _dicom.FindAll("0040A195").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText IdentificationDescriptionTrialRetired
        {
            get { return _dicom.FindFirst("0040A224") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> IdentificationDescriptionTrialRetired_
        {
            get { return _dicom.FindAll("0040A224").Select(d => d as ShortText).ToList(); }
        }

        public CodeString CoordinatesSetGeometricTypeTrialRetired
        {
            get { return _dicom.FindFirst("0040A290") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CoordinatesSetGeometricTypeTrialRetired_
        {
            get { return _dicom.FindAll("0040A290").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector AlgorithmCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A296") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AlgorithmCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A296").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText AlgorithmDescriptionTrialRetired
        {
            get { return _dicom.FindFirst("0040A297") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> AlgorithmDescriptionTrialRetired_
        {
            get { return _dicom.FindAll("0040A297").Select(d => d as ShortText).ToList(); }
        }

        public SignedLong PixelCoordinatesSetTrialRetired
        {
            get { return _dicom.FindFirst("0040A29A") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> PixelCoordinatesSetTrialRetired_
        {
            get { return _dicom.FindAll("0040A29A").Select(d => d as SignedLong).ToList(); }
        }

        public SequenceSelector MeasuredValueSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A300") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MeasuredValueSequence_
        {
            get { return _dicom.FindAll("0040A300").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector NumericValueQualifierCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A301") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> NumericValueQualifierCodeSequence_
        {
            get { return _dicom.FindAll("0040A301").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName CurrentObserverTrialRetired
        {
            get { return _dicom.FindFirst("0040A307") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> CurrentObserverTrialRetired_
        {
            get { return _dicom.FindAll("0040A307").Select(d => d as PersonName).ToList(); }
        }

        public DecimalString NumericValue
        {
            get { return _dicom.FindFirst("0040A30A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NumericValue_
        {
            get { return _dicom.FindAll("0040A30A").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ReferencedAccessionSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A313") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedAccessionSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A313").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText ReportStatusCommentTrialRetired
        {
            get { return _dicom.FindFirst("0040A33A") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ReportStatusCommentTrialRetired_
        {
            get { return _dicom.FindAll("0040A33A").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector ProcedureContextSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A340") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProcedureContextSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A340").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName VerbalSourceTrialRetired
        {
            get { return _dicom.FindFirst("0040A352") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> VerbalSourceTrialRetired_
        {
            get { return _dicom.FindAll("0040A352").Select(d => d as PersonName).ToList(); }
        }

        public ShortText AddressTrialRetired
        {
            get { return _dicom.FindFirst("0040A353") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> AddressTrialRetired_
        {
            get { return _dicom.FindAll("0040A353").Select(d => d as ShortText).ToList(); }
        }

        public LongString TelephoneNumberTrialRetired
        {
            get { return _dicom.FindFirst("0040A354") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TelephoneNumberTrialRetired_
        {
            get { return _dicom.FindAll("0040A354").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector VerbalSourceIdentifierCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A358") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VerbalSourceIdentifierCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A358").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PredecessorDocumentsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A360") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PredecessorDocumentsSequence_
        {
            get { return _dicom.FindAll("0040A360").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedRequestSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A370") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedRequestSequence_
        {
            get { return _dicom.FindAll("0040A370").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerformedProcedureCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A372") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedProcedureCodeSequence_
        {
            get { return _dicom.FindAll("0040A372").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CurrentRequestedProcedureEvidenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A375") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CurrentRequestedProcedureEvidenceSequence_
        {
            get { return _dicom.FindAll("0040A375").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReportDetailSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A380") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReportDetailSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A380").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PertinentOtherEvidenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A385") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PertinentOtherEvidenceSequence_
        {
            get { return _dicom.FindAll("0040A385").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector HL7StructuredDocumentReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A390") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HL7StructuredDocumentReferenceSequence_
        {
            get { return _dicom.FindAll("0040A390").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier ObservationSubjectUIDTrialRetired
        {
            get { return _dicom.FindFirst("0040A402") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ObservationSubjectUIDTrialRetired_
        {
            get { return _dicom.FindAll("0040A402").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString ObservationSubjectClassTrialRetired
        {
            get { return _dicom.FindFirst("0040A403") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ObservationSubjectClassTrialRetired_
        {
            get { return _dicom.FindAll("0040A403").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ObservationSubjectTypeCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A404") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ObservationSubjectTypeCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A404").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString CompletionFlag
        {
            get { return _dicom.FindFirst("0040A491") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompletionFlag_
        {
            get { return _dicom.FindAll("0040A491").Select(d => d as CodeString).ToList(); }
        }

        public LongString CompletionFlagDescription
        {
            get { return _dicom.FindFirst("0040A492") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CompletionFlagDescription_
        {
            get { return _dicom.FindAll("0040A492").Select(d => d as LongString).ToList(); }
        }

        public CodeString VerificationFlag
        {
            get { return _dicom.FindFirst("0040A493") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VerificationFlag_
        {
            get { return _dicom.FindAll("0040A493").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ArchiveRequested
        {
            get { return _dicom.FindFirst("0040A494") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ArchiveRequested_
        {
            get { return _dicom.FindAll("0040A494").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PreliminaryFlag
        {
            get { return _dicom.FindFirst("0040A496") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PreliminaryFlag_
        {
            get { return _dicom.FindAll("0040A496").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ContentTemplateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A504") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContentTemplateSequence_
        {
            get { return _dicom.FindAll("0040A504").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IdenticalDocumentsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A525") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IdenticalDocumentsSequence_
        {
            get { return _dicom.FindAll("0040A525").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ObservationSubjectContextFlagTrialRetired
        {
            get { return _dicom.FindFirst("0040A600") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ObservationSubjectContextFlagTrialRetired_
        {
            get { return _dicom.FindAll("0040A600").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ObserverContextFlagTrialRetired
        {
            get { return _dicom.FindFirst("0040A601") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ObserverContextFlagTrialRetired_
        {
            get { return _dicom.FindAll("0040A601").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ProcedureContextFlagTrialRetired
        {
            get { return _dicom.FindFirst("0040A603") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ProcedureContextFlagTrialRetired_
        {
            get { return _dicom.FindAll("0040A603").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ContentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A730") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContentSequence_
        {
            get { return _dicom.FindAll("0040A730").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RelationshipSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A731") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelationshipSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A731").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RelationshipTypeCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A732") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelationshipTypeCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A732").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LanguageCodeSequenceTrialRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040A744") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LanguageCodeSequenceTrialRetired_
        {
            get { return _dicom.FindAll("0040A744").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText UniformResourceLocatorTrialRetired
        {
            get { return _dicom.FindFirst("0040A992") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> UniformResourceLocatorTrialRetired_
        {
            get { return _dicom.FindAll("0040A992").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector WaveformAnnotationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040B020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> WaveformAnnotationSequence_
        {
            get { return _dicom.FindAll("0040B020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString TemplateIdentifier
        {
            get { return _dicom.FindFirst("0040DB00") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TemplateIdentifier_
        {
            get { return _dicom.FindAll("0040DB00").Select(d => d as CodeString).ToList(); }
        }

        public DateTime TemplateVersionRetired
        {
            get { return _dicom.FindFirst("0040DB06") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> TemplateVersionRetired_
        {
            get { return _dicom.FindAll("0040DB06").Select(d => d as DateTime).ToList(); }
        }

        public DateTime TemplateLocalVersionRetired
        {
            get { return _dicom.FindFirst("0040DB07") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> TemplateLocalVersionRetired_
        {
            get { return _dicom.FindAll("0040DB07").Select(d => d as DateTime).ToList(); }
        }

        public CodeString TemplateExtensionFlagRetired
        {
            get { return _dicom.FindFirst("0040DB0B") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TemplateExtensionFlagRetired_
        {
            get { return _dicom.FindAll("0040DB0B").Select(d => d as CodeString).ToList(); }
        }

        public UniqueIdentifier TemplateExtensionOrganizationUIDRetired
        {
            get { return _dicom.FindFirst("0040DB0C") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> TemplateExtensionOrganizationUIDRetired_
        {
            get { return _dicom.FindAll("0040DB0C").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier TemplateExtensionCreatorUIDRetired
        {
            get { return _dicom.FindFirst("0040DB0D") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> TemplateExtensionCreatorUIDRetired_
        {
            get { return _dicom.FindAll("0040DB0D").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UnsignedLong ReferencedContentItemIdentifier
        {
            get { return _dicom.FindFirst("0040DB73") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> ReferencedContentItemIdentifier_
        {
            get { return _dicom.FindAll("0040DB73").Select(d => d as UnsignedLong).ToList(); }
        }

        public ShortText HL7InstanceIdentifier
        {
            get { return _dicom.FindFirst("0040E001") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> HL7InstanceIdentifier_
        {
            get { return _dicom.FindAll("0040E001").Select(d => d as ShortText).ToList(); }
        }

        public DateTime HL7DocumentEffectiveTime
        {
            get { return _dicom.FindFirst("0040E004") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> HL7DocumentEffectiveTime_
        {
            get { return _dicom.FindAll("0040E004").Select(d => d as DateTime).ToList(); }
        }

        public SequenceSelector HL7DocumentTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040E006") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HL7DocumentTypeCodeSequence_
        {
            get { return _dicom.FindAll("0040E006").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector DocumentClassCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040E008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DocumentClassCodeSequence_
        {
            get { return _dicom.FindAll("0040E008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnlimitedText RetrieveURI
        {
            get { return _dicom.FindFirst("0040E010") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> RetrieveURI_
        {
            get { return _dicom.FindAll("0040E010").Select(d => d as UnlimitedText).ToList(); }
        }

        public UniqueIdentifier RetrieveLocationUID
        {
            get { return _dicom.FindFirst("0040E011") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> RetrieveLocationUID_
        {
            get { return _dicom.FindAll("0040E011").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString TypeOfInstances
        {
            get { return _dicom.FindFirst("0040E020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TypeOfInstances_
        {
            get { return _dicom.FindAll("0040E020").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DICOMRetrievalSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040E021") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DICOMRetrievalSequence_
        {
            get { return _dicom.FindAll("0040E021").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector DICOMMediaRetrievalSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040E022") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DICOMMediaRetrievalSequence_
        {
            get { return _dicom.FindAll("0040E022").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector WADORetrievalSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040E023") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> WADORetrievalSequence_
        {
            get { return _dicom.FindAll("0040E023").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector XDSRetrievalSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0040E024") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> XDSRetrievalSequence_
        {
            get { return _dicom.FindAll("0040E024").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier RepositoryUniqueID
        {
            get { return _dicom.FindFirst("0040E030") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> RepositoryUniqueID_
        {
            get { return _dicom.FindAll("0040E030").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public UniqueIdentifier HomeCommunityID
        {
            get { return _dicom.FindFirst("0040E031") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> HomeCommunityID_
        {
            get { return _dicom.FindAll("0040E031").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public ShortText DocumentTitle
        {
            get { return _dicom.FindFirst("00420010") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> DocumentTitle_
        {
            get { return _dicom.FindAll("00420010").Select(d => d as ShortText).ToList(); }
        }

        public OtherByteString EncapsulatedDocument
        {
            get { return _dicom.FindFirst("00420011") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> EncapsulatedDocument_
        {
            get { return _dicom.FindAll("00420011").Select(d => d as OtherByteString).ToList(); }
        }

        public LongString MIMETypeOfEncapsulatedDocument
        {
            get { return _dicom.FindFirst("00420012") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> MIMETypeOfEncapsulatedDocument_
        {
            get { return _dicom.FindAll("00420012").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector SourceInstanceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00420013") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceInstanceSequence_
        {
            get { return _dicom.FindAll("00420013").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ListOfMIMETypes
        {
            get { return _dicom.FindFirst("00420014") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ListOfMIMETypes_
        {
            get { return _dicom.FindAll("00420014").Select(d => d as LongString).ToList(); }
        }

        public ShortText ProductPackageIdentifier
        {
            get { return _dicom.FindFirst("00440001") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ProductPackageIdentifier_
        {
            get { return _dicom.FindAll("00440001").Select(d => d as ShortText).ToList(); }
        }

        public CodeString SubstanceAdministrationApproval
        {
            get { return _dicom.FindFirst("00440002") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SubstanceAdministrationApproval_
        {
            get { return _dicom.FindAll("00440002").Select(d => d as CodeString).ToList(); }
        }

        public LongText ApprovalStatusFurtherDescription
        {
            get { return _dicom.FindFirst("00440003") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ApprovalStatusFurtherDescription_
        {
            get { return _dicom.FindAll("00440003").Select(d => d as LongText).ToList(); }
        }

        public DateTime ApprovalStatusDateTime
        {
            get { return _dicom.FindFirst("00440004") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ApprovalStatusDateTime_
        {
            get { return _dicom.FindAll("00440004").Select(d => d as DateTime).ToList(); }
        }

        public SequenceSelector ProductTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00440007") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProductTypeCodeSequence_
        {
            get { return _dicom.FindAll("00440007").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ProductName
        {
            get { return _dicom.FindFirst("00440008") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ProductName_
        {
            get { return _dicom.FindAll("00440008").Select(d => d as LongString).ToList(); }
        }

        public LongText ProductDescription
        {
            get { return _dicom.FindFirst("00440009") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ProductDescription_
        {
            get { return _dicom.FindAll("00440009").Select(d => d as LongText).ToList(); }
        }

        public LongString ProductLotIdentifier
        {
            get { return _dicom.FindFirst("0044000A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ProductLotIdentifier_
        {
            get { return _dicom.FindAll("0044000A").Select(d => d as LongString).ToList(); }
        }

        public DateTime ProductExpirationDateTime
        {
            get { return _dicom.FindFirst("0044000B") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> ProductExpirationDateTime_
        {
            get { return _dicom.FindAll("0044000B").Select(d => d as DateTime).ToList(); }
        }

        public DateTime SubstanceAdministrationDateTime
        {
            get { return _dicom.FindFirst("00440010") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> SubstanceAdministrationDateTime_
        {
            get { return _dicom.FindAll("00440010").Select(d => d as DateTime).ToList(); }
        }

        public LongString SubstanceAdministrationNotes
        {
            get { return _dicom.FindFirst("00440011") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SubstanceAdministrationNotes_
        {
            get { return _dicom.FindAll("00440011").Select(d => d as LongString).ToList(); }
        }

        public LongString SubstanceAdministrationDeviceID
        {
            get { return _dicom.FindFirst("00440012") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SubstanceAdministrationDeviceID_
        {
            get { return _dicom.FindAll("00440012").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ProductParameterSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00440013") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProductParameterSequence_
        {
            get { return _dicom.FindAll("00440013").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SubstanceAdministrationParameterSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00440019") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SubstanceAdministrationParameterSequence_
        {
            get { return _dicom.FindAll("00440019").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString LensDescription
        {
            get { return _dicom.FindFirst("00460012") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> LensDescription_
        {
            get { return _dicom.FindAll("00460012").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector RightLensSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460014") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RightLensSequence_
        {
            get { return _dicom.FindAll("00460014").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LeftLensSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460015") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LeftLensSequence_
        {
            get { return _dicom.FindAll("00460015").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector UnspecifiedLateralityLensSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460016") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> UnspecifiedLateralityLensSequence_
        {
            get { return _dicom.FindAll("00460016").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CylinderSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460018") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CylinderSequence_
        {
            get { return _dicom.FindAll("00460018").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PrismSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460028") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrismSequence_
        {
            get { return _dicom.FindAll("00460028").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble HorizontalPrismPower
        {
            get { return _dicom.FindFirst("00460030") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> HorizontalPrismPower_
        {
            get { return _dicom.FindAll("00460030").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString HorizontalPrismBase
        {
            get { return _dicom.FindFirst("00460032") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> HorizontalPrismBase_
        {
            get { return _dicom.FindAll("00460032").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble VerticalPrismPower
        {
            get { return _dicom.FindFirst("00460034") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> VerticalPrismPower_
        {
            get { return _dicom.FindAll("00460034").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString VerticalPrismBase
        {
            get { return _dicom.FindFirst("00460036") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VerticalPrismBase_
        {
            get { return _dicom.FindAll("00460036").Select(d => d as CodeString).ToList(); }
        }

        public CodeString LensSegmentType
        {
            get { return _dicom.FindFirst("00460038") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LensSegmentType_
        {
            get { return _dicom.FindAll("00460038").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble OpticalTransmittance
        {
            get { return _dicom.FindFirst("00460040") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> OpticalTransmittance_
        {
            get { return _dicom.FindAll("00460040").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ChannelWidth
        {
            get { return _dicom.FindFirst("00460042") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ChannelWidth_
        {
            get { return _dicom.FindAll("00460042").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble PupilSize
        {
            get { return _dicom.FindFirst("00460044") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> PupilSize_
        {
            get { return _dicom.FindAll("00460044").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble CornealSize
        {
            get { return _dicom.FindFirst("00460046") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> CornealSize_
        {
            get { return _dicom.FindAll("00460046").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector AutorefractionRightEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AutorefractionRightEyeSequence_
        {
            get { return _dicom.FindAll("00460050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AutorefractionLeftEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460052") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AutorefractionLeftEyeSequence_
        {
            get { return _dicom.FindAll("00460052").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble DistancePupillaryDistance
        {
            get { return _dicom.FindFirst("00460060") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DistancePupillaryDistance_
        {
            get { return _dicom.FindAll("00460060").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble NearPupillaryDistance
        {
            get { return _dicom.FindFirst("00460062") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> NearPupillaryDistance_
        {
            get { return _dicom.FindAll("00460062").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble IntermediatePupillaryDistance
        {
            get { return _dicom.FindFirst("00460063") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> IntermediatePupillaryDistance_
        {
            get { return _dicom.FindAll("00460063").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble OtherPupillaryDistance
        {
            get { return _dicom.FindFirst("00460064") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> OtherPupillaryDistance_
        {
            get { return _dicom.FindAll("00460064").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector KeratometryRightEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460070") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> KeratometryRightEyeSequence_
        {
            get { return _dicom.FindAll("00460070").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector KeratometryLeftEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460071") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> KeratometryLeftEyeSequence_
        {
            get { return _dicom.FindAll("00460071").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SteepKeratometricAxisSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460074") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SteepKeratometricAxisSequence_
        {
            get { return _dicom.FindAll("00460074").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble RadiusOfCurvature
        {
            get { return _dicom.FindFirst("00460075") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RadiusOfCurvature_
        {
            get { return _dicom.FindAll("00460075").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble KeratometricPower
        {
            get { return _dicom.FindFirst("00460076") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> KeratometricPower_
        {
            get { return _dicom.FindAll("00460076").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble KeratometricAxis
        {
            get { return _dicom.FindFirst("00460077") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> KeratometricAxis_
        {
            get { return _dicom.FindAll("00460077").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector FlatKeratometricAxisSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460080") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FlatKeratometricAxisSequence_
        {
            get { return _dicom.FindAll("00460080").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString BackgroundColor
        {
            get { return _dicom.FindFirst("00460092") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BackgroundColor_
        {
            get { return _dicom.FindAll("00460092").Select(d => d as CodeString).ToList(); }
        }

        public CodeString Optotype
        {
            get { return _dicom.FindFirst("00460094") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Optotype_
        {
            get { return _dicom.FindAll("00460094").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OptotypePresentation
        {
            get { return _dicom.FindFirst("00460095") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OptotypePresentation_
        {
            get { return _dicom.FindAll("00460095").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector SubjectiveRefractionRightEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460097") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SubjectiveRefractionRightEyeSequence_
        {
            get { return _dicom.FindAll("00460097").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SubjectiveRefractionLeftEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460098") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SubjectiveRefractionLeftEyeSequence_
        {
            get { return _dicom.FindAll("00460098").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AddNearSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AddNearSequence_
        {
            get { return _dicom.FindAll("00460100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AddIntermediateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460101") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AddIntermediateSequence_
        {
            get { return _dicom.FindAll("00460101").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AddOtherSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460102") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AddOtherSequence_
        {
            get { return _dicom.FindAll("00460102").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble AddPower
        {
            get { return _dicom.FindFirst("00460104") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> AddPower_
        {
            get { return _dicom.FindAll("00460104").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ViewingDistance
        {
            get { return _dicom.FindFirst("00460106") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ViewingDistance_
        {
            get { return _dicom.FindAll("00460106").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector VisualAcuityTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460121") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualAcuityTypeCodeSequence_
        {
            get { return _dicom.FindAll("00460121").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VisualAcuityRightEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460122") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualAcuityRightEyeSequence_
        {
            get { return _dicom.FindAll("00460122").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VisualAcuityLeftEyeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460123") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualAcuityLeftEyeSequence_
        {
            get { return _dicom.FindAll("00460123").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector VisualAcuityBothEyesOpenSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460124") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> VisualAcuityBothEyesOpenSequence_
        {
            get { return _dicom.FindAll("00460124").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ViewingDistanceType
        {
            get { return _dicom.FindFirst("00460125") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ViewingDistanceType_
        {
            get { return _dicom.FindAll("00460125").Select(d => d as CodeString).ToList(); }
        }

        public SignedShort VisualAcuityModifiers
        {
            get { return _dicom.FindFirst("00460135") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> VisualAcuityModifiers_
        {
            get { return _dicom.FindAll("00460135").Select(d => d as SignedShort).ToList(); }
        }

        public FloatingPointDouble DecimalVisualAcuity
        {
            get { return _dicom.FindFirst("00460137") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DecimalVisualAcuity_
        {
            get { return _dicom.FindAll("00460137").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public LongString OptotypeDetailedDefinition
        {
            get { return _dicom.FindFirst("00460139") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OptotypeDetailedDefinition_
        {
            get { return _dicom.FindAll("00460139").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReferencedRefractiveMeasurementsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00460145") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedRefractiveMeasurementsSequence_
        {
            get { return _dicom.FindAll("00460145").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble SpherePower
        {
            get { return _dicom.FindFirst("00460146") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SpherePower_
        {
            get { return _dicom.FindAll("00460146").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble CylinderPower
        {
            get { return _dicom.FindFirst("00460147") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> CylinderPower_
        {
            get { return _dicom.FindAll("00460147").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointSingle ImagedVolumeWidth
        {
            get { return _dicom.FindFirst("00480001") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ImagedVolumeWidth_
        {
            get { return _dicom.FindAll("00480001").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ImagedVolumeHeight
        {
            get { return _dicom.FindFirst("00480002") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ImagedVolumeHeight_
        {
            get { return _dicom.FindAll("00480002").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ImagedVolumeDepth
        {
            get { return _dicom.FindFirst("00480003") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ImagedVolumeDepth_
        {
            get { return _dicom.FindAll("00480003").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedLong TotalPixelMatrixColumns
        {
            get { return _dicom.FindFirst("00480006") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TotalPixelMatrixColumns_
        {
            get { return _dicom.FindAll("00480006").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong TotalPixelMatrixRows
        {
            get { return _dicom.FindFirst("00480007") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TotalPixelMatrixRows_
        {
            get { return _dicom.FindAll("00480007").Select(d => d as UnsignedLong).ToList(); }
        }

        public SequenceSelector TotalPixelMatrixOriginSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TotalPixelMatrixOriginSequence_
        {
            get { return _dicom.FindAll("00480008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString SpecimenLabelInImage
        {
            get { return _dicom.FindFirst("00480010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SpecimenLabelInImage_
        {
            get { return _dicom.FindAll("00480010").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FocusMethod
        {
            get { return _dicom.FindFirst("00480011") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FocusMethod_
        {
            get { return _dicom.FindAll("00480011").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ExtendedDepthOfField
        {
            get { return _dicom.FindFirst("00480012") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExtendedDepthOfField_
        {
            get { return _dicom.FindAll("00480012").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfFocalPlanes
        {
            get { return _dicom.FindFirst("00480013") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfFocalPlanes_
        {
            get { return _dicom.FindAll("00480013").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointSingle DistanceBetweenFocalPlanes
        {
            get { return _dicom.FindFirst("00480014") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DistanceBetweenFocalPlanes_
        {
            get { return _dicom.FindAll("00480014").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedShort RecommendedAbsentPixelCIELabValue
        {
            get { return _dicom.FindFirst("00480015") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RecommendedAbsentPixelCIELabValue_
        {
            get { return _dicom.FindAll("00480015").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector IlluminatorTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IlluminatorTypeCodeSequence_
        {
            get { return _dicom.FindAll("00480100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString ImageOrientationSlide
        {
            get { return _dicom.FindFirst("00480102") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImageOrientationSlide_
        {
            get { return _dicom.FindAll("00480102").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector OpticalPathSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480105") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OpticalPathSequence_
        {
            get { return _dicom.FindAll("00480105").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString OpticalPathIdentifier
        {
            get { return _dicom.FindFirst("00480106") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> OpticalPathIdentifier_
        {
            get { return _dicom.FindAll("00480106").Select(d => d as ShortString).ToList(); }
        }

        public ShortText OpticalPathDescription
        {
            get { return _dicom.FindFirst("00480107") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> OpticalPathDescription_
        {
            get { return _dicom.FindAll("00480107").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector IlluminationColorCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480108") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IlluminationColorCodeSequence_
        {
            get { return _dicom.FindAll("00480108").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SpecimenReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SpecimenReferenceSequence_
        {
            get { return _dicom.FindAll("00480110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString CondenserLensPower
        {
            get { return _dicom.FindFirst("00480111") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CondenserLensPower_
        {
            get { return _dicom.FindAll("00480111").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ObjectiveLensPower
        {
            get { return _dicom.FindFirst("00480112") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ObjectiveLensPower_
        {
            get { return _dicom.FindAll("00480112").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ObjectiveLensNumericalAperture
        {
            get { return _dicom.FindFirst("00480113") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ObjectiveLensNumericalAperture_
        {
            get { return _dicom.FindAll("00480113").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector PaletteColorLookupTableSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480120") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PaletteColorLookupTableSequence_
        {
            get { return _dicom.FindAll("00480120").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedImageNavigationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480200") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedImageNavigationSequence_
        {
            get { return _dicom.FindAll("00480200").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort TopLeftHandCornerOfLocalizerArea
        {
            get { return _dicom.FindFirst("00480201") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> TopLeftHandCornerOfLocalizerArea_
        {
            get { return _dicom.FindAll("00480201").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort BottomRightHandCornerOfLocalizerArea
        {
            get { return _dicom.FindFirst("00480202") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> BottomRightHandCornerOfLocalizerArea_
        {
            get { return _dicom.FindAll("00480202").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector OpticalPathIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00480207") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OpticalPathIdentificationSequence_
        {
            get { return _dicom.FindAll("00480207").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PlanePositionSlideSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0048021A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlanePositionSlideSequence_
        {
            get { return _dicom.FindAll("0048021A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SignedLong RowPositionInTotalImagePixelMatrix
        {
            get { return _dicom.FindFirst("0048021E") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> RowPositionInTotalImagePixelMatrix_
        {
            get { return _dicom.FindAll("0048021E").Select(d => d as SignedLong).ToList(); }
        }

        public SignedLong ColumnPositionInTotalImagePixelMatrix
        {
            get { return _dicom.FindFirst("0048021F") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> ColumnPositionInTotalImagePixelMatrix_
        {
            get { return _dicom.FindAll("0048021F").Select(d => d as SignedLong).ToList(); }
        }

        public CodeString PixelOriginInterpretation
        {
            get { return _dicom.FindFirst("00480301") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PixelOriginInterpretation_
        {
            get { return _dicom.FindAll("00480301").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CalibrationImage
        {
            get { return _dicom.FindFirst("00500004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CalibrationImage_
        {
            get { return _dicom.FindAll("00500004").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00500010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DeviceSequence_
        {
            get { return _dicom.FindAll("00500010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContainerComponentTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00500012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContainerComponentTypeCodeSequence_
        {
            get { return _dicom.FindAll("00500012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble ContainerComponentThickness
        {
            get { return _dicom.FindFirst("00500013") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ContainerComponentThickness_
        {
            get { return _dicom.FindAll("00500013").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public DecimalString DeviceLength
        {
            get { return _dicom.FindFirst("00500014") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeviceLength_
        {
            get { return _dicom.FindAll("00500014").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointDouble ContainerComponentWidth
        {
            get { return _dicom.FindFirst("00500015") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ContainerComponentWidth_
        {
            get { return _dicom.FindAll("00500015").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public DecimalString DeviceDiameter
        {
            get { return _dicom.FindFirst("00500016") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeviceDiameter_
        {
            get { return _dicom.FindAll("00500016").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString DeviceDiameterUnits
        {
            get { return _dicom.FindFirst("00500017") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DeviceDiameterUnits_
        {
            get { return _dicom.FindAll("00500017").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString DeviceVolume
        {
            get { return _dicom.FindFirst("00500018") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeviceVolume_
        {
            get { return _dicom.FindAll("00500018").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString InterMarkerDistance
        {
            get { return _dicom.FindFirst("00500019") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> InterMarkerDistance_
        {
            get { return _dicom.FindAll("00500019").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString ContainerComponentMaterial
        {
            get { return _dicom.FindFirst("0050001A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContainerComponentMaterial_
        {
            get { return _dicom.FindAll("0050001A").Select(d => d as CodeString).ToList(); }
        }

        public LongString ContainerComponentID
        {
            get { return _dicom.FindFirst("0050001B") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContainerComponentID_
        {
            get { return _dicom.FindAll("0050001B").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointDouble ContainerComponentLength
        {
            get { return _dicom.FindFirst("0050001C") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ContainerComponentLength_
        {
            get { return _dicom.FindAll("0050001C").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ContainerComponentDiameter
        {
            get { return _dicom.FindFirst("0050001D") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ContainerComponentDiameter_
        {
            get { return _dicom.FindAll("0050001D").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public LongString ContainerComponentDescription
        {
            get { return _dicom.FindFirst("0050001E") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContainerComponentDescription_
        {
            get { return _dicom.FindAll("0050001E").Select(d => d as LongString).ToList(); }
        }

        public LongString DeviceDescription
        {
            get { return _dicom.FindFirst("00500020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DeviceDescription_
        {
            get { return _dicom.FindAll("00500020").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle ContrastBolusIngredientPercentByVolume
        {
            get { return _dicom.FindFirst("00520001") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ContrastBolusIngredientPercentByVolume_
        {
            get { return _dicom.FindAll("00520001").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointDouble OCTFocalDistance
        {
            get { return _dicom.FindFirst("00520002") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> OCTFocalDistance_
        {
            get { return _dicom.FindAll("00520002").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble BeamSpotSize
        {
            get { return _dicom.FindFirst("00520003") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> BeamSpotSize_
        {
            get { return _dicom.FindAll("00520003").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble EffectiveRefractiveIndex
        {
            get { return _dicom.FindFirst("00520004") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> EffectiveRefractiveIndex_
        {
            get { return _dicom.FindAll("00520004").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString OCTAcquisitionDomain
        {
            get { return _dicom.FindFirst("00520006") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OCTAcquisitionDomain_
        {
            get { return _dicom.FindAll("00520006").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble OCTOpticalCenterWavelength
        {
            get { return _dicom.FindFirst("00520007") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> OCTOpticalCenterWavelength_
        {
            get { return _dicom.FindAll("00520007").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble AxialResolution
        {
            get { return _dicom.FindFirst("00520008") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> AxialResolution_
        {
            get { return _dicom.FindAll("00520008").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble RangingDepth
        {
            get { return _dicom.FindFirst("00520009") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RangingDepth_
        {
            get { return _dicom.FindAll("00520009").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ALineRate
        {
            get { return _dicom.FindFirst("00520011") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ALineRate_
        {
            get { return _dicom.FindAll("00520011").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort ALinesPerFrame
        {
            get { return _dicom.FindFirst("00520012") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ALinesPerFrame_
        {
            get { return _dicom.FindAll("00520012").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble CatheterRotationalRate
        {
            get { return _dicom.FindFirst("00520013") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> CatheterRotationalRate_
        {
            get { return _dicom.FindAll("00520013").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ALinePixelSpacing
        {
            get { return _dicom.FindFirst("00520014") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ALinePixelSpacing_
        {
            get { return _dicom.FindAll("00520014").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector ModeOfPercutaneousAccessSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00520016") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ModeOfPercutaneousAccessSequence_
        {
            get { return _dicom.FindAll("00520016").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IntravascularOCTFrameTypeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00520025") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IntravascularOCTFrameTypeSequence_
        {
            get { return _dicom.FindAll("00520025").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString OCTZOffsetApplied
        {
            get { return _dicom.FindFirst("00520026") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OCTZOffsetApplied_
        {
            get { return _dicom.FindAll("00520026").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector IntravascularFrameContentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00520027") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IntravascularFrameContentSequence_
        {
            get { return _dicom.FindAll("00520027").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble IntravascularLongitudinalDistance
        {
            get { return _dicom.FindFirst("00520028") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> IntravascularLongitudinalDistance_
        {
            get { return _dicom.FindAll("00520028").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector IntravascularOCTFrameContentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00520029") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IntravascularOCTFrameContentSequence_
        {
            get { return _dicom.FindAll("00520029").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SignedShort OCTZOffsetCorrection
        {
            get { return _dicom.FindFirst("00520030") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> OCTZOffsetCorrection_
        {
            get { return _dicom.FindAll("00520030").Select(d => d as SignedShort).ToList(); }
        }

        public CodeString CatheterDirectionOfRotation
        {
            get { return _dicom.FindFirst("00520031") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CatheterDirectionOfRotation_
        {
            get { return _dicom.FindAll("00520031").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble SeamLineLocation
        {
            get { return _dicom.FindFirst("00520033") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SeamLineLocation_
        {
            get { return _dicom.FindAll("00520033").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble FirstALineLocation
        {
            get { return _dicom.FindFirst("00520034") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> FirstALineLocation_
        {
            get { return _dicom.FindAll("00520034").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort SeamLineIndex
        {
            get { return _dicom.FindFirst("00520036") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SeamLineIndex_
        {
            get { return _dicom.FindAll("00520036").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfPaddedAlines
        {
            get { return _dicom.FindFirst("00520038") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfPaddedAlines_
        {
            get { return _dicom.FindAll("00520038").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString InterpolationType
        {
            get { return _dicom.FindFirst("00520039") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InterpolationType_
        {
            get { return _dicom.FindAll("00520039").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RefractiveIndexApplied
        {
            get { return _dicom.FindFirst("0052003A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RefractiveIndexApplied_
        {
            get { return _dicom.FindAll("0052003A").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfEnergyWindows
        {
            get { return _dicom.FindFirst("00540011") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfEnergyWindows_
        {
            get { return _dicom.FindAll("00540011").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector EnergyWindowInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EnergyWindowInformationSequence_
        {
            get { return _dicom.FindAll("00540012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector EnergyWindowRangeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540013") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EnergyWindowRangeSequence_
        {
            get { return _dicom.FindAll("00540013").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString EnergyWindowLowerLimit
        {
            get { return _dicom.FindFirst("00540014") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EnergyWindowLowerLimit_
        {
            get { return _dicom.FindAll("00540014").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString EnergyWindowUpperLimit
        {
            get { return _dicom.FindFirst("00540015") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EnergyWindowUpperLimit_
        {
            get { return _dicom.FindAll("00540015").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector RadiopharmaceuticalInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540016") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RadiopharmaceuticalInformationSequence_
        {
            get { return _dicom.FindAll("00540016").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ResidualSyringeCounts
        {
            get { return _dicom.FindFirst("00540017") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ResidualSyringeCounts_
        {
            get { return _dicom.FindAll("00540017").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString EnergyWindowName
        {
            get { return _dicom.FindFirst("00540018") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> EnergyWindowName_
        {
            get { return _dicom.FindAll("00540018").Select(d => d as ShortString).ToList(); }
        }

        public UnsignedShort DetectorVector
        {
            get { return _dicom.FindFirst("00540020") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DetectorVector_
        {
            get { return _dicom.FindAll("00540020").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfDetectors
        {
            get { return _dicom.FindFirst("00540021") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfDetectors_
        {
            get { return _dicom.FindAll("00540021").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector DetectorInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540022") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DetectorInformationSequence_
        {
            get { return _dicom.FindAll("00540022").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort PhaseVector
        {
            get { return _dicom.FindFirst("00540030") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PhaseVector_
        {
            get { return _dicom.FindAll("00540030").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfPhases
        {
            get { return _dicom.FindFirst("00540031") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfPhases_
        {
            get { return _dicom.FindAll("00540031").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector PhaseInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540032") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PhaseInformationSequence_
        {
            get { return _dicom.FindAll("00540032").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NumberOfFramesInPhase
        {
            get { return _dicom.FindFirst("00540033") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfFramesInPhase_
        {
            get { return _dicom.FindAll("00540033").Select(d => d as UnsignedShort).ToList(); }
        }

        public IntegerString PhaseDelay
        {
            get { return _dicom.FindFirst("00540036") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PhaseDelay_
        {
            get { return _dicom.FindAll("00540036").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString PauseBetweenFrames
        {
            get { return _dicom.FindFirst("00540038") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PauseBetweenFrames_
        {
            get { return _dicom.FindAll("00540038").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString PhaseDescription
        {
            get { return _dicom.FindFirst("00540039") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PhaseDescription_
        {
            get { return _dicom.FindAll("00540039").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort RotationVector
        {
            get { return _dicom.FindFirst("00540050") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RotationVector_
        {
            get { return _dicom.FindAll("00540050").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfRotations
        {
            get { return _dicom.FindFirst("00540051") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfRotations_
        {
            get { return _dicom.FindAll("00540051").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector RotationInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540052") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RotationInformationSequence_
        {
            get { return _dicom.FindAll("00540052").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NumberOfFramesInRotation
        {
            get { return _dicom.FindFirst("00540053") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfFramesInRotation_
        {
            get { return _dicom.FindAll("00540053").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RRIntervalVector
        {
            get { return _dicom.FindFirst("00540060") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RRIntervalVector_
        {
            get { return _dicom.FindAll("00540060").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfRRIntervals
        {
            get { return _dicom.FindFirst("00540061") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfRRIntervals_
        {
            get { return _dicom.FindAll("00540061").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector GatedInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540062") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GatedInformationSequence_
        {
            get { return _dicom.FindAll("00540062").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector DataInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540063") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DataInformationSequence_
        {
            get { return _dicom.FindAll("00540063").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort TimeSlotVector
        {
            get { return _dicom.FindFirst("00540070") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> TimeSlotVector_
        {
            get { return _dicom.FindAll("00540070").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfTimeSlots
        {
            get { return _dicom.FindFirst("00540071") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfTimeSlots_
        {
            get { return _dicom.FindAll("00540071").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector TimeSlotInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540072") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TimeSlotInformationSequence_
        {
            get { return _dicom.FindAll("00540072").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString TimeSlotTime
        {
            get { return _dicom.FindFirst("00540073") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TimeSlotTime_
        {
            get { return _dicom.FindAll("00540073").Select(d => d as DecimalString).ToList(); }
        }

        public UnsignedShort SliceVector
        {
            get { return _dicom.FindFirst("00540080") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SliceVector_
        {
            get { return _dicom.FindAll("00540080").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfSlices
        {
            get { return _dicom.FindFirst("00540081") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfSlices_
        {
            get { return _dicom.FindAll("00540081").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort AngularViewVector
        {
            get { return _dicom.FindFirst("00540090") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AngularViewVector_
        {
            get { return _dicom.FindAll("00540090").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort TimeSliceVector
        {
            get { return _dicom.FindFirst("00540100") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> TimeSliceVector_
        {
            get { return _dicom.FindAll("00540100").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfTimeSlices
        {
            get { return _dicom.FindFirst("00540101") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfTimeSlices_
        {
            get { return _dicom.FindAll("00540101").Select(d => d as UnsignedShort).ToList(); }
        }

        public DecimalString StartAngle
        {
            get { return _dicom.FindFirst("00540200") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> StartAngle_
        {
            get { return _dicom.FindAll("00540200").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString TypeOfDetectorMotion
        {
            get { return _dicom.FindFirst("00540202") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TypeOfDetectorMotion_
        {
            get { return _dicom.FindAll("00540202").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString TriggerVector
        {
            get { return _dicom.FindFirst("00540210") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TriggerVector_
        {
            get { return _dicom.FindAll("00540210").Select(d => d as IntegerString).ToList(); }
        }

        public UnsignedShort NumberOfTriggersInPhase
        {
            get { return _dicom.FindFirst("00540211") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfTriggersInPhase_
        {
            get { return _dicom.FindAll("00540211").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ViewCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ViewCodeSequence_
        {
            get { return _dicom.FindAll("00540220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ViewModifierCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540222") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ViewModifierCodeSequence_
        {
            get { return _dicom.FindAll("00540222").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RadionuclideCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540300") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RadionuclideCodeSequence_
        {
            get { return _dicom.FindAll("00540300").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AdministrationRouteCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540302") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AdministrationRouteCodeSequence_
        {
            get { return _dicom.FindAll("00540302").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RadiopharmaceuticalCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540304") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RadiopharmaceuticalCodeSequence_
        {
            get { return _dicom.FindAll("00540304").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CalibrationDataSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540306") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CalibrationDataSequence_
        {
            get { return _dicom.FindAll("00540306").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort EnergyWindowNumber
        {
            get { return _dicom.FindFirst("00540308") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> EnergyWindowNumber_
        {
            get { return _dicom.FindAll("00540308").Select(d => d as UnsignedShort).ToList(); }
        }

        public ShortString ImageID
        {
            get { return _dicom.FindFirst("00540400") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ImageID_
        {
            get { return _dicom.FindAll("00540400").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector PatientOrientationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540410") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientOrientationCodeSequence_
        {
            get { return _dicom.FindAll("00540410").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PatientOrientationModifierCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540412") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientOrientationModifierCodeSequence_
        {
            get { return _dicom.FindAll("00540412").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PatientGantryRelationshipCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00540414") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientGantryRelationshipCodeSequence_
        {
            get { return _dicom.FindAll("00540414").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString SliceProgressionDirection
        {
            get { return _dicom.FindFirst("00540500") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SliceProgressionDirection_
        {
            get { return _dicom.FindAll("00540500").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SeriesType
        {
            get { return _dicom.FindFirst("00541000") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SeriesType_
        {
            get { return _dicom.FindAll("00541000").Select(d => d as CodeString).ToList(); }
        }

        public CodeString Units
        {
            get { return _dicom.FindFirst("00541001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Units_
        {
            get { return _dicom.FindAll("00541001").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CountsSource
        {
            get { return _dicom.FindFirst("00541002") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CountsSource_
        {
            get { return _dicom.FindAll("00541002").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ReprojectionMethod
        {
            get { return _dicom.FindFirst("00541004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReprojectionMethod_
        {
            get { return _dicom.FindAll("00541004").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SUVType
        {
            get { return _dicom.FindFirst("00541006") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SUVType_
        {
            get { return _dicom.FindAll("00541006").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RandomsCorrectionMethod
        {
            get { return _dicom.FindFirst("00541100") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RandomsCorrectionMethod_
        {
            get { return _dicom.FindAll("00541100").Select(d => d as CodeString).ToList(); }
        }

        public LongString AttenuationCorrectionMethod
        {
            get { return _dicom.FindFirst("00541101") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AttenuationCorrectionMethod_
        {
            get { return _dicom.FindAll("00541101").Select(d => d as LongString).ToList(); }
        }

        public CodeString DecayCorrection
        {
            get { return _dicom.FindFirst("00541102") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DecayCorrection_
        {
            get { return _dicom.FindAll("00541102").Select(d => d as CodeString).ToList(); }
        }

        public LongString ReconstructionMethod
        {
            get { return _dicom.FindFirst("00541103") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReconstructionMethod_
        {
            get { return _dicom.FindAll("00541103").Select(d => d as LongString).ToList(); }
        }

        public LongString DetectorLinesOfResponseUsed
        {
            get { return _dicom.FindFirst("00541104") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DetectorLinesOfResponseUsed_
        {
            get { return _dicom.FindAll("00541104").Select(d => d as LongString).ToList(); }
        }

        public LongString ScatterCorrectionMethod
        {
            get { return _dicom.FindFirst("00541105") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ScatterCorrectionMethod_
        {
            get { return _dicom.FindAll("00541105").Select(d => d as LongString).ToList(); }
        }

        public DecimalString AxialAcceptance
        {
            get { return _dicom.FindFirst("00541200") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> AxialAcceptance_
        {
            get { return _dicom.FindAll("00541200").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString AxialMash
        {
            get { return _dicom.FindFirst("00541201") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AxialMash_
        {
            get { return _dicom.FindAll("00541201").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString TransverseMash
        {
            get { return _dicom.FindFirst("00541202") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TransverseMash_
        {
            get { return _dicom.FindAll("00541202").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString DetectorElementSize
        {
            get { return _dicom.FindFirst("00541203") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DetectorElementSize_
        {
            get { return _dicom.FindAll("00541203").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CoincidenceWindowWidth
        {
            get { return _dicom.FindFirst("00541210") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CoincidenceWindowWidth_
        {
            get { return _dicom.FindAll("00541210").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString SecondaryCountsType
        {
            get { return _dicom.FindFirst("00541220") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SecondaryCountsType_
        {
            get { return _dicom.FindAll("00541220").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString FrameReferenceTime
        {
            get { return _dicom.FindFirst("00541300") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FrameReferenceTime_
        {
            get { return _dicom.FindAll("00541300").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString PrimaryPromptsCountsAccumulated
        {
            get { return _dicom.FindFirst("00541310") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PrimaryPromptsCountsAccumulated_
        {
            get { return _dicom.FindAll("00541310").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString SecondaryCountsAccumulated
        {
            get { return _dicom.FindFirst("00541311") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SecondaryCountsAccumulated_
        {
            get { return _dicom.FindAll("00541311").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString SliceSensitivityFactor
        {
            get { return _dicom.FindFirst("00541320") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SliceSensitivityFactor_
        {
            get { return _dicom.FindAll("00541320").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DecayFactor
        {
            get { return _dicom.FindFirst("00541321") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DecayFactor_
        {
            get { return _dicom.FindAll("00541321").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DoseCalibrationFactor
        {
            get { return _dicom.FindFirst("00541322") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoseCalibrationFactor_
        {
            get { return _dicom.FindAll("00541322").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ScatterFractionFactor
        {
            get { return _dicom.FindFirst("00541323") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ScatterFractionFactor_
        {
            get { return _dicom.FindAll("00541323").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeadTimeFactor
        {
            get { return _dicom.FindFirst("00541324") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeadTimeFactor_
        {
            get { return _dicom.FindAll("00541324").Select(d => d as DecimalString).ToList(); }
        }

        public UnsignedShort ImageIndex
        {
            get { return _dicom.FindFirst("00541330") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageIndex_
        {
            get { return _dicom.FindAll("00541330").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString CountsIncludedRetired
        {
            get { return _dicom.FindFirst("00541400") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CountsIncludedRetired_
        {
            get { return _dicom.FindAll("00541400").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DeadTimeCorrectionFlagRetired
        {
            get { return _dicom.FindFirst("00541401") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DeadTimeCorrectionFlagRetired_
        {
            get { return _dicom.FindAll("00541401").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector HistogramSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00603000") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HistogramSequence_
        {
            get { return _dicom.FindAll("00603000").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort HistogramNumberOfBins
        {
            get { return _dicom.FindFirst("00603002") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HistogramNumberOfBins_
        {
            get { return _dicom.FindAll("00603002").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort HistogramFirstBinValue
        {
            get { return _dicom.FindFirst("00603004") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HistogramFirstBinValue_
        {
            get { return _dicom.FindAll("00603004").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort HistogramLastBinValue
        {
            get { return _dicom.FindFirst("00603006") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HistogramLastBinValue_
        {
            get { return _dicom.FindAll("00603006").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort HistogramBinWidth
        {
            get { return _dicom.FindFirst("00603008") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HistogramBinWidth_
        {
            get { return _dicom.FindAll("00603008").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString HistogramExplanation
        {
            get { return _dicom.FindFirst("00603010") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HistogramExplanation_
        {
            get { return _dicom.FindAll("00603010").Select(d => d as LongString).ToList(); }
        }

        public UnsignedLong HistogramData
        {
            get { return _dicom.FindFirst("00603020") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> HistogramData_
        {
            get { return _dicom.FindAll("00603020").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString SegmentationType
        {
            get { return _dicom.FindFirst("00620001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SegmentationType_
        {
            get { return _dicom.FindAll("00620001").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector SegmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00620002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SegmentSequence_
        {
            get { return _dicom.FindAll("00620002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SegmentedPropertyCategoryCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00620003") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SegmentedPropertyCategoryCodeSequence_
        {
            get { return _dicom.FindAll("00620003").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort SegmentNumber
        {
            get { return _dicom.FindFirst("00620004") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SegmentNumber_
        {
            get { return _dicom.FindAll("00620004").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString SegmentLabel
        {
            get { return _dicom.FindFirst("00620005") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SegmentLabel_
        {
            get { return _dicom.FindAll("00620005").Select(d => d as LongString).ToList(); }
        }

        public ShortText SegmentDescription
        {
            get { return _dicom.FindFirst("00620006") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> SegmentDescription_
        {
            get { return _dicom.FindAll("00620006").Select(d => d as ShortText).ToList(); }
        }

        public CodeString SegmentAlgorithmType
        {
            get { return _dicom.FindFirst("00620008") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SegmentAlgorithmType_
        {
            get { return _dicom.FindAll("00620008").Select(d => d as CodeString).ToList(); }
        }

        public LongString SegmentAlgorithmName
        {
            get { return _dicom.FindFirst("00620009") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SegmentAlgorithmName_
        {
            get { return _dicom.FindAll("00620009").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector SegmentIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0062000A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SegmentIdentificationSequence_
        {
            get { return _dicom.FindAll("0062000A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ReferencedSegmentNumber
        {
            get { return _dicom.FindFirst("0062000B") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReferencedSegmentNumber_
        {
            get { return _dicom.FindAll("0062000B").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RecommendedDisplayGrayscaleValue
        {
            get { return _dicom.FindFirst("0062000C") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RecommendedDisplayGrayscaleValue_
        {
            get { return _dicom.FindAll("0062000C").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RecommendedDisplayCIELabValue
        {
            get { return _dicom.FindFirst("0062000D") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RecommendedDisplayCIELabValue_
        {
            get { return _dicom.FindAll("0062000D").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MaximumFractionalValue
        {
            get { return _dicom.FindFirst("0062000E") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MaximumFractionalValue_
        {
            get { return _dicom.FindAll("0062000E").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector SegmentedPropertyTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0062000F") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SegmentedPropertyTypeCodeSequence_
        {
            get { return _dicom.FindAll("0062000F").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString SegmentationFractionalType
        {
            get { return _dicom.FindFirst("00620010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SegmentationFractionalType_
        {
            get { return _dicom.FindAll("00620010").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DeformableRegistrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00640002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DeformableRegistrationSequence_
        {
            get { return _dicom.FindAll("00640002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier SourceFrameOfReferenceUID
        {
            get { return _dicom.FindFirst("00640003") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> SourceFrameOfReferenceUID_
        {
            get { return _dicom.FindAll("00640003").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public SequenceSelector DeformableRegistrationGridSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00640005") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DeformableRegistrationGridSequence_
        {
            get { return _dicom.FindAll("00640005").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong GridDimensions
        {
            get { return _dicom.FindFirst("00640007") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> GridDimensions_
        {
            get { return _dicom.FindAll("00640007").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointDouble GridResolution
        {
            get { return _dicom.FindFirst("00640008") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> GridResolution_
        {
            get { return _dicom.FindAll("00640008").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public OtherFloatString VectorGridData
        {
            get { return _dicom.FindFirst("00640009") as OtherFloatString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherFloatString> VectorGridData_
        {
            get { return _dicom.FindAll("00640009").Select(d => d as OtherFloatString).ToList(); }
        }

        public SequenceSelector PreDeformationMatrixRegistrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0064000F") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PreDeformationMatrixRegistrationSequence_
        {
            get { return _dicom.FindAll("0064000F").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PostDeformationMatrixRegistrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00640010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PostDeformationMatrixRegistrationSequence_
        {
            get { return _dicom.FindAll("00640010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong NumberOfSurfaces
        {
            get { return _dicom.FindFirst("00660001") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfSurfaces_
        {
            get { return _dicom.FindAll("00660001").Select(d => d as UnsignedLong).ToList(); }
        }

        public SequenceSelector SurfaceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SurfaceSequence_
        {
            get { return _dicom.FindAll("00660002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong SurfaceNumber
        {
            get { return _dicom.FindFirst("00660003") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SurfaceNumber_
        {
            get { return _dicom.FindAll("00660003").Select(d => d as UnsignedLong).ToList(); }
        }

        public LongText SurfaceComments
        {
            get { return _dicom.FindFirst("00660004") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> SurfaceComments_
        {
            get { return _dicom.FindAll("00660004").Select(d => d as LongText).ToList(); }
        }

        public CodeString SurfaceProcessing
        {
            get { return _dicom.FindFirst("00660009") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SurfaceProcessing_
        {
            get { return _dicom.FindAll("00660009").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle SurfaceProcessingRatio
        {
            get { return _dicom.FindFirst("0066000A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SurfaceProcessingRatio_
        {
            get { return _dicom.FindAll("0066000A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongString SurfaceProcessingDescription
        {
            get { return _dicom.FindFirst("0066000B") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SurfaceProcessingDescription_
        {
            get { return _dicom.FindAll("0066000B").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle RecommendedPresentationOpacity
        {
            get { return _dicom.FindFirst("0066000C") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RecommendedPresentationOpacity_
        {
            get { return _dicom.FindAll("0066000C").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString RecommendedPresentationType
        {
            get { return _dicom.FindFirst("0066000D") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RecommendedPresentationType_
        {
            get { return _dicom.FindAll("0066000D").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FiniteVolume
        {
            get { return _dicom.FindFirst("0066000E") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FiniteVolume_
        {
            get { return _dicom.FindAll("0066000E").Select(d => d as CodeString).ToList(); }
        }

        public CodeString Manifold
        {
            get { return _dicom.FindFirst("00660010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Manifold_
        {
            get { return _dicom.FindAll("00660010").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector SurfacePointsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660011") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SurfacePointsSequence_
        {
            get { return _dicom.FindAll("00660011").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SurfacePointsNormalsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SurfacePointsNormalsSequence_
        {
            get { return _dicom.FindAll("00660012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SurfaceMeshPrimitivesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660013") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SurfaceMeshPrimitivesSequence_
        {
            get { return _dicom.FindAll("00660013").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong NumberOfSurfacePoints
        {
            get { return _dicom.FindFirst("00660015") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfSurfacePoints_
        {
            get { return _dicom.FindAll("00660015").Select(d => d as UnsignedLong).ToList(); }
        }

        public OtherFloatString PointCoordinatesData
        {
            get { return _dicom.FindFirst("00660016") as OtherFloatString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherFloatString> PointCoordinatesData_
        {
            get { return _dicom.FindAll("00660016").Select(d => d as OtherFloatString).ToList(); }
        }

        public FloatingPointSingle PointPositionAccuracy
        {
            get { return _dicom.FindFirst("00660017") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PointPositionAccuracy_
        {
            get { return _dicom.FindAll("00660017").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MeanPointDistance
        {
            get { return _dicom.FindFirst("00660018") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MeanPointDistance_
        {
            get { return _dicom.FindAll("00660018").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MaximumPointDistance
        {
            get { return _dicom.FindFirst("00660019") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MaximumPointDistance_
        {
            get { return _dicom.FindAll("00660019").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PointsBoundingBoxCoordinates
        {
            get { return _dicom.FindFirst("0066001A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PointsBoundingBoxCoordinates_
        {
            get { return _dicom.FindAll("0066001A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle AxisOfRotation
        {
            get { return _dicom.FindFirst("0066001B") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AxisOfRotation_
        {
            get { return _dicom.FindAll("0066001B").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CenterOfRotation
        {
            get { return _dicom.FindFirst("0066001C") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CenterOfRotation_
        {
            get { return _dicom.FindAll("0066001C").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedLong NumberOfVectors
        {
            get { return _dicom.FindFirst("0066001E") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfVectors_
        {
            get { return _dicom.FindAll("0066001E").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedShort VectorDimensionality
        {
            get { return _dicom.FindFirst("0066001F") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> VectorDimensionality_
        {
            get { return _dicom.FindAll("0066001F").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointSingle VectorAccuracy
        {
            get { return _dicom.FindFirst("00660020") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VectorAccuracy_
        {
            get { return _dicom.FindAll("00660020").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public OtherFloatString VectorCoordinateData
        {
            get { return _dicom.FindFirst("00660021") as OtherFloatString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherFloatString> VectorCoordinateData_
        {
            get { return _dicom.FindAll("00660021").Select(d => d as OtherFloatString).ToList(); }
        }

        public OtherWordString TrianglePointIndexList
        {
            get { return _dicom.FindFirst("00660023") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> TrianglePointIndexList_
        {
            get { return _dicom.FindAll("00660023").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString EdgePointIndexList
        {
            get { return _dicom.FindFirst("00660024") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> EdgePointIndexList_
        {
            get { return _dicom.FindAll("00660024").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString VertexPointIndexList
        {
            get { return _dicom.FindFirst("00660025") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> VertexPointIndexList_
        {
            get { return _dicom.FindAll("00660025").Select(d => d as OtherWordString).ToList(); }
        }

        public SequenceSelector TriangleStripSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660026") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TriangleStripSequence_
        {
            get { return _dicom.FindAll("00660026").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TriangleFanSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660027") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TriangleFanSequence_
        {
            get { return _dicom.FindAll("00660027").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LineSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660028") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LineSequence_
        {
            get { return _dicom.FindAll("00660028").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherWordString PrimitivePointIndexList
        {
            get { return _dicom.FindFirst("00660029") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> PrimitivePointIndexList_
        {
            get { return _dicom.FindAll("00660029").Select(d => d as OtherWordString).ToList(); }
        }

        public UnsignedLong SurfaceCount
        {
            get { return _dicom.FindFirst("0066002A") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SurfaceCount_
        {
            get { return _dicom.FindAll("0066002A").Select(d => d as UnsignedLong).ToList(); }
        }

        public SequenceSelector ReferencedSurfaceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0066002B") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedSurfaceSequence_
        {
            get { return _dicom.FindAll("0066002B").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong ReferencedSurfaceNumber
        {
            get { return _dicom.FindFirst("0066002C") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> ReferencedSurfaceNumber_
        {
            get { return _dicom.FindAll("0066002C").Select(d => d as UnsignedLong).ToList(); }
        }

        public SequenceSelector SegmentSurfaceGenerationAlgorithmIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0066002D") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SegmentSurfaceGenerationAlgorithmIdentificationSequence_
        {
            get { return _dicom.FindAll("0066002D").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SegmentSurfaceSourceInstanceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0066002E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SegmentSurfaceSourceInstanceSequence_
        {
            get { return _dicom.FindAll("0066002E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AlgorithmFamilyCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0066002F") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AlgorithmFamilyCodeSequence_
        {
            get { return _dicom.FindAll("0066002F").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AlgorithmNameCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AlgorithmNameCodeSequence_
        {
            get { return _dicom.FindAll("00660030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString AlgorithmVersion
        {
            get { return _dicom.FindFirst("00660031") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AlgorithmVersion_
        {
            get { return _dicom.FindAll("00660031").Select(d => d as LongString).ToList(); }
        }

        public LongText AlgorithmParameters
        {
            get { return _dicom.FindFirst("00660032") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> AlgorithmParameters_
        {
            get { return _dicom.FindAll("00660032").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector FacetSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660034") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FacetSequence_
        {
            get { return _dicom.FindAll("00660034").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SurfaceProcessingAlgorithmIdentificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00660035") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SurfaceProcessingAlgorithmIdentificationSequence_
        {
            get { return _dicom.FindAll("00660035").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString AlgorithmName
        {
            get { return _dicom.FindFirst("00660036") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AlgorithmName_
        {
            get { return _dicom.FindAll("00660036").Select(d => d as LongString).ToList(); }
        }

        public LongString ImplantSize
        {
            get { return _dicom.FindFirst("00686210") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantSize_
        {
            get { return _dicom.FindAll("00686210").Select(d => d as LongString).ToList(); }
        }

        public LongString ImplantTemplateVersion
        {
            get { return _dicom.FindFirst("00686221") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantTemplateVersion_
        {
            get { return _dicom.FindAll("00686221").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReplacedImplantTemplateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686222") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReplacedImplantTemplateSequence_
        {
            get { return _dicom.FindAll("00686222").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ImplantType
        {
            get { return _dicom.FindFirst("00686223") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImplantType_
        {
            get { return _dicom.FindAll("00686223").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DerivationImplantTemplateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686224") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DerivationImplantTemplateSequence_
        {
            get { return _dicom.FindAll("00686224").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OriginalImplantTemplateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686225") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OriginalImplantTemplateSequence_
        {
            get { return _dicom.FindAll("00686225").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime EffectiveDateTime
        {
            get { return _dicom.FindFirst("00686226") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> EffectiveDateTime_
        {
            get { return _dicom.FindAll("00686226").Select(d => d as DateTime).ToList(); }
        }

        public SequenceSelector ImplantTargetAnatomySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686230") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantTargetAnatomySequence_
        {
            get { return _dicom.FindAll("00686230").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector InformationFromManufacturerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686260") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InformationFromManufacturerSequence_
        {
            get { return _dicom.FindAll("00686260").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector NotificationFromManufacturerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686265") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> NotificationFromManufacturerSequence_
        {
            get { return _dicom.FindAll("00686265").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime InformationIssueDateTime
        {
            get { return _dicom.FindFirst("00686270") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> InformationIssueDateTime_
        {
            get { return _dicom.FindAll("00686270").Select(d => d as DateTime).ToList(); }
        }

        public ShortText InformationSummary
        {
            get { return _dicom.FindFirst("00686280") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> InformationSummary_
        {
            get { return _dicom.FindAll("00686280").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector ImplantRegulatoryDisapprovalCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006862A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantRegulatoryDisapprovalCodeSequence_
        {
            get { return _dicom.FindAll("006862A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble OverallTemplateSpatialTolerance
        {
            get { return _dicom.FindFirst("006862A5") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> OverallTemplateSpatialTolerance_
        {
            get { return _dicom.FindAll("006862A5").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector HPGLDocumentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006862C0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HPGLDocumentSequence_
        {
            get { return _dicom.FindAll("006862C0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort HPGLDocumentID
        {
            get { return _dicom.FindFirst("006862D0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HPGLDocumentID_
        {
            get { return _dicom.FindAll("006862D0").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString HPGLDocumentLabel
        {
            get { return _dicom.FindFirst("006862D5") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HPGLDocumentLabel_
        {
            get { return _dicom.FindAll("006862D5").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ViewOrientationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006862E0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ViewOrientationCodeSequence_
        {
            get { return _dicom.FindAll("006862E0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble ViewOrientationModifier
        {
            get { return _dicom.FindFirst("006862F0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ViewOrientationModifier_
        {
            get { return _dicom.FindAll("006862F0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble HPGLDocumentScaling
        {
            get { return _dicom.FindFirst("006862F2") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> HPGLDocumentScaling_
        {
            get { return _dicom.FindAll("006862F2").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public OtherByteString HPGLDocument
        {
            get { return _dicom.FindFirst("00686300") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> HPGLDocument_
        {
            get { return _dicom.FindAll("00686300").Select(d => d as OtherByteString).ToList(); }
        }

        public UnsignedShort HPGLContourPenNumber
        {
            get { return _dicom.FindFirst("00686310") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HPGLContourPenNumber_
        {
            get { return _dicom.FindAll("00686310").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector HPGLPenSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686320") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HPGLPenSequence_
        {
            get { return _dicom.FindAll("00686320").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort HPGLPenNumber
        {
            get { return _dicom.FindFirst("00686330") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HPGLPenNumber_
        {
            get { return _dicom.FindAll("00686330").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString HPGLPenLabel
        {
            get { return _dicom.FindFirst("00686340") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HPGLPenLabel_
        {
            get { return _dicom.FindAll("00686340").Select(d => d as LongString).ToList(); }
        }

        public ShortText HPGLPenDescription
        {
            get { return _dicom.FindFirst("00686345") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> HPGLPenDescription_
        {
            get { return _dicom.FindAll("00686345").Select(d => d as ShortText).ToList(); }
        }

        public FloatingPointDouble RecommendedRotationPoint
        {
            get { return _dicom.FindFirst("00686346") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RecommendedRotationPoint_
        {
            get { return _dicom.FindAll("00686346").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble BoundingRectangle
        {
            get { return _dicom.FindFirst("00686347") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> BoundingRectangle_
        {
            get { return _dicom.FindAll("00686347").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort ImplantTemplate3DModelSurfaceNumber
        {
            get { return _dicom.FindFirst("00686350") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImplantTemplate3DModelSurfaceNumber_
        {
            get { return _dicom.FindAll("00686350").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector SurfaceModelDescriptionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686360") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SurfaceModelDescriptionSequence_
        {
            get { return _dicom.FindAll("00686360").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SurfaceModelLabel
        {
            get { return _dicom.FindFirst("00686380") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SurfaceModelLabel_
        {
            get { return _dicom.FindAll("00686380").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointDouble SurfaceModelScalingFactor
        {
            get { return _dicom.FindFirst("00686390") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SurfaceModelScalingFactor_
        {
            get { return _dicom.FindAll("00686390").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector MaterialsCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006863A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MaterialsCodeSequence_
        {
            get { return _dicom.FindAll("006863A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector CoatingMaterialsCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006863A4") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CoatingMaterialsCodeSequence_
        {
            get { return _dicom.FindAll("006863A4").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImplantTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006863A8") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantTypeCodeSequence_
        {
            get { return _dicom.FindAll("006863A8").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FixationMethodCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006863AC") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FixationMethodCodeSequence_
        {
            get { return _dicom.FindAll("006863AC").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MatingFeatureSetsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006863B0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MatingFeatureSetsSequence_
        {
            get { return _dicom.FindAll("006863B0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort MatingFeatureSetID
        {
            get { return _dicom.FindFirst("006863C0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MatingFeatureSetID_
        {
            get { return _dicom.FindAll("006863C0").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString MatingFeatureSetLabel
        {
            get { return _dicom.FindFirst("006863D0") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> MatingFeatureSetLabel_
        {
            get { return _dicom.FindAll("006863D0").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector MatingFeatureSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006863E0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MatingFeatureSequence_
        {
            get { return _dicom.FindAll("006863E0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort MatingFeatureID
        {
            get { return _dicom.FindFirst("006863F0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MatingFeatureID_
        {
            get { return _dicom.FindAll("006863F0").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector MatingFeatureDegreeOfFreedomSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686400") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MatingFeatureDegreeOfFreedomSequence_
        {
            get { return _dicom.FindAll("00686400").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort DegreeOfFreedomID
        {
            get { return _dicom.FindFirst("00686410") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DegreeOfFreedomID_
        {
            get { return _dicom.FindAll("00686410").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString DegreeOfFreedomType
        {
            get { return _dicom.FindFirst("00686420") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DegreeOfFreedomType_
        {
            get { return _dicom.FindAll("00686420").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector TwoDMatingFeatureCoordinatesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686430") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TwoDMatingFeatureCoordinatesSequence_
        {
            get { return _dicom.FindAll("00686430").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ReferencedHPGLDocumentID
        {
            get { return _dicom.FindFirst("00686440") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReferencedHPGLDocumentID_
        {
            get { return _dicom.FindAll("00686440").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble TwoDMatingPoint
        {
            get { return _dicom.FindFirst("00686450") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDMatingPoint_
        {
            get { return _dicom.FindAll("00686450").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TwoDMatingAxes
        {
            get { return _dicom.FindFirst("00686460") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDMatingAxes_
        {
            get { return _dicom.FindAll("00686460").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector TwoDDegreeOfFreedomSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686470") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TwoDDegreeOfFreedomSequence_
        {
            get { return _dicom.FindAll("00686470").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble ThreeDDegreeOfFreedomAxis
        {
            get { return _dicom.FindFirst("00686490") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDDegreeOfFreedomAxis_
        {
            get { return _dicom.FindAll("00686490").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble RangeOfFreedom
        {
            get { return _dicom.FindFirst("006864A0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RangeOfFreedom_
        {
            get { return _dicom.FindAll("006864A0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ThreeDMatingPoint
        {
            get { return _dicom.FindFirst("006864C0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDMatingPoint_
        {
            get { return _dicom.FindAll("006864C0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ThreeDMatingAxes
        {
            get { return _dicom.FindFirst("006864D0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDMatingAxes_
        {
            get { return _dicom.FindAll("006864D0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TwoDDegreeOfFreedomAxis
        {
            get { return _dicom.FindFirst("006864F0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDDegreeOfFreedomAxis_
        {
            get { return _dicom.FindAll("006864F0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector PlanningLandmarkPointSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlanningLandmarkPointSequence_
        {
            get { return _dicom.FindAll("00686500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PlanningLandmarkLineSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686510") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlanningLandmarkLineSequence_
        {
            get { return _dicom.FindAll("00686510").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PlanningLandmarkPlaneSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686520") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlanningLandmarkPlaneSequence_
        {
            get { return _dicom.FindAll("00686520").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort PlanningLandmarkID
        {
            get { return _dicom.FindFirst("00686530") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PlanningLandmarkID_
        {
            get { return _dicom.FindAll("00686530").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString PlanningLandmarkDescription
        {
            get { return _dicom.FindFirst("00686540") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PlanningLandmarkDescription_
        {
            get { return _dicom.FindAll("00686540").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector PlanningLandmarkIdentificationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686545") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlanningLandmarkIdentificationCodeSequence_
        {
            get { return _dicom.FindAll("00686545").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TwoDPointCoordinatesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00686550") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TwoDPointCoordinatesSequence_
        {
            get { return _dicom.FindAll("00686550").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble TwoDPointCoordinates
        {
            get { return _dicom.FindFirst("00686560") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDPointCoordinates_
        {
            get { return _dicom.FindAll("00686560").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ThreeDPointCoordinates
        {
            get { return _dicom.FindFirst("00686590") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDPointCoordinates_
        {
            get { return _dicom.FindAll("00686590").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector TwoDLineCoordinatesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006865A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TwoDLineCoordinatesSequence_
        {
            get { return _dicom.FindAll("006865A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble TwoDLineCoordinates
        {
            get { return _dicom.FindFirst("006865B0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDLineCoordinates_
        {
            get { return _dicom.FindAll("006865B0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ThreeDLineCoordinates
        {
            get { return _dicom.FindFirst("006865D0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDLineCoordinates_
        {
            get { return _dicom.FindAll("006865D0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector TwoDPlaneCoordinatesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("006865E0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TwoDPlaneCoordinatesSequence_
        {
            get { return _dicom.FindAll("006865E0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble TwoDPlaneIntersection
        {
            get { return _dicom.FindFirst("006865F0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDPlaneIntersection_
        {
            get { return _dicom.FindAll("006865F0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ThreeDPlaneOrigin
        {
            get { return _dicom.FindFirst("00686610") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDPlaneOrigin_
        {
            get { return _dicom.FindAll("00686610").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ThreeDPlaneNormal
        {
            get { return _dicom.FindFirst("00686620") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDPlaneNormal_
        {
            get { return _dicom.FindAll("00686620").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector GraphicAnnotationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700001") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GraphicAnnotationSequence_
        {
            get { return _dicom.FindAll("00700001").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString GraphicLayer
        {
            get { return _dicom.FindFirst("00700002") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GraphicLayer_
        {
            get { return _dicom.FindAll("00700002").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BoundingBoxAnnotationUnits
        {
            get { return _dicom.FindFirst("00700003") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BoundingBoxAnnotationUnits_
        {
            get { return _dicom.FindAll("00700003").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AnchorPointAnnotationUnits
        {
            get { return _dicom.FindFirst("00700004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AnchorPointAnnotationUnits_
        {
            get { return _dicom.FindAll("00700004").Select(d => d as CodeString).ToList(); }
        }

        public CodeString GraphicAnnotationUnits
        {
            get { return _dicom.FindFirst("00700005") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GraphicAnnotationUnits_
        {
            get { return _dicom.FindAll("00700005").Select(d => d as CodeString).ToList(); }
        }

        public ShortText UnformattedTextValue
        {
            get { return _dicom.FindFirst("00700006") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> UnformattedTextValue_
        {
            get { return _dicom.FindAll("00700006").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector TextObjectSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TextObjectSequence_
        {
            get { return _dicom.FindAll("00700008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector GraphicObjectSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700009") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GraphicObjectSequence_
        {
            get { return _dicom.FindAll("00700009").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle BoundingBoxTopLeftHandCorner
        {
            get { return _dicom.FindFirst("00700010") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BoundingBoxTopLeftHandCorner_
        {
            get { return _dicom.FindAll("00700010").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BoundingBoxBottomRightHandCorner
        {
            get { return _dicom.FindFirst("00700011") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BoundingBoxBottomRightHandCorner_
        {
            get { return _dicom.FindAll("00700011").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString BoundingBoxTextHorizontalJustification
        {
            get { return _dicom.FindFirst("00700012") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BoundingBoxTextHorizontalJustification_
        {
            get { return _dicom.FindAll("00700012").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle AnchorPoint
        {
            get { return _dicom.FindFirst("00700014") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> AnchorPoint_
        {
            get { return _dicom.FindAll("00700014").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString AnchorPointVisibility
        {
            get { return _dicom.FindFirst("00700015") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AnchorPointVisibility_
        {
            get { return _dicom.FindAll("00700015").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort GraphicDimensions
        {
            get { return _dicom.FindFirst("00700020") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GraphicDimensions_
        {
            get { return _dicom.FindAll("00700020").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfGraphicPoints
        {
            get { return _dicom.FindFirst("00700021") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfGraphicPoints_
        {
            get { return _dicom.FindAll("00700021").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointSingle GraphicData
        {
            get { return _dicom.FindFirst("00700022") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GraphicData_
        {
            get { return _dicom.FindAll("00700022").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString GraphicType
        {
            get { return _dicom.FindFirst("00700023") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GraphicType_
        {
            get { return _dicom.FindAll("00700023").Select(d => d as CodeString).ToList(); }
        }

        public CodeString GraphicFilled
        {
            get { return _dicom.FindFirst("00700024") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GraphicFilled_
        {
            get { return _dicom.FindAll("00700024").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString ImageRotationRetired
        {
            get { return _dicom.FindFirst("00700040") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ImageRotationRetired_
        {
            get { return _dicom.FindAll("00700040").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString ImageHorizontalFlip
        {
            get { return _dicom.FindFirst("00700041") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageHorizontalFlip_
        {
            get { return _dicom.FindAll("00700041").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort ImageRotation
        {
            get { return _dicom.FindFirst("00700042") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageRotation_
        {
            get { return _dicom.FindAll("00700042").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort DisplayedAreaTopLeftHandCornerTrialRetired
        {
            get { return _dicom.FindFirst("00700050") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DisplayedAreaTopLeftHandCornerTrialRetired_
        {
            get { return _dicom.FindAll("00700050").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort DisplayedAreaBottomRightHandCornerTrialRetired
        {
            get { return _dicom.FindFirst("00700051") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DisplayedAreaBottomRightHandCornerTrialRetired_
        {
            get { return _dicom.FindAll("00700051").Select(d => d as UnsignedShort).ToList(); }
        }

        public SignedLong DisplayedAreaTopLeftHandCorner
        {
            get { return _dicom.FindFirst("00700052") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> DisplayedAreaTopLeftHandCorner_
        {
            get { return _dicom.FindAll("00700052").Select(d => d as SignedLong).ToList(); }
        }

        public SignedLong DisplayedAreaBottomRightHandCorner
        {
            get { return _dicom.FindFirst("00700053") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> DisplayedAreaBottomRightHandCorner_
        {
            get { return _dicom.FindAll("00700053").Select(d => d as SignedLong).ToList(); }
        }

        public SequenceSelector DisplayedAreaSelectionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0070005A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DisplayedAreaSelectionSequence_
        {
            get { return _dicom.FindAll("0070005A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector GraphicLayerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GraphicLayerSequence_
        {
            get { return _dicom.FindAll("00700060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString GraphicLayerOrder
        {
            get { return _dicom.FindFirst("00700062") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> GraphicLayerOrder_
        {
            get { return _dicom.FindAll("00700062").Select(d => d as IntegerString).ToList(); }
        }

        public UnsignedShort GraphicLayerRecommendedDisplayGrayscaleValue
        {
            get { return _dicom.FindFirst("00700066") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GraphicLayerRecommendedDisplayGrayscaleValue_
        {
            get { return _dicom.FindAll("00700066").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort GraphicLayerRecommendedDisplayRGBValueRetired
        {
            get { return _dicom.FindFirst("00700067") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GraphicLayerRecommendedDisplayRGBValueRetired_
        {
            get { return _dicom.FindAll("00700067").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString GraphicLayerDescription
        {
            get { return _dicom.FindFirst("00700068") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> GraphicLayerDescription_
        {
            get { return _dicom.FindAll("00700068").Select(d => d as LongString).ToList(); }
        }

        public CodeString ContentLabel
        {
            get { return _dicom.FindFirst("00700080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContentLabel_
        {
            get { return _dicom.FindAll("00700080").Select(d => d as CodeString).ToList(); }
        }

        public LongString ContentDescription
        {
            get { return _dicom.FindFirst("00700081") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContentDescription_
        {
            get { return _dicom.FindAll("00700081").Select(d => d as LongString).ToList(); }
        }

        public Date PresentationCreationDate
        {
            get { return _dicom.FindFirst("00700082") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> PresentationCreationDate_
        {
            get { return _dicom.FindAll("00700082").Select(d => d as Date).ToList(); }
        }

        public Time PresentationCreationTime
        {
            get { return _dicom.FindFirst("00700083") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> PresentationCreationTime_
        {
            get { return _dicom.FindAll("00700083").Select(d => d as Time).ToList(); }
        }

        public PersonName ContentCreatorName
        {
            get { return _dicom.FindFirst("00700084") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> ContentCreatorName_
        {
            get { return _dicom.FindAll("00700084").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector ContentCreatorIdentificationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700086") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContentCreatorIdentificationCodeSequence_
        {
            get { return _dicom.FindAll("00700086").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AlternateContentDescriptionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700087") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AlternateContentDescriptionSequence_
        {
            get { return _dicom.FindAll("00700087").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PresentationSizeMode
        {
            get { return _dicom.FindFirst("00700100") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PresentationSizeMode_
        {
            get { return _dicom.FindAll("00700100").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString PresentationPixelSpacing
        {
            get { return _dicom.FindFirst("00700101") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PresentationPixelSpacing_
        {
            get { return _dicom.FindAll("00700101").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString PresentationPixelAspectRatio
        {
            get { return _dicom.FindFirst("00700102") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PresentationPixelAspectRatio_
        {
            get { return _dicom.FindAll("00700102").Select(d => d as IntegerString).ToList(); }
        }

        public FloatingPointSingle PresentationPixelMagnificationRatio
        {
            get { return _dicom.FindFirst("00700103") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PresentationPixelMagnificationRatio_
        {
            get { return _dicom.FindAll("00700103").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public LongString GraphicGroupLabel
        {
            get { return _dicom.FindFirst("00700207") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> GraphicGroupLabel_
        {
            get { return _dicom.FindAll("00700207").Select(d => d as LongString).ToList(); }
        }

        public ShortText GraphicGroupDescription
        {
            get { return _dicom.FindFirst("00700208") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> GraphicGroupDescription_
        {
            get { return _dicom.FindAll("00700208").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector CompoundGraphicSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700209") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CompoundGraphicSequence_
        {
            get { return _dicom.FindAll("00700209").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedLong CompoundGraphicInstanceID
        {
            get { return _dicom.FindFirst("00700226") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> CompoundGraphicInstanceID_
        {
            get { return _dicom.FindAll("00700226").Select(d => d as UnsignedLong).ToList(); }
        }

        public LongString FontName
        {
            get { return _dicom.FindFirst("00700227") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FontName_
        {
            get { return _dicom.FindAll("00700227").Select(d => d as LongString).ToList(); }
        }

        public CodeString FontNameType
        {
            get { return _dicom.FindFirst("00700228") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FontNameType_
        {
            get { return _dicom.FindAll("00700228").Select(d => d as CodeString).ToList(); }
        }

        public LongString CSSFontName
        {
            get { return _dicom.FindFirst("00700229") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CSSFontName_
        {
            get { return _dicom.FindAll("00700229").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointDouble RotationAngle
        {
            get { return _dicom.FindFirst("00700230") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> RotationAngle_
        {
            get { return _dicom.FindAll("00700230").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector TextStyleSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700231") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TextStyleSequence_
        {
            get { return _dicom.FindAll("00700231").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector LineStyleSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700232") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LineStyleSequence_
        {
            get { return _dicom.FindAll("00700232").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FillStyleSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700233") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FillStyleSequence_
        {
            get { return _dicom.FindAll("00700233").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector GraphicGroupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700234") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GraphicGroupSequence_
        {
            get { return _dicom.FindAll("00700234").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort TextColorCIELabValue
        {
            get { return _dicom.FindFirst("00700241") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> TextColorCIELabValue_
        {
            get { return _dicom.FindAll("00700241").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString HorizontalAlignment
        {
            get { return _dicom.FindFirst("00700242") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> HorizontalAlignment_
        {
            get { return _dicom.FindAll("00700242").Select(d => d as CodeString).ToList(); }
        }

        public CodeString VerticalAlignment
        {
            get { return _dicom.FindFirst("00700243") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VerticalAlignment_
        {
            get { return _dicom.FindAll("00700243").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ShadowStyle
        {
            get { return _dicom.FindFirst("00700244") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShadowStyle_
        {
            get { return _dicom.FindAll("00700244").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle ShadowOffsetX
        {
            get { return _dicom.FindFirst("00700245") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ShadowOffsetX_
        {
            get { return _dicom.FindAll("00700245").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ShadowOffsetY
        {
            get { return _dicom.FindFirst("00700246") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ShadowOffsetY_
        {
            get { return _dicom.FindAll("00700246").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedShort ShadowColorCIELabValue
        {
            get { return _dicom.FindFirst("00700247") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ShadowColorCIELabValue_
        {
            get { return _dicom.FindAll("00700247").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString Underlined
        {
            get { return _dicom.FindFirst("00700248") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Underlined_
        {
            get { return _dicom.FindAll("00700248").Select(d => d as CodeString).ToList(); }
        }

        public CodeString Bold
        {
            get { return _dicom.FindFirst("00700249") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Bold_
        {
            get { return _dicom.FindAll("00700249").Select(d => d as CodeString).ToList(); }
        }

        public CodeString Italic
        {
            get { return _dicom.FindFirst("00700250") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Italic_
        {
            get { return _dicom.FindAll("00700250").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort PatternOnColorCIELabValue
        {
            get { return _dicom.FindFirst("00700251") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PatternOnColorCIELabValue_
        {
            get { return _dicom.FindAll("00700251").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PatternOffColorCIELabValue
        {
            get { return _dicom.FindFirst("00700252") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PatternOffColorCIELabValue_
        {
            get { return _dicom.FindAll("00700252").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointSingle LineThickness
        {
            get { return _dicom.FindFirst("00700253") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> LineThickness_
        {
            get { return _dicom.FindAll("00700253").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString LineDashingStyle
        {
            get { return _dicom.FindFirst("00700254") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LineDashingStyle_
        {
            get { return _dicom.FindAll("00700254").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong LinePattern
        {
            get { return _dicom.FindFirst("00700255") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> LinePattern_
        {
            get { return _dicom.FindAll("00700255").Select(d => d as UnsignedLong).ToList(); }
        }

        public OtherByteString FillPattern
        {
            get { return _dicom.FindFirst("00700256") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> FillPattern_
        {
            get { return _dicom.FindAll("00700256").Select(d => d as OtherByteString).ToList(); }
        }

        public CodeString FillMode
        {
            get { return _dicom.FindFirst("00700257") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FillMode_
        {
            get { return _dicom.FindAll("00700257").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle ShadowOpacity
        {
            get { return _dicom.FindFirst("00700258") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ShadowOpacity_
        {
            get { return _dicom.FindAll("00700258").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle GapLength
        {
            get { return _dicom.FindFirst("00700261") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GapLength_
        {
            get { return _dicom.FindAll("00700261").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle DiameterOfVisibility
        {
            get { return _dicom.FindFirst("00700262") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> DiameterOfVisibility_
        {
            get { return _dicom.FindAll("00700262").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle RotationPoint
        {
            get { return _dicom.FindFirst("00700273") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RotationPoint_
        {
            get { return _dicom.FindAll("00700273").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString TickAlignment
        {
            get { return _dicom.FindFirst("00700274") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TickAlignment_
        {
            get { return _dicom.FindAll("00700274").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ShowTickLabel
        {
            get { return _dicom.FindFirst("00700278") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShowTickLabel_
        {
            get { return _dicom.FindAll("00700278").Select(d => d as CodeString).ToList(); }
        }

        public CodeString TickLabelAlignment
        {
            get { return _dicom.FindFirst("00700279") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TickLabelAlignment_
        {
            get { return _dicom.FindAll("00700279").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CompoundGraphicUnits
        {
            get { return _dicom.FindFirst("00700282") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompoundGraphicUnits_
        {
            get { return _dicom.FindAll("00700282").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle PatternOnOpacity
        {
            get { return _dicom.FindFirst("00700284") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PatternOnOpacity_
        {
            get { return _dicom.FindAll("00700284").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle PatternOffOpacity
        {
            get { return _dicom.FindFirst("00700285") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> PatternOffOpacity_
        {
            get { return _dicom.FindAll("00700285").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector MajorTicksSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700287") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MajorTicksSequence_
        {
            get { return _dicom.FindAll("00700287").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle TickPosition
        {
            get { return _dicom.FindFirst("00700288") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TickPosition_
        {
            get { return _dicom.FindAll("00700288").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public ShortString TickLabel
        {
            get { return _dicom.FindFirst("00700289") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> TickLabel_
        {
            get { return _dicom.FindAll("00700289").Select(d => d as ShortString).ToList(); }
        }

        public CodeString CompoundGraphicType
        {
            get { return _dicom.FindFirst("00700294") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompoundGraphicType_
        {
            get { return _dicom.FindAll("00700294").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong GraphicGroupID
        {
            get { return _dicom.FindFirst("00700295") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> GraphicGroupID_
        {
            get { return _dicom.FindAll("00700295").Select(d => d as UnsignedLong).ToList(); }
        }

        public CodeString ShapeType
        {
            get { return _dicom.FindFirst("00700306") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShapeType_
        {
            get { return _dicom.FindAll("00700306").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector RegistrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700308") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RegistrationSequence_
        {
            get { return _dicom.FindAll("00700308").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MatrixRegistrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700309") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MatrixRegistrationSequence_
        {
            get { return _dicom.FindAll("00700309").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector MatrixSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0070030A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MatrixSequence_
        {
            get { return _dicom.FindAll("0070030A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FrameOfReferenceTransformationMatrixType
        {
            get { return _dicom.FindFirst("0070030C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FrameOfReferenceTransformationMatrixType_
        {
            get { return _dicom.FindAll("0070030C").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector RegistrationTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0070030D") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RegistrationTypeCodeSequence_
        {
            get { return _dicom.FindAll("0070030D").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText FiducialDescription
        {
            get { return _dicom.FindFirst("0070030F") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> FiducialDescription_
        {
            get { return _dicom.FindAll("0070030F").Select(d => d as ShortText).ToList(); }
        }

        public ShortString FiducialIdentifier
        {
            get { return _dicom.FindFirst("00700310") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FiducialIdentifier_
        {
            get { return _dicom.FindAll("00700310").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector FiducialIdentifierCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700311") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FiducialIdentifierCodeSequence_
        {
            get { return _dicom.FindAll("00700311").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble ContourUncertaintyRadius
        {
            get { return _dicom.FindFirst("00700312") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ContourUncertaintyRadius_
        {
            get { return _dicom.FindAll("00700312").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector UsedFiducialsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700314") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> UsedFiducialsSequence_
        {
            get { return _dicom.FindAll("00700314").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector GraphicCoordinatesDataSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700318") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GraphicCoordinatesDataSequence_
        {
            get { return _dicom.FindAll("00700318").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier FiducialUID
        {
            get { return _dicom.FindFirst("0070031A") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> FiducialUID_
        {
            get { return _dicom.FindAll("0070031A").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public SequenceSelector FiducialSetSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0070031C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FiducialSetSequence_
        {
            get { return _dicom.FindAll("0070031C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FiducialSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0070031E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FiducialSequence_
        {
            get { return _dicom.FindAll("0070031E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort GraphicLayerRecommendedDisplayCIELabValue
        {
            get { return _dicom.FindFirst("00700401") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> GraphicLayerRecommendedDisplayCIELabValue_
        {
            get { return _dicom.FindAll("00700401").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector BlendingSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700402") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BlendingSequence_
        {
            get { return _dicom.FindAll("00700402").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle RelativeOpacity
        {
            get { return _dicom.FindFirst("00700403") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RelativeOpacity_
        {
            get { return _dicom.FindAll("00700403").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector ReferencedSpatialRegistrationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00700404") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedSpatialRegistrationSequence_
        {
            get { return _dicom.FindAll("00700404").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString BlendingPosition
        {
            get { return _dicom.FindFirst("00700405") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlendingPosition_
        {
            get { return _dicom.FindAll("00700405").Select(d => d as CodeString).ToList(); }
        }

        public ShortString HangingProtocolName
        {
            get { return _dicom.FindFirst("00720002") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> HangingProtocolName_
        {
            get { return _dicom.FindAll("00720002").Select(d => d as ShortString).ToList(); }
        }

        public LongString HangingProtocolDescription
        {
            get { return _dicom.FindFirst("00720004") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HangingProtocolDescription_
        {
            get { return _dicom.FindAll("00720004").Select(d => d as LongString).ToList(); }
        }

        public CodeString HangingProtocolLevel
        {
            get { return _dicom.FindFirst("00720006") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> HangingProtocolLevel_
        {
            get { return _dicom.FindAll("00720006").Select(d => d as CodeString).ToList(); }
        }

        public LongString HangingProtocolCreator
        {
            get { return _dicom.FindFirst("00720008") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HangingProtocolCreator_
        {
            get { return _dicom.FindAll("00720008").Select(d => d as LongString).ToList(); }
        }

        public DateTime HangingProtocolCreationDateTime
        {
            get { return _dicom.FindFirst("0072000A") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> HangingProtocolCreationDateTime_
        {
            get { return _dicom.FindAll("0072000A").Select(d => d as DateTime).ToList(); }
        }

        public SequenceSelector HangingProtocolDefinitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0072000C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HangingProtocolDefinitionSequence_
        {
            get { return _dicom.FindAll("0072000C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector HangingProtocolUserIdentificationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0072000E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> HangingProtocolUserIdentificationCodeSequence_
        {
            get { return _dicom.FindAll("0072000E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString HangingProtocolUserGroupName
        {
            get { return _dicom.FindFirst("00720010") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> HangingProtocolUserGroupName_
        {
            get { return _dicom.FindAll("00720010").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector SourceHangingProtocolSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceHangingProtocolSequence_
        {
            get { return _dicom.FindAll("00720012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NumberOfPriorsReferenced
        {
            get { return _dicom.FindFirst("00720014") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfPriorsReferenced_
        {
            get { return _dicom.FindAll("00720014").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ImageSetsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageSetsSequence_
        {
            get { return _dicom.FindAll("00720020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImageSetSelectorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720022") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageSetSelectorSequence_
        {
            get { return _dicom.FindAll("00720022").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ImageSetSelectorUsageFlag
        {
            get { return _dicom.FindFirst("00720024") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageSetSelectorUsageFlag_
        {
            get { return _dicom.FindAll("00720024").Select(d => d as CodeString).ToList(); }
        }

        public AttributeTag SelectorAttribute
        {
            get { return _dicom.FindFirst("00720026") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> SelectorAttribute_
        {
            get { return _dicom.FindAll("00720026").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort SelectorValueNumber
        {
            get { return _dicom.FindFirst("00720028") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SelectorValueNumber_
        {
            get { return _dicom.FindAll("00720028").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector TimeBasedImageSetsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TimeBasedImageSetsSequence_
        {
            get { return _dicom.FindAll("00720030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ImageSetNumber
        {
            get { return _dicom.FindFirst("00720032") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageSetNumber_
        {
            get { return _dicom.FindAll("00720032").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ImageSetSelectorCategory
        {
            get { return _dicom.FindFirst("00720034") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageSetSelectorCategory_
        {
            get { return _dicom.FindAll("00720034").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort RelativeTime
        {
            get { return _dicom.FindFirst("00720038") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RelativeTime_
        {
            get { return _dicom.FindAll("00720038").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString RelativeTimeUnits
        {
            get { return _dicom.FindFirst("0072003A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RelativeTimeUnits_
        {
            get { return _dicom.FindAll("0072003A").Select(d => d as CodeString).ToList(); }
        }

        public SignedShort AbstractPriorValue
        {
            get { return _dicom.FindFirst("0072003C") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> AbstractPriorValue_
        {
            get { return _dicom.FindAll("0072003C").Select(d => d as SignedShort).ToList(); }
        }

        public SequenceSelector AbstractPriorCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0072003E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AbstractPriorCodeSequence_
        {
            get { return _dicom.FindAll("0072003E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ImageSetLabel
        {
            get { return _dicom.FindFirst("00720040") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImageSetLabel_
        {
            get { return _dicom.FindAll("00720040").Select(d => d as LongString).ToList(); }
        }

        public CodeString SelectorAttributeVR
        {
            get { return _dicom.FindFirst("00720050") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SelectorAttributeVR_
        {
            get { return _dicom.FindAll("00720050").Select(d => d as CodeString).ToList(); }
        }

        public AttributeTag SelectorSequencePointer
        {
            get { return _dicom.FindFirst("00720052") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> SelectorSequencePointer_
        {
            get { return _dicom.FindAll("00720052").Select(d => d as AttributeTag).ToList(); }
        }

        public LongString SelectorSequencePointerPrivateCreator
        {
            get { return _dicom.FindFirst("00720054") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SelectorSequencePointerPrivateCreator_
        {
            get { return _dicom.FindAll("00720054").Select(d => d as LongString).ToList(); }
        }

        public LongString SelectorAttributePrivateCreator
        {
            get { return _dicom.FindFirst("00720056") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SelectorAttributePrivateCreator_
        {
            get { return _dicom.FindAll("00720056").Select(d => d as LongString).ToList(); }
        }

        public AttributeTag SelectorATValue
        {
            get { return _dicom.FindFirst("00720060") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> SelectorATValue_
        {
            get { return _dicom.FindAll("00720060").Select(d => d as AttributeTag).ToList(); }
        }

        public CodeString SelectorCSValue
        {
            get { return _dicom.FindFirst("00720062") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SelectorCSValue_
        {
            get { return _dicom.FindAll("00720062").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString SelectorISValue
        {
            get { return _dicom.FindFirst("00720064") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SelectorISValue_
        {
            get { return _dicom.FindAll("00720064").Select(d => d as IntegerString).ToList(); }
        }

        public LongString SelectorLOValue
        {
            get { return _dicom.FindFirst("00720066") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SelectorLOValue_
        {
            get { return _dicom.FindAll("00720066").Select(d => d as LongString).ToList(); }
        }

        public LongText SelectorLTValue
        {
            get { return _dicom.FindFirst("00720068") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> SelectorLTValue_
        {
            get { return _dicom.FindAll("00720068").Select(d => d as LongText).ToList(); }
        }

        public PersonName SelectorPNValue
        {
            get { return _dicom.FindFirst("0072006A") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> SelectorPNValue_
        {
            get { return _dicom.FindAll("0072006A").Select(d => d as PersonName).ToList(); }
        }

        public ShortString SelectorSHValue
        {
            get { return _dicom.FindFirst("0072006C") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> SelectorSHValue_
        {
            get { return _dicom.FindAll("0072006C").Select(d => d as ShortString).ToList(); }
        }

        public ShortText SelectorSTValue
        {
            get { return _dicom.FindFirst("0072006E") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> SelectorSTValue_
        {
            get { return _dicom.FindAll("0072006E").Select(d => d as ShortText).ToList(); }
        }

        public UnlimitedText SelectorUTValue
        {
            get { return _dicom.FindFirst("00720070") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> SelectorUTValue_
        {
            get { return _dicom.FindAll("00720070").Select(d => d as UnlimitedText).ToList(); }
        }

        public DecimalString SelectorDSValue
        {
            get { return _dicom.FindFirst("00720072") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SelectorDSValue_
        {
            get { return _dicom.FindAll("00720072").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointDouble SelectorFDValue
        {
            get { return _dicom.FindFirst("00720074") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> SelectorFDValue_
        {
            get { return _dicom.FindAll("00720074").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointSingle SelectorFLValue
        {
            get { return _dicom.FindFirst("00720076") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SelectorFLValue_
        {
            get { return _dicom.FindAll("00720076").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public UnsignedLong SelectorULValue
        {
            get { return _dicom.FindFirst("00720078") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SelectorULValue_
        {
            get { return _dicom.FindAll("00720078").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedShort SelectorUSValue
        {
            get { return _dicom.FindFirst("0072007A") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SelectorUSValue_
        {
            get { return _dicom.FindAll("0072007A").Select(d => d as UnsignedShort).ToList(); }
        }

        public SignedLong SelectorSLValue
        {
            get { return _dicom.FindFirst("0072007C") as SignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedLong> SelectorSLValue_
        {
            get { return _dicom.FindAll("0072007C").Select(d => d as SignedLong).ToList(); }
        }

        public SignedShort SelectorSSValue
        {
            get { return _dicom.FindFirst("0072007E") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> SelectorSSValue_
        {
            get { return _dicom.FindAll("0072007E").Select(d => d as SignedShort).ToList(); }
        }

        public SequenceSelector SelectorCodeSequenceValue
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720080") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SelectorCodeSequenceValue_
        {
            get { return _dicom.FindAll("00720080").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NumberOfScreens
        {
            get { return _dicom.FindFirst("00720100") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfScreens_
        {
            get { return _dicom.FindAll("00720100").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector NominalScreenDefinitionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720102") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> NominalScreenDefinitionSequence_
        {
            get { return _dicom.FindAll("00720102").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NumberOfVerticalPixels
        {
            get { return _dicom.FindFirst("00720104") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfVerticalPixels_
        {
            get { return _dicom.FindAll("00720104").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfHorizontalPixels
        {
            get { return _dicom.FindFirst("00720106") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfHorizontalPixels_
        {
            get { return _dicom.FindAll("00720106").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble DisplayEnvironmentSpatialPosition
        {
            get { return _dicom.FindFirst("00720108") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DisplayEnvironmentSpatialPosition_
        {
            get { return _dicom.FindAll("00720108").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public UnsignedShort ScreenMinimumGrayscaleBitDepth
        {
            get { return _dicom.FindFirst("0072010A") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ScreenMinimumGrayscaleBitDepth_
        {
            get { return _dicom.FindAll("0072010A").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ScreenMinimumColorBitDepth
        {
            get { return _dicom.FindFirst("0072010C") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ScreenMinimumColorBitDepth_
        {
            get { return _dicom.FindAll("0072010C").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ApplicationMaximumRepaintTime
        {
            get { return _dicom.FindFirst("0072010E") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ApplicationMaximumRepaintTime_
        {
            get { return _dicom.FindAll("0072010E").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector DisplaySetsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720200") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DisplaySetsSequence_
        {
            get { return _dicom.FindAll("00720200").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort DisplaySetNumber
        {
            get { return _dicom.FindFirst("00720202") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DisplaySetNumber_
        {
            get { return _dicom.FindAll("00720202").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString DisplaySetLabel
        {
            get { return _dicom.FindFirst("00720203") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DisplaySetLabel_
        {
            get { return _dicom.FindAll("00720203").Select(d => d as LongString).ToList(); }
        }

        public UnsignedShort DisplaySetPresentationGroup
        {
            get { return _dicom.FindFirst("00720204") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DisplaySetPresentationGroup_
        {
            get { return _dicom.FindAll("00720204").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString DisplaySetPresentationGroupDescription
        {
            get { return _dicom.FindFirst("00720206") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DisplaySetPresentationGroupDescription_
        {
            get { return _dicom.FindAll("00720206").Select(d => d as LongString).ToList(); }
        }

        public CodeString PartialDataDisplayHandling
        {
            get { return _dicom.FindFirst("00720208") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PartialDataDisplayHandling_
        {
            get { return _dicom.FindAll("00720208").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector SynchronizedScrollingSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720210") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SynchronizedScrollingSequence_
        {
            get { return _dicom.FindAll("00720210").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort DisplaySetScrollingGroup
        {
            get { return _dicom.FindFirst("00720212") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DisplaySetScrollingGroup_
        {
            get { return _dicom.FindAll("00720212").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector NavigationIndicatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720214") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> NavigationIndicatorSequence_
        {
            get { return _dicom.FindAll("00720214").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort NavigationDisplaySet
        {
            get { return _dicom.FindFirst("00720216") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NavigationDisplaySet_
        {
            get { return _dicom.FindAll("00720216").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ReferenceDisplaySets
        {
            get { return _dicom.FindFirst("00720218") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReferenceDisplaySets_
        {
            get { return _dicom.FindAll("00720218").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ImageBoxesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720300") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageBoxesSequence_
        {
            get { return _dicom.FindAll("00720300").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ImageBoxNumber
        {
            get { return _dicom.FindFirst("00720302") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageBoxNumber_
        {
            get { return _dicom.FindAll("00720302").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ImageBoxLayoutType
        {
            get { return _dicom.FindFirst("00720304") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageBoxLayoutType_
        {
            get { return _dicom.FindAll("00720304").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort ImageBoxTileHorizontalDimension
        {
            get { return _dicom.FindFirst("00720306") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageBoxTileHorizontalDimension_
        {
            get { return _dicom.FindAll("00720306").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ImageBoxTileVerticalDimension
        {
            get { return _dicom.FindFirst("00720308") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageBoxTileVerticalDimension_
        {
            get { return _dicom.FindAll("00720308").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ImageBoxScrollDirection
        {
            get { return _dicom.FindFirst("00720310") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageBoxScrollDirection_
        {
            get { return _dicom.FindAll("00720310").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ImageBoxSmallScrollType
        {
            get { return _dicom.FindFirst("00720312") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageBoxSmallScrollType_
        {
            get { return _dicom.FindAll("00720312").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort ImageBoxSmallScrollAmount
        {
            get { return _dicom.FindFirst("00720314") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageBoxSmallScrollAmount_
        {
            get { return _dicom.FindAll("00720314").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString ImageBoxLargeScrollType
        {
            get { return _dicom.FindFirst("00720316") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageBoxLargeScrollType_
        {
            get { return _dicom.FindAll("00720316").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort ImageBoxLargeScrollAmount
        {
            get { return _dicom.FindFirst("00720318") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageBoxLargeScrollAmount_
        {
            get { return _dicom.FindAll("00720318").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ImageBoxOverlapPriority
        {
            get { return _dicom.FindFirst("00720320") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageBoxOverlapPriority_
        {
            get { return _dicom.FindAll("00720320").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble CineRelativeToRealTime
        {
            get { return _dicom.FindFirst("00720330") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> CineRelativeToRealTime_
        {
            get { return _dicom.FindAll("00720330").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector FilterOperationsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720400") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FilterOperationsSequence_
        {
            get { return _dicom.FindAll("00720400").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FilterByCategory
        {
            get { return _dicom.FindFirst("00720402") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FilterByCategory_
        {
            get { return _dicom.FindAll("00720402").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FilterByAttributePresence
        {
            get { return _dicom.FindFirst("00720404") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FilterByAttributePresence_
        {
            get { return _dicom.FindAll("00720404").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FilterByOperator
        {
            get { return _dicom.FindFirst("00720406") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FilterByOperator_
        {
            get { return _dicom.FindAll("00720406").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort StructuredDisplayBackgroundCIELabValue
        {
            get { return _dicom.FindFirst("00720420") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> StructuredDisplayBackgroundCIELabValue_
        {
            get { return _dicom.FindAll("00720420").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort EmptyImageBoxCIELabValue
        {
            get { return _dicom.FindFirst("00720421") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> EmptyImageBoxCIELabValue_
        {
            get { return _dicom.FindAll("00720421").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector StructuredDisplayImageBoxSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720422") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> StructuredDisplayImageBoxSequence_
        {
            get { return _dicom.FindAll("00720422").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector StructuredDisplayTextBoxSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720424") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> StructuredDisplayTextBoxSequence_
        {
            get { return _dicom.FindAll("00720424").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedFirstFrameSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720427") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedFirstFrameSequence_
        {
            get { return _dicom.FindAll("00720427").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImageBoxSynchronizationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720430") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageBoxSynchronizationSequence_
        {
            get { return _dicom.FindAll("00720430").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort SynchronizedImageBoxList
        {
            get { return _dicom.FindFirst("00720432") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> SynchronizedImageBoxList_
        {
            get { return _dicom.FindAll("00720432").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString TypeOfSynchronization
        {
            get { return _dicom.FindFirst("00720434") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TypeOfSynchronization_
        {
            get { return _dicom.FindAll("00720434").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BlendingOperationType
        {
            get { return _dicom.FindFirst("00720500") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlendingOperationType_
        {
            get { return _dicom.FindAll("00720500").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ReformattingOperationType
        {
            get { return _dicom.FindFirst("00720510") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReformattingOperationType_
        {
            get { return _dicom.FindAll("00720510").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble ReformattingThickness
        {
            get { return _dicom.FindFirst("00720512") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReformattingThickness_
        {
            get { return _dicom.FindAll("00720512").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ReformattingInterval
        {
            get { return _dicom.FindFirst("00720514") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ReformattingInterval_
        {
            get { return _dicom.FindAll("00720514").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString ReformattingOperationInitialViewDirection
        {
            get { return _dicom.FindFirst("00720516") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReformattingOperationInitialViewDirection_
        {
            get { return _dicom.FindAll("00720516").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ThreeDRenderingType
        {
            get { return _dicom.FindFirst("00720520") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ThreeDRenderingType_
        {
            get { return _dicom.FindAll("00720520").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector SortingOperationsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720600") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SortingOperationsSequence_
        {
            get { return _dicom.FindAll("00720600").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString SortByCategory
        {
            get { return _dicom.FindFirst("00720602") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SortByCategory_
        {
            get { return _dicom.FindAll("00720602").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SortingDirection
        {
            get { return _dicom.FindFirst("00720604") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SortingDirection_
        {
            get { return _dicom.FindAll("00720604").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DisplaySetPatientOrientation
        {
            get { return _dicom.FindFirst("00720700") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DisplaySetPatientOrientation_
        {
            get { return _dicom.FindAll("00720700").Select(d => d as CodeString).ToList(); }
        }

        public CodeString VOIType
        {
            get { return _dicom.FindFirst("00720702") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VOIType_
        {
            get { return _dicom.FindAll("00720702").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PseudoColorType
        {
            get { return _dicom.FindFirst("00720704") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PseudoColorType_
        {
            get { return _dicom.FindAll("00720704").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector PseudoColorPaletteInstanceReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00720705") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PseudoColorPaletteInstanceReferenceSequence_
        {
            get { return _dicom.FindAll("00720705").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ShowGrayscaleInverted
        {
            get { return _dicom.FindFirst("00720706") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShowGrayscaleInverted_
        {
            get { return _dicom.FindAll("00720706").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ShowImageTrueSizeFlag
        {
            get { return _dicom.FindFirst("00720710") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShowImageTrueSizeFlag_
        {
            get { return _dicom.FindAll("00720710").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ShowGraphicAnnotationFlag
        {
            get { return _dicom.FindFirst("00720712") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShowGraphicAnnotationFlag_
        {
            get { return _dicom.FindAll("00720712").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ShowPatientDemographicsFlag
        {
            get { return _dicom.FindFirst("00720714") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShowPatientDemographicsFlag_
        {
            get { return _dicom.FindAll("00720714").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ShowAcquisitionTechniquesFlag
        {
            get { return _dicom.FindFirst("00720716") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShowAcquisitionTechniquesFlag_
        {
            get { return _dicom.FindAll("00720716").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DisplaySetHorizontalJustification
        {
            get { return _dicom.FindFirst("00720717") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DisplaySetHorizontalJustification_
        {
            get { return _dicom.FindAll("00720717").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DisplaySetVerticalJustification
        {
            get { return _dicom.FindFirst("00720718") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DisplaySetVerticalJustification_
        {
            get { return _dicom.FindAll("00720718").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointDouble ContinuationStartMeterset
        {
            get { return _dicom.FindFirst("00740120") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ContinuationStartMeterset_
        {
            get { return _dicom.FindAll("00740120").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ContinuationEndMeterset
        {
            get { return _dicom.FindFirst("00740121") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ContinuationEndMeterset_
        {
            get { return _dicom.FindAll("00740121").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public CodeString ProcedureStepState
        {
            get { return _dicom.FindFirst("00741000") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ProcedureStepState_
        {
            get { return _dicom.FindAll("00741000").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ProcedureStepProgressInformationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProcedureStepProgressInformationSequence_
        {
            get { return _dicom.FindAll("00741002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString ProcedureStepProgress
        {
            get { return _dicom.FindFirst("00741004") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ProcedureStepProgress_
        {
            get { return _dicom.FindAll("00741004").Select(d => d as DecimalString).ToList(); }
        }

        public ShortText ProcedureStepProgressDescription
        {
            get { return _dicom.FindFirst("00741006") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ProcedureStepProgressDescription_
        {
            get { return _dicom.FindAll("00741006").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector ProcedureStepCommunicationsURISequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProcedureStepCommunicationsURISequence_
        {
            get { return _dicom.FindAll("00741008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText ContactURI
        {
            get { return _dicom.FindFirst("0074100a") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ContactURI_
        {
            get { return _dicom.FindAll("0074100a").Select(d => d as ShortText).ToList(); }
        }

        public LongString ContactDisplayName
        {
            get { return _dicom.FindFirst("0074100c") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ContactDisplayName_
        {
            get { return _dicom.FindAll("0074100c").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ProcedureStepDiscontinuationReasonCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0074100e") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProcedureStepDiscontinuationReasonCodeSequence_
        {
            get { return _dicom.FindAll("0074100e").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector BeamTaskSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BeamTaskSequence_
        {
            get { return _dicom.FindAll("00741020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString BeamTaskType
        {
            get { return _dicom.FindFirst("00741022") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BeamTaskType_
        {
            get { return _dicom.FindAll("00741022").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString BeamOrderIndexTrialRetired
        {
            get { return _dicom.FindFirst("00741024") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> BeamOrderIndexTrialRetired_
        {
            get { return _dicom.FindAll("00741024").Select(d => d as IntegerString).ToList(); }
        }

        public FloatingPointDouble TableTopVerticalAdjustedPosition
        {
            get { return _dicom.FindFirst("00741026") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableTopVerticalAdjustedPosition_
        {
            get { return _dicom.FindAll("00741026").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TableTopLongitudinalAdjustedPosition
        {
            get { return _dicom.FindFirst("00741027") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableTopLongitudinalAdjustedPosition_
        {
            get { return _dicom.FindAll("00741027").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TableTopLateralAdjustedPosition
        {
            get { return _dicom.FindFirst("00741028") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableTopLateralAdjustedPosition_
        {
            get { return _dicom.FindAll("00741028").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble PatientSupportAdjustedAngle
        {
            get { return _dicom.FindFirst("0074102A") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> PatientSupportAdjustedAngle_
        {
            get { return _dicom.FindAll("0074102A").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TableTopEccentricAdjustedAngle
        {
            get { return _dicom.FindFirst("0074102B") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableTopEccentricAdjustedAngle_
        {
            get { return _dicom.FindAll("0074102B").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TableTopPitchAdjustedAngle
        {
            get { return _dicom.FindFirst("0074102C") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableTopPitchAdjustedAngle_
        {
            get { return _dicom.FindAll("0074102C").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TableTopRollAdjustedAngle
        {
            get { return _dicom.FindFirst("0074102D") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TableTopRollAdjustedAngle_
        {
            get { return _dicom.FindAll("0074102D").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector DeliveryVerificationImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DeliveryVerificationImageSequence_
        {
            get { return _dicom.FindAll("00741030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString VerificationImageTiming
        {
            get { return _dicom.FindFirst("00741032") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> VerificationImageTiming_
        {
            get { return _dicom.FindAll("00741032").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DoubleExposureFlag
        {
            get { return _dicom.FindFirst("00741034") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DoubleExposureFlag_
        {
            get { return _dicom.FindAll("00741034").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DoubleExposureOrdering
        {
            get { return _dicom.FindFirst("00741036") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DoubleExposureOrdering_
        {
            get { return _dicom.FindAll("00741036").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString DoubleExposureMetersetTrialRetired
        {
            get { return _dicom.FindFirst("00741038") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoubleExposureMetersetTrialRetired_
        {
            get { return _dicom.FindAll("00741038").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DoubleExposureFieldDeltaTrialRetired
        {
            get { return _dicom.FindFirst("0074103A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoubleExposureFieldDeltaTrialRetired_
        {
            get { return _dicom.FindAll("0074103A").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector RelatedReferenceRTImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelatedReferenceRTImageSequence_
        {
            get { return _dicom.FindAll("00741040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector GeneralMachineVerificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741042") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GeneralMachineVerificationSequence_
        {
            get { return _dicom.FindAll("00741042").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ConventionalMachineVerificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741044") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ConventionalMachineVerificationSequence_
        {
            get { return _dicom.FindAll("00741044").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonMachineVerificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741046") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonMachineVerificationSequence_
        {
            get { return _dicom.FindAll("00741046").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FailedAttributesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741048") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FailedAttributesSequence_
        {
            get { return _dicom.FindAll("00741048").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OverriddenAttributesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0074104A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OverriddenAttributesSequence_
        {
            get { return _dicom.FindAll("0074104A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ConventionalControlPointVerificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0074104C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ConventionalControlPointVerificationSequence_
        {
            get { return _dicom.FindAll("0074104C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonControlPointVerificationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0074104E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonControlPointVerificationSequence_
        {
            get { return _dicom.FindAll("0074104E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AttributeOccurrenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AttributeOccurrenceSequence_
        {
            get { return _dicom.FindAll("00741050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public AttributeTag AttributeOccurrencePointer
        {
            get { return _dicom.FindFirst("00741052") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> AttributeOccurrencePointer_
        {
            get { return _dicom.FindAll("00741052").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedLong AttributeItemSelector
        {
            get { return _dicom.FindFirst("00741054") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> AttributeItemSelector_
        {
            get { return _dicom.FindAll("00741054").Select(d => d as UnsignedLong).ToList(); }
        }

        public LongString AttributeOccurrencePrivateCreator
        {
            get { return _dicom.FindFirst("00741056") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AttributeOccurrencePrivateCreator_
        {
            get { return _dicom.FindAll("00741056").Select(d => d as LongString).ToList(); }
        }

        public IntegerString SelectorSequencePointerItems
        {
            get { return _dicom.FindFirst("00741057") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SelectorSequencePointerItems_
        {
            get { return _dicom.FindAll("00741057").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString ScheduledProcedureStepPriority
        {
            get { return _dicom.FindFirst("00741200") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScheduledProcedureStepPriority_
        {
            get { return _dicom.FindAll("00741200").Select(d => d as CodeString).ToList(); }
        }

        public LongString WorklistLabel
        {
            get { return _dicom.FindFirst("00741202") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> WorklistLabel_
        {
            get { return _dicom.FindAll("00741202").Select(d => d as LongString).ToList(); }
        }

        public LongString ProcedureStepLabel
        {
            get { return _dicom.FindFirst("00741204") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ProcedureStepLabel_
        {
            get { return _dicom.FindAll("00741204").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ScheduledProcessingParametersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741210") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ScheduledProcessingParametersSequence_
        {
            get { return _dicom.FindAll("00741210").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerformedProcessingParametersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741212") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerformedProcessingParametersSequence_
        {
            get { return _dicom.FindAll("00741212").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector UnifiedProcedureStepPerformedProcedureSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741216") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> UnifiedProcedureStepPerformedProcedureSequence_
        {
            get { return _dicom.FindAll("00741216").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RelatedProcedureStepSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelatedProcedureStepSequenceRetired_
        {
            get { return _dicom.FindAll("00741220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ProcedureStepRelationshipTypeRetired
        {
            get { return _dicom.FindFirst("00741222") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ProcedureStepRelationshipTypeRetired_
        {
            get { return _dicom.FindAll("00741222").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReplacedProcedureStepSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00741224") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReplacedProcedureStepSequence_
        {
            get { return _dicom.FindAll("00741224").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString DeletionLock
        {
            get { return _dicom.FindFirst("00741230") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DeletionLock_
        {
            get { return _dicom.FindAll("00741230").Select(d => d as LongString).ToList(); }
        }

        public ApplicationEntity ReceivingAE
        {
            get { return _dicom.FindFirst("00741234") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> ReceivingAE_
        {
            get { return _dicom.FindAll("00741234").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ApplicationEntity RequestingAE
        {
            get { return _dicom.FindFirst("00741236") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> RequestingAE_
        {
            get { return _dicom.FindAll("00741236").Select(d => d as ApplicationEntity).ToList(); }
        }

        public LongText ReasonForCancellation
        {
            get { return _dicom.FindFirst("00741238") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ReasonForCancellation_
        {
            get { return _dicom.FindAll("00741238").Select(d => d as LongText).ToList(); }
        }

        public CodeString SCPStatus
        {
            get { return _dicom.FindFirst("00741242") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SCPStatus_
        {
            get { return _dicom.FindAll("00741242").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SubscriptionListStatus
        {
            get { return _dicom.FindFirst("00741244") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SubscriptionListStatus_
        {
            get { return _dicom.FindAll("00741244").Select(d => d as CodeString).ToList(); }
        }

        public CodeString UnifiedProcedureStepListStatus
        {
            get { return _dicom.FindFirst("00741246") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> UnifiedProcedureStepListStatus_
        {
            get { return _dicom.FindAll("00741246").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedLong BeamOrderIndex
        {
            get { return _dicom.FindFirst("00741324") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> BeamOrderIndex_
        {
            get { return _dicom.FindAll("00741324").Select(d => d as UnsignedLong).ToList(); }
        }

        public FloatingPointDouble DoubleExposureMeterset
        {
            get { return _dicom.FindFirst("00741338") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DoubleExposureMeterset_
        {
            get { return _dicom.FindAll("00741338").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble DoubleExposureFieldDelta
        {
            get { return _dicom.FindFirst("0074133A") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> DoubleExposureFieldDelta_
        {
            get { return _dicom.FindAll("0074133A").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public LongString ImplantAssemblyTemplateName
        {
            get { return _dicom.FindFirst("00760001") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantAssemblyTemplateName_
        {
            get { return _dicom.FindAll("00760001").Select(d => d as LongString).ToList(); }
        }

        public LongString ImplantAssemblyTemplateIssuer
        {
            get { return _dicom.FindFirst("00760003") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantAssemblyTemplateIssuer_
        {
            get { return _dicom.FindAll("00760003").Select(d => d as LongString).ToList(); }
        }

        public LongString ImplantAssemblyTemplateVersion
        {
            get { return _dicom.FindFirst("00760006") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantAssemblyTemplateVersion_
        {
            get { return _dicom.FindAll("00760006").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReplacedImplantAssemblyTemplateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00760008") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReplacedImplantAssemblyTemplateSequence_
        {
            get { return _dicom.FindAll("00760008").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ImplantAssemblyTemplateType
        {
            get { return _dicom.FindFirst("0076000A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImplantAssemblyTemplateType_
        {
            get { return _dicom.FindAll("0076000A").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector OriginalImplantAssemblyTemplateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0076000C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OriginalImplantAssemblyTemplateSequence_
        {
            get { return _dicom.FindAll("0076000C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector DerivationImplantAssemblyTemplateSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0076000E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DerivationImplantAssemblyTemplateSequence_
        {
            get { return _dicom.FindAll("0076000E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImplantAssemblyTemplateTargetAnatomySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00760010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantAssemblyTemplateTargetAnatomySequence_
        {
            get { return _dicom.FindAll("00760010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ProcedureTypeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00760020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProcedureTypeCodeSequence_
        {
            get { return _dicom.FindAll("00760020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SurgicalTechnique
        {
            get { return _dicom.FindFirst("00760030") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SurgicalTechnique_
        {
            get { return _dicom.FindAll("00760030").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ComponentTypesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00760032") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ComponentTypesSequence_
        {
            get { return _dicom.FindAll("00760032").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ComponentTypeCodeSequence
        {
            get { return _dicom.FindFirst("00760034") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ComponentTypeCodeSequence_
        {
            get { return _dicom.FindAll("00760034").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ExclusiveComponentType
        {
            get { return _dicom.FindFirst("00760036") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExclusiveComponentType_
        {
            get { return _dicom.FindAll("00760036").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MandatoryComponentType
        {
            get { return _dicom.FindFirst("00760038") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MandatoryComponentType_
        {
            get { return _dicom.FindAll("00760038").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ComponentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00760040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ComponentSequence_
        {
            get { return _dicom.FindAll("00760040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ComponentID
        {
            get { return _dicom.FindFirst("00760055") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ComponentID_
        {
            get { return _dicom.FindAll("00760055").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ComponentAssemblySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00760060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ComponentAssemblySequence_
        {
            get { return _dicom.FindAll("00760060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort Component1ReferencedID
        {
            get { return _dicom.FindFirst("00760070") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Component1ReferencedID_
        {
            get { return _dicom.FindAll("00760070").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort Component1ReferencedMatingFeatureSetID
        {
            get { return _dicom.FindFirst("00760080") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Component1ReferencedMatingFeatureSetID_
        {
            get { return _dicom.FindAll("00760080").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort Component1ReferencedMatingFeatureID
        {
            get { return _dicom.FindFirst("00760090") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Component1ReferencedMatingFeatureID_
        {
            get { return _dicom.FindAll("00760090").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort Component2ReferencedID
        {
            get { return _dicom.FindFirst("007600A0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Component2ReferencedID_
        {
            get { return _dicom.FindAll("007600A0").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort Component2ReferencedMatingFeatureSetID
        {
            get { return _dicom.FindFirst("007600B0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Component2ReferencedMatingFeatureSetID_
        {
            get { return _dicom.FindAll("007600B0").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort Component2ReferencedMatingFeatureID
        {
            get { return _dicom.FindFirst("007600C0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Component2ReferencedMatingFeatureID_
        {
            get { return _dicom.FindAll("007600C0").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString ImplantTemplateGroupName
        {
            get { return _dicom.FindFirst("00780001") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantTemplateGroupName_
        {
            get { return _dicom.FindAll("00780001").Select(d => d as LongString).ToList(); }
        }

        public ShortText ImplantTemplateGroupDescription
        {
            get { return _dicom.FindFirst("00780010") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ImplantTemplateGroupDescription_
        {
            get { return _dicom.FindAll("00780010").Select(d => d as ShortText).ToList(); }
        }

        public LongString ImplantTemplateGroupIssuer
        {
            get { return _dicom.FindFirst("00780020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantTemplateGroupIssuer_
        {
            get { return _dicom.FindAll("00780020").Select(d => d as LongString).ToList(); }
        }

        public LongString ImplantTemplateGroupVersion
        {
            get { return _dicom.FindFirst("00780024") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantTemplateGroupVersion_
        {
            get { return _dicom.FindAll("00780024").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReplacedImplantTemplateGroupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00780026") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReplacedImplantTemplateGroupSequence_
        {
            get { return _dicom.FindAll("00780026").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImplantTemplateGroupTargetAnatomySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00780028") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantTemplateGroupTargetAnatomySequence_
        {
            get { return _dicom.FindAll("00780028").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImplantTemplateGroupMembersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("0078002A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantTemplateGroupMembersSequence_
        {
            get { return _dicom.FindAll("0078002A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ImplantTemplateGroupMemberID
        {
            get { return _dicom.FindFirst("0078002E") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImplantTemplateGroupMemberID_
        {
            get { return _dicom.FindAll("0078002E").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointDouble ThreeDImplantTemplateGroupMemberMatchingPoint
        {
            get { return _dicom.FindFirst("00780050") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDImplantTemplateGroupMemberMatchingPoint_
        {
            get { return _dicom.FindAll("00780050").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble ThreeDImplantTemplateGroupMemberMatchingAxes
        {
            get { return _dicom.FindFirst("00780060") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> ThreeDImplantTemplateGroupMemberMatchingAxes_
        {
            get { return _dicom.FindAll("00780060").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector ImplantTemplateGroupMemberMatching2DCoordinatesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00780070") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantTemplateGroupMemberMatching2DCoordinatesSequence_
        {
            get { return _dicom.FindAll("00780070").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointDouble TwoDImplantTemplateGroupMemberMatchingPoint
        {
            get { return _dicom.FindFirst("00780090") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDImplantTemplateGroupMemberMatchingPoint_
        {
            get { return _dicom.FindAll("00780090").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public FloatingPointDouble TwoDImplantTemplateGroupMemberMatchingAxes
        {
            get { return _dicom.FindFirst("007800A0") as FloatingPointDouble; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointDouble> TwoDImplantTemplateGroupMemberMatchingAxes_
        {
            get { return _dicom.FindAll("007800A0").Select(d => d as FloatingPointDouble).ToList(); }
        }

        public SequenceSelector ImplantTemplateGroupVariationDimensionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("007800B0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantTemplateGroupVariationDimensionSequence_
        {
            get { return _dicom.FindAll("007800B0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ImplantTemplateGroupVariationDimensionName
        {
            get { return _dicom.FindFirst("007800B2") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImplantTemplateGroupVariationDimensionName_
        {
            get { return _dicom.FindAll("007800B2").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ImplantTemplateGroupVariationDimensionRankSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("007800B4") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImplantTemplateGroupVariationDimensionRankSequence_
        {
            get { return _dicom.FindAll("007800B4").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ReferencedImplantTemplateGroupMemberID
        {
            get { return _dicom.FindFirst("007800B6") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReferencedImplantTemplateGroupMemberID_
        {
            get { return _dicom.FindAll("007800B6").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ImplantTemplateGroupVariationDimensionRank
        {
            get { return _dicom.FindFirst("007800B8") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImplantTemplateGroupVariationDimensionRank_
        {
            get { return _dicom.FindAll("007800B8").Select(d => d as UnsignedShort).ToList(); }
        }

        public ShortString StorageMediaFileSetID
        {
            get { return _dicom.FindFirst("00880130") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> StorageMediaFileSetID_
        {
            get { return _dicom.FindAll("00880130").Select(d => d as ShortString).ToList(); }
        }

        public UniqueIdentifier StorageMediaFileSetUID
        {
            get { return _dicom.FindFirst("00880140") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> StorageMediaFileSetUID_
        {
            get { return _dicom.FindAll("00880140").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public SequenceSelector IconImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("00880200") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IconImageSequence_
        {
            get { return _dicom.FindAll("00880200").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString TopicTitleRetired
        {
            get { return _dicom.FindFirst("00880904") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TopicTitleRetired_
        {
            get { return _dicom.FindAll("00880904").Select(d => d as LongString).ToList(); }
        }

        public ShortText TopicSubjectRetired
        {
            get { return _dicom.FindFirst("00880906") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> TopicSubjectRetired_
        {
            get { return _dicom.FindAll("00880906").Select(d => d as ShortText).ToList(); }
        }

        public LongString TopicAuthorRetired
        {
            get { return _dicom.FindFirst("00880910") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TopicAuthorRetired_
        {
            get { return _dicom.FindAll("00880910").Select(d => d as LongString).ToList(); }
        }

        public LongString TopicKeywordsRetired
        {
            get { return _dicom.FindFirst("00880912") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TopicKeywordsRetired_
        {
            get { return _dicom.FindAll("00880912").Select(d => d as LongString).ToList(); }
        }

        public CodeString SOPInstanceStatus
        {
            get { return _dicom.FindFirst("01000410") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SOPInstanceStatus_
        {
            get { return _dicom.FindAll("01000410").Select(d => d as CodeString).ToList(); }
        }

        public DateTime SOPAuthorizationDateTime
        {
            get { return _dicom.FindFirst("01000420") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> SOPAuthorizationDateTime_
        {
            get { return _dicom.FindAll("01000420").Select(d => d as DateTime).ToList(); }
        }

        public LongText SOPAuthorizationComment
        {
            get { return _dicom.FindFirst("01000424") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> SOPAuthorizationComment_
        {
            get { return _dicom.FindAll("01000424").Select(d => d as LongText).ToList(); }
        }

        public LongString AuthorizationEquipmentCertificationNumber
        {
            get { return _dicom.FindFirst("01000426") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AuthorizationEquipmentCertificationNumber_
        {
            get { return _dicom.FindAll("01000426").Select(d => d as LongString).ToList(); }
        }

        public UnsignedShort MACIDNumber
        {
            get { return _dicom.FindFirst("04000005") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MACIDNumber_
        {
            get { return _dicom.FindAll("04000005").Select(d => d as UnsignedShort).ToList(); }
        }

        public UniqueIdentifier MACCalculationTransferSyntaxUID
        {
            get { return _dicom.FindFirst("04000010") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> MACCalculationTransferSyntaxUID_
        {
            get { return _dicom.FindAll("04000010").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString MACAlgorithm
        {
            get { return _dicom.FindFirst("04000015") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MACAlgorithm_
        {
            get { return _dicom.FindAll("04000015").Select(d => d as CodeString).ToList(); }
        }

        public AttributeTag DataElementsSigned
        {
            get { return _dicom.FindFirst("04000020") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> DataElementsSigned_
        {
            get { return _dicom.FindAll("04000020").Select(d => d as AttributeTag).ToList(); }
        }

        public UniqueIdentifier DigitalSignatureUID
        {
            get { return _dicom.FindFirst("04000100") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> DigitalSignatureUID_
        {
            get { return _dicom.FindAll("04000100").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public DateTime DigitalSignatureDateTime
        {
            get { return _dicom.FindFirst("04000105") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> DigitalSignatureDateTime_
        {
            get { return _dicom.FindAll("04000105").Select(d => d as DateTime).ToList(); }
        }

        public CodeString CertificateType
        {
            get { return _dicom.FindFirst("04000110") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CertificateType_
        {
            get { return _dicom.FindAll("04000110").Select(d => d as CodeString).ToList(); }
        }

        public OtherByteString CertificateOfSigner
        {
            get { return _dicom.FindFirst("04000115") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> CertificateOfSigner_
        {
            get { return _dicom.FindAll("04000115").Select(d => d as OtherByteString).ToList(); }
        }

        public OtherByteString Signature
        {
            get { return _dicom.FindFirst("04000120") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> Signature_
        {
            get { return _dicom.FindAll("04000120").Select(d => d as OtherByteString).ToList(); }
        }

        public CodeString CertifiedTimestampType
        {
            get { return _dicom.FindFirst("04000305") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CertifiedTimestampType_
        {
            get { return _dicom.FindAll("04000305").Select(d => d as CodeString).ToList(); }
        }

        public OtherByteString CertifiedTimestamp
        {
            get { return _dicom.FindFirst("04000310") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> CertifiedTimestamp_
        {
            get { return _dicom.FindAll("04000310").Select(d => d as OtherByteString).ToList(); }
        }

        public SequenceSelector DigitalSignaturePurposeCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("04000401") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DigitalSignaturePurposeCodeSequence_
        {
            get { return _dicom.FindAll("04000401").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedDigitalSignatureSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("04000402") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedDigitalSignatureSequence_
        {
            get { return _dicom.FindAll("04000402").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedSOPInstanceMACSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("04000403") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedSOPInstanceMACSequence_
        {
            get { return _dicom.FindAll("04000403").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherByteString MAC
        {
            get { return _dicom.FindFirst("04000404") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> MAC_
        {
            get { return _dicom.FindAll("04000404").Select(d => d as OtherByteString).ToList(); }
        }

        public SequenceSelector EncryptedAttributesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("04000500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> EncryptedAttributesSequence_
        {
            get { return _dicom.FindAll("04000500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier EncryptedContentTransferSyntaxUID
        {
            get { return _dicom.FindFirst("04000510") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> EncryptedContentTransferSyntaxUID_
        {
            get { return _dicom.FindAll("04000510").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public OtherByteString EncryptedContent
        {
            get { return _dicom.FindFirst("04000520") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> EncryptedContent_
        {
            get { return _dicom.FindAll("04000520").Select(d => d as OtherByteString).ToList(); }
        }

        public SequenceSelector ModifiedAttributesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("04000550") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ModifiedAttributesSequence_
        {
            get { return _dicom.FindAll("04000550").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OriginalAttributesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("04000561") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OriginalAttributesSequence_
        {
            get { return _dicom.FindAll("04000561").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DateTime AttributeModificationDateTime
        {
            get { return _dicom.FindFirst("04000562") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> AttributeModificationDateTime_
        {
            get { return _dicom.FindAll("04000562").Select(d => d as DateTime).ToList(); }
        }

        public LongString ModifyingSystem
        {
            get { return _dicom.FindFirst("04000563") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ModifyingSystem_
        {
            get { return _dicom.FindAll("04000563").Select(d => d as LongString).ToList(); }
        }

        public LongString SourceOfPreviousValues
        {
            get { return _dicom.FindFirst("04000564") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SourceOfPreviousValues_
        {
            get { return _dicom.FindAll("04000564").Select(d => d as LongString).ToList(); }
        }

        public CodeString ReasonForTheAttributeModification
        {
            get { return _dicom.FindFirst("04000565") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReasonForTheAttributeModification_
        {
            get { return _dicom.FindAll("04000565").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort EscapeTripletRetired
        {
            get { return _dicom.FindFirst("1000xxx0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> EscapeTripletRetired_
        {
            get { return _dicom.FindAll("1000xxx0").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort RunLengthTripletRetired
        {
            get { return _dicom.FindFirst("1000xxx1") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> RunLengthTripletRetired_
        {
            get { return _dicom.FindAll("1000xxx1").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort HuffmanTableSizeRetired
        {
            get { return _dicom.FindFirst("1000xxx2") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HuffmanTableSizeRetired_
        {
            get { return _dicom.FindAll("1000xxx2").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort HuffmanTableTripletRetired
        {
            get { return _dicom.FindFirst("1000xxx3") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> HuffmanTableTripletRetired_
        {
            get { return _dicom.FindAll("1000xxx3").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ShiftTableSizeRetired
        {
            get { return _dicom.FindFirst("1000xxx4") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ShiftTableSizeRetired_
        {
            get { return _dicom.FindAll("1000xxx4").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ShiftTableTripletRetired
        {
            get { return _dicom.FindFirst("1000xxx5") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ShiftTableTripletRetired_
        {
            get { return _dicom.FindAll("1000xxx5").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ZonalMapRetired
        {
            get { return _dicom.FindFirst("1010xxxx") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ZonalMapRetired_
        {
            get { return _dicom.FindAll("1010xxxx").Select(d => d as UnsignedShort).ToList(); }
        }

        public IntegerString NumberOfCopies
        {
            get { return _dicom.FindFirst("20000010") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfCopies_
        {
            get { return _dicom.FindAll("20000010").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector PrinterConfigurationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("2000001E") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrinterConfigurationSequence_
        {
            get { return _dicom.FindAll("2000001E").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PrintPriority
        {
            get { return _dicom.FindFirst("20000020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PrintPriority_
        {
            get { return _dicom.FindAll("20000020").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MediumType
        {
            get { return _dicom.FindFirst("20000030") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MediumType_
        {
            get { return _dicom.FindAll("20000030").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FilmDestination
        {
            get { return _dicom.FindFirst("20000040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FilmDestination_
        {
            get { return _dicom.FindAll("20000040").Select(d => d as CodeString).ToList(); }
        }

        public LongString FilmSessionLabel
        {
            get { return _dicom.FindFirst("20000050") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FilmSessionLabel_
        {
            get { return _dicom.FindAll("20000050").Select(d => d as LongString).ToList(); }
        }

        public IntegerString MemoryAllocation
        {
            get { return _dicom.FindFirst("20000060") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> MemoryAllocation_
        {
            get { return _dicom.FindAll("20000060").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString MaximumMemoryAllocation
        {
            get { return _dicom.FindFirst("20000061") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> MaximumMemoryAllocation_
        {
            get { return _dicom.FindAll("20000061").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString ColorImagePrintingFlagRetired
        {
            get { return _dicom.FindFirst("20000062") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ColorImagePrintingFlagRetired_
        {
            get { return _dicom.FindAll("20000062").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CollationFlagRetired
        {
            get { return _dicom.FindFirst("20000063") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CollationFlagRetired_
        {
            get { return _dicom.FindAll("20000063").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AnnotationFlagRetired
        {
            get { return _dicom.FindFirst("20000065") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AnnotationFlagRetired_
        {
            get { return _dicom.FindAll("20000065").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ImageOverlayFlagRetired
        {
            get { return _dicom.FindFirst("20000067") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageOverlayFlagRetired_
        {
            get { return _dicom.FindAll("20000067").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PresentationLUTFlagRetired
        {
            get { return _dicom.FindFirst("20000069") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PresentationLUTFlagRetired_
        {
            get { return _dicom.FindAll("20000069").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ImageBoxPresentationLUTFlagRetired
        {
            get { return _dicom.FindFirst("2000006A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ImageBoxPresentationLUTFlagRetired_
        {
            get { return _dicom.FindAll("2000006A").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort MemoryBitDepth
        {
            get { return _dicom.FindFirst("200000A0") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MemoryBitDepth_
        {
            get { return _dicom.FindAll("200000A0").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort PrintingBitDepth
        {
            get { return _dicom.FindFirst("200000A1") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PrintingBitDepth_
        {
            get { return _dicom.FindAll("200000A1").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector MediaInstalledSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("200000A2") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MediaInstalledSequence_
        {
            get { return _dicom.FindAll("200000A2").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OtherMediaAvailableSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("200000A4") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OtherMediaAvailableSequence_
        {
            get { return _dicom.FindAll("200000A4").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SupportedImageDisplayFormatsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("200000A8") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SupportedImageDisplayFormatsSequence_
        {
            get { return _dicom.FindAll("200000A8").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedFilmBoxSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20000500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedFilmBoxSequence_
        {
            get { return _dicom.FindAll("20000500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedStoredPrintSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("20000510") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedStoredPrintSequenceRetired_
        {
            get { return _dicom.FindAll("20000510").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText ImageDisplayFormat
        {
            get { return _dicom.FindFirst("20100010") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ImageDisplayFormat_
        {
            get { return _dicom.FindAll("20100010").Select(d => d as ShortText).ToList(); }
        }

        public CodeString AnnotationDisplayFormatID
        {
            get { return _dicom.FindFirst("20100030") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AnnotationDisplayFormatID_
        {
            get { return _dicom.FindAll("20100030").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FilmOrientation
        {
            get { return _dicom.FindFirst("20100040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FilmOrientation_
        {
            get { return _dicom.FindAll("20100040").Select(d => d as CodeString).ToList(); }
        }

        public CodeString FilmSizeID
        {
            get { return _dicom.FindFirst("20100050") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FilmSizeID_
        {
            get { return _dicom.FindAll("20100050").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PrinterResolutionID
        {
            get { return _dicom.FindFirst("20100052") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PrinterResolutionID_
        {
            get { return _dicom.FindAll("20100052").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DefaultPrinterResolutionID
        {
            get { return _dicom.FindFirst("20100054") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DefaultPrinterResolutionID_
        {
            get { return _dicom.FindAll("20100054").Select(d => d as CodeString).ToList(); }
        }

        public CodeString MagnificationType
        {
            get { return _dicom.FindFirst("20100060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MagnificationType_
        {
            get { return _dicom.FindAll("20100060").Select(d => d as CodeString).ToList(); }
        }

        public CodeString SmoothingType
        {
            get { return _dicom.FindFirst("20100080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SmoothingType_
        {
            get { return _dicom.FindAll("20100080").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DefaultMagnificationType
        {
            get { return _dicom.FindFirst("201000A6") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DefaultMagnificationType_
        {
            get { return _dicom.FindAll("201000A6").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OtherMagnificationTypesAvailable
        {
            get { return _dicom.FindFirst("201000A7") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OtherMagnificationTypesAvailable_
        {
            get { return _dicom.FindAll("201000A7").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DefaultSmoothingType
        {
            get { return _dicom.FindFirst("201000A8") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DefaultSmoothingType_
        {
            get { return _dicom.FindAll("201000A8").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OtherSmoothingTypesAvailable
        {
            get { return _dicom.FindFirst("201000A9") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OtherSmoothingTypesAvailable_
        {
            get { return _dicom.FindAll("201000A9").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BorderDensity
        {
            get { return _dicom.FindFirst("20100100") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BorderDensity_
        {
            get { return _dicom.FindAll("20100100").Select(d => d as CodeString).ToList(); }
        }

        public CodeString EmptyImageDensity
        {
            get { return _dicom.FindFirst("20100110") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> EmptyImageDensity_
        {
            get { return _dicom.FindAll("20100110").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort MinDensity
        {
            get { return _dicom.FindFirst("20100120") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MinDensity_
        {
            get { return _dicom.FindAll("20100120").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MaxDensity
        {
            get { return _dicom.FindFirst("20100130") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MaxDensity_
        {
            get { return _dicom.FindAll("20100130").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString Trim
        {
            get { return _dicom.FindFirst("20100140") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Trim_
        {
            get { return _dicom.FindAll("20100140").Select(d => d as CodeString).ToList(); }
        }

        public ShortText ConfigurationInformation
        {
            get { return _dicom.FindFirst("20100150") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ConfigurationInformation_
        {
            get { return _dicom.FindAll("20100150").Select(d => d as ShortText).ToList(); }
        }

        public LongText ConfigurationInformationDescription
        {
            get { return _dicom.FindFirst("20100152") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ConfigurationInformationDescription_
        {
            get { return _dicom.FindAll("20100152").Select(d => d as LongText).ToList(); }
        }

        public IntegerString MaximumCollatedFilms
        {
            get { return _dicom.FindFirst("20100154") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> MaximumCollatedFilms_
        {
            get { return _dicom.FindAll("20100154").Select(d => d as IntegerString).ToList(); }
        }

        public UnsignedShort Illumination
        {
            get { return _dicom.FindFirst("2010015E") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> Illumination_
        {
            get { return _dicom.FindAll("2010015E").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort ReflectedAmbientLight
        {
            get { return _dicom.FindFirst("20100160") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReflectedAmbientLight_
        {
            get { return _dicom.FindAll("20100160").Select(d => d as UnsignedShort).ToList(); }
        }

        public DecimalString PrinterPixelSpacing
        {
            get { return _dicom.FindFirst("20100376") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PrinterPixelSpacing_
        {
            get { return _dicom.FindAll("20100376").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ReferencedFilmSessionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20100500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedFilmSessionSequence_
        {
            get { return _dicom.FindAll("20100500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedImageBoxSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20100510") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedImageBoxSequence_
        {
            get { return _dicom.FindAll("20100510").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedBasicAnnotationBoxSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20100520") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedBasicAnnotationBoxSequence_
        {
            get { return _dicom.FindAll("20100520").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ImageBoxPosition
        {
            get { return _dicom.FindFirst("20200010") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageBoxPosition_
        {
            get { return _dicom.FindAll("20200010").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString Polarity
        {
            get { return _dicom.FindFirst("20200020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> Polarity_
        {
            get { return _dicom.FindAll("20200020").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString RequestedImageSize
        {
            get { return _dicom.FindFirst("20200030") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RequestedImageSize_
        {
            get { return _dicom.FindAll("20200030").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString RequestedDecimateCropBehavior
        {
            get { return _dicom.FindFirst("20200040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RequestedDecimateCropBehavior_
        {
            get { return _dicom.FindAll("20200040").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RequestedResolutionID
        {
            get { return _dicom.FindFirst("20200050") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RequestedResolutionID_
        {
            get { return _dicom.FindAll("20200050").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RequestedImageSizeFlag
        {
            get { return _dicom.FindFirst("202000A0") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RequestedImageSizeFlag_
        {
            get { return _dicom.FindAll("202000A0").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DecimateCropResult
        {
            get { return _dicom.FindFirst("202000A2") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DecimateCropResult_
        {
            get { return _dicom.FindAll("202000A2").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector BasicGrayscaleImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20200110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BasicGrayscaleImageSequence_
        {
            get { return _dicom.FindAll("20200110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector BasicColorImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20200111") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BasicColorImageSequence_
        {
            get { return _dicom.FindAll("20200111").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedImageOverlayBoxSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("20200130") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedImageOverlayBoxSequenceRetired_
        {
            get { return _dicom.FindAll("20200130").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedVOILUTBoxSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("20200140") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedVOILUTBoxSequenceRetired_
        {
            get { return _dicom.FindAll("20200140").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort AnnotationPosition
        {
            get { return _dicom.FindFirst("20300010") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AnnotationPosition_
        {
            get { return _dicom.FindAll("20300010").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString TextString
        {
            get { return _dicom.FindFirst("20300020") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TextString_
        {
            get { return _dicom.FindAll("20300020").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReferencedOverlayPlaneSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("20400010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedOverlayPlaneSequenceRetired_
        {
            get { return _dicom.FindAll("20400010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ReferencedOverlayPlaneGroupsRetired
        {
            get { return _dicom.FindFirst("20400011") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ReferencedOverlayPlaneGroupsRetired_
        {
            get { return _dicom.FindAll("20400011").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector OverlayPixelDataSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("20400020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OverlayPixelDataSequenceRetired_
        {
            get { return _dicom.FindAll("20400020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString OverlayMagnificationTypeRetired
        {
            get { return _dicom.FindFirst("20400060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayMagnificationTypeRetired_
        {
            get { return _dicom.FindAll("20400060").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OverlaySmoothingTypeRetired
        {
            get { return _dicom.FindFirst("20400070") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlaySmoothingTypeRetired_
        {
            get { return _dicom.FindAll("20400070").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OverlayOrImageMagnificationRetired
        {
            get { return _dicom.FindFirst("20400072") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayOrImageMagnificationRetired_
        {
            get { return _dicom.FindAll("20400072").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort MagnifyToNumberOfColumnsRetired
        {
            get { return _dicom.FindFirst("20400074") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MagnifyToNumberOfColumnsRetired_
        {
            get { return _dicom.FindAll("20400074").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString OverlayForegroundDensityRetired
        {
            get { return _dicom.FindFirst("20400080") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayForegroundDensityRetired_
        {
            get { return _dicom.FindAll("20400080").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OverlayBackgroundDensityRetired
        {
            get { return _dicom.FindFirst("20400082") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayBackgroundDensityRetired_
        {
            get { return _dicom.FindAll("20400082").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OverlayModeRetired
        {
            get { return _dicom.FindFirst("20400090") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayModeRetired_
        {
            get { return _dicom.FindAll("20400090").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ThresholdDensityRetired
        {
            get { return _dicom.FindFirst("20400100") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ThresholdDensityRetired_
        {
            get { return _dicom.FindAll("20400100").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ReferencedImageBoxSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("20400500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedImageBoxSequenceRetired_
        {
            get { return _dicom.FindAll("20400500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PresentationLUTSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20500010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PresentationLUTSequence_
        {
            get { return _dicom.FindAll("20500010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PresentationLUTShape
        {
            get { return _dicom.FindFirst("20500020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PresentationLUTShape_
        {
            get { return _dicom.FindAll("20500020").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ReferencedPresentationLUTSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("20500500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedPresentationLUTSequence_
        {
            get { return _dicom.FindAll("20500500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString PrintJobIDRetired
        {
            get { return _dicom.FindFirst("21000010") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PrintJobIDRetired_
        {
            get { return _dicom.FindAll("21000010").Select(d => d as ShortString).ToList(); }
        }

        public CodeString ExecutionStatus
        {
            get { return _dicom.FindFirst("21000020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExecutionStatus_
        {
            get { return _dicom.FindAll("21000020").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ExecutionStatusInfo
        {
            get { return _dicom.FindFirst("21000030") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ExecutionStatusInfo_
        {
            get { return _dicom.FindAll("21000030").Select(d => d as CodeString).ToList(); }
        }

        public Date CreationDate
        {
            get { return _dicom.FindFirst("21000040") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> CreationDate_
        {
            get { return _dicom.FindAll("21000040").Select(d => d as Date).ToList(); }
        }

        public Time CreationTime
        {
            get { return _dicom.FindFirst("21000050") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> CreationTime_
        {
            get { return _dicom.FindAll("21000050").Select(d => d as Time).ToList(); }
        }

        public ApplicationEntity Originator
        {
            get { return _dicom.FindFirst("21000070") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> Originator_
        {
            get { return _dicom.FindAll("21000070").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ApplicationEntity DestinationAERetired
        {
            get { return _dicom.FindFirst("21000140") as ApplicationEntity; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ApplicationEntity> DestinationAERetired_
        {
            get { return _dicom.FindAll("21000140").Select(d => d as ApplicationEntity).ToList(); }
        }

        public ShortString OwnerID
        {
            get { return _dicom.FindFirst("21000160") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> OwnerID_
        {
            get { return _dicom.FindAll("21000160").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString NumberOfFilms
        {
            get { return _dicom.FindFirst("21000170") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfFilms_
        {
            get { return _dicom.FindAll("21000170").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ReferencedPrintJobSequencePullStoredPrintRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21000500") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedPrintJobSequencePullStoredPrintRetired_
        {
            get { return _dicom.FindAll("21000500").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PrinterStatus
        {
            get { return _dicom.FindFirst("21100010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PrinterStatus_
        {
            get { return _dicom.FindAll("21100010").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PrinterStatusInfo
        {
            get { return _dicom.FindFirst("21100020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PrinterStatusInfo_
        {
            get { return _dicom.FindAll("21100020").Select(d => d as CodeString).ToList(); }
        }

        public LongString PrinterName
        {
            get { return _dicom.FindFirst("21100030") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PrinterName_
        {
            get { return _dicom.FindAll("21100030").Select(d => d as LongString).ToList(); }
        }

        public ShortString PrintQueueIDRetired
        {
            get { return _dicom.FindFirst("21100099") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PrintQueueIDRetired_
        {
            get { return _dicom.FindAll("21100099").Select(d => d as ShortString).ToList(); }
        }

        public CodeString QueueStatusRetired
        {
            get { return _dicom.FindFirst("21200010") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> QueueStatusRetired_
        {
            get { return _dicom.FindAll("21200010").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector PrintJobDescriptionSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21200050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrintJobDescriptionSequenceRetired_
        {
            get { return _dicom.FindAll("21200050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedPrintJobSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21200070") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedPrintJobSequenceRetired_
        {
            get { return _dicom.FindAll("21200070").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PrintManagementCapabilitiesSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21300010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrintManagementCapabilitiesSequenceRetired_
        {
            get { return _dicom.FindAll("21300010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PrinterCharacteristicsSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21300015") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrinterCharacteristicsSequenceRetired_
        {
            get { return _dicom.FindAll("21300015").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector FilmBoxContentSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21300030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FilmBoxContentSequenceRetired_
        {
            get { return _dicom.FindAll("21300030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImageBoxContentSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21300040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageBoxContentSequenceRetired_
        {
            get { return _dicom.FindAll("21300040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector AnnotationContentSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21300050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AnnotationContentSequenceRetired_
        {
            get { return _dicom.FindAll("21300050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ImageOverlayBoxContentSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21300060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ImageOverlayBoxContentSequenceRetired_
        {
            get { return _dicom.FindAll("21300060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PresentationLUTContentSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("21300080") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PresentationLUTContentSequenceRetired_
        {
            get { return _dicom.FindAll("21300080").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ProposedStudySequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("213000A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ProposedStudySequenceRetired_
        {
            get { return _dicom.FindAll("213000A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector OriginalImageSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("213000C0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OriginalImageSequenceRetired_
        {
            get { return _dicom.FindAll("213000C0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString LabelUsingInformationExtractedFromInstances
        {
            get { return _dicom.FindFirst("22000001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LabelUsingInformationExtractedFromInstances_
        {
            get { return _dicom.FindAll("22000001").Select(d => d as CodeString).ToList(); }
        }

        public UnlimitedText LabelText
        {
            get { return _dicom.FindFirst("22000002") as UnlimitedText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnlimitedText> LabelText_
        {
            get { return _dicom.FindAll("22000002").Select(d => d as UnlimitedText).ToList(); }
        }

        public CodeString LabelStyleSelection
        {
            get { return _dicom.FindFirst("22000003") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LabelStyleSelection_
        {
            get { return _dicom.FindAll("22000003").Select(d => d as CodeString).ToList(); }
        }

        public LongText MediaDisposition
        {
            get { return _dicom.FindFirst("22000004") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> MediaDisposition_
        {
            get { return _dicom.FindAll("22000004").Select(d => d as LongText).ToList(); }
        }

        public LongText BarcodeValue
        {
            get { return _dicom.FindFirst("22000005") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> BarcodeValue_
        {
            get { return _dicom.FindAll("22000005").Select(d => d as LongText).ToList(); }
        }

        public CodeString BarcodeSymbology
        {
            get { return _dicom.FindFirst("22000006") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BarcodeSymbology_
        {
            get { return _dicom.FindAll("22000006").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AllowMediaSplitting
        {
            get { return _dicom.FindFirst("22000007") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AllowMediaSplitting_
        {
            get { return _dicom.FindAll("22000007").Select(d => d as CodeString).ToList(); }
        }

        public CodeString IncludeNonDICOMObjects
        {
            get { return _dicom.FindFirst("22000008") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IncludeNonDICOMObjects_
        {
            get { return _dicom.FindAll("22000008").Select(d => d as CodeString).ToList(); }
        }

        public CodeString IncludeDisplayApplication
        {
            get { return _dicom.FindFirst("22000009") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> IncludeDisplayApplication_
        {
            get { return _dicom.FindAll("22000009").Select(d => d as CodeString).ToList(); }
        }

        public CodeString PreserveCompositeInstancesAfterMediaCreation
        {
            get { return _dicom.FindFirst("2200000A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PreserveCompositeInstancesAfterMediaCreation_
        {
            get { return _dicom.FindAll("2200000A").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort TotalNumberOfPiecesOfMediaCreated
        {
            get { return _dicom.FindFirst("2200000B") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> TotalNumberOfPiecesOfMediaCreated_
        {
            get { return _dicom.FindAll("2200000B").Select(d => d as UnsignedShort).ToList(); }
        }

        public LongString RequestedMediaApplicationProfile
        {
            get { return _dicom.FindFirst("2200000C") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RequestedMediaApplicationProfile_
        {
            get { return _dicom.FindAll("2200000C").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReferencedStorageMediaSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("2200000D") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedStorageMediaSequence_
        {
            get { return _dicom.FindAll("2200000D").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public AttributeTag FailureAttributes
        {
            get { return _dicom.FindFirst("2200000E") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> FailureAttributes_
        {
            get { return _dicom.FindAll("2200000E").Select(d => d as AttributeTag).ToList(); }
        }

        public CodeString AllowLossyCompression
        {
            get { return _dicom.FindFirst("2200000F") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AllowLossyCompression_
        {
            get { return _dicom.FindAll("2200000F").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RequestPriority
        {
            get { return _dicom.FindFirst("22000020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RequestPriority_
        {
            get { return _dicom.FindAll("22000020").Select(d => d as CodeString).ToList(); }
        }

        public ShortString RTImageLabel
        {
            get { return _dicom.FindFirst("30020002") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RTImageLabel_
        {
            get { return _dicom.FindAll("30020002").Select(d => d as ShortString).ToList(); }
        }

        public LongString RTImageName
        {
            get { return _dicom.FindFirst("30020003") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RTImageName_
        {
            get { return _dicom.FindAll("30020003").Select(d => d as LongString).ToList(); }
        }

        public ShortText RTImageDescription
        {
            get { return _dicom.FindFirst("30020004") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> RTImageDescription_
        {
            get { return _dicom.FindAll("30020004").Select(d => d as ShortText).ToList(); }
        }

        public CodeString ReportedValuesOrigin
        {
            get { return _dicom.FindFirst("3002000A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReportedValuesOrigin_
        {
            get { return _dicom.FindAll("3002000A").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RTImagePlane
        {
            get { return _dicom.FindFirst("3002000C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RTImagePlane_
        {
            get { return _dicom.FindAll("3002000C").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString XRayImageReceptorTranslation
        {
            get { return _dicom.FindFirst("3002000D") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> XRayImageReceptorTranslation_
        {
            get { return _dicom.FindAll("3002000D").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString XRayImageReceptorAngle
        {
            get { return _dicom.FindFirst("3002000E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> XRayImageReceptorAngle_
        {
            get { return _dicom.FindAll("3002000E").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RTImageOrientation
        {
            get { return _dicom.FindFirst("30020010") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RTImageOrientation_
        {
            get { return _dicom.FindAll("30020010").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ImagePlanePixelSpacing
        {
            get { return _dicom.FindFirst("30020011") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ImagePlanePixelSpacing_
        {
            get { return _dicom.FindAll("30020011").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RTImagePosition
        {
            get { return _dicom.FindFirst("30020012") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RTImagePosition_
        {
            get { return _dicom.FindAll("30020012").Select(d => d as DecimalString).ToList(); }
        }

        public ShortString RadiationMachineName
        {
            get { return _dicom.FindFirst("30020020") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RadiationMachineName_
        {
            get { return _dicom.FindAll("30020020").Select(d => d as ShortString).ToList(); }
        }

        public DecimalString RadiationMachineSAD
        {
            get { return _dicom.FindFirst("30020022") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadiationMachineSAD_
        {
            get { return _dicom.FindAll("30020022").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RadiationMachineSSD
        {
            get { return _dicom.FindFirst("30020024") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RadiationMachineSSD_
        {
            get { return _dicom.FindAll("30020024").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString RTImageSID
        {
            get { return _dicom.FindFirst("30020026") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> RTImageSID_
        {
            get { return _dicom.FindAll("30020026").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SourceToReferenceObjectDistance
        {
            get { return _dicom.FindFirst("30020028") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceToReferenceObjectDistance_
        {
            get { return _dicom.FindAll("30020028").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString FractionNumber
        {
            get { return _dicom.FindFirst("30020029") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> FractionNumber_
        {
            get { return _dicom.FindAll("30020029").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ExposureSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30020030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ExposureSequence_
        {
            get { return _dicom.FindAll("30020030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString MetersetExposure
        {
            get { return _dicom.FindFirst("30020032") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MetersetExposure_
        {
            get { return _dicom.FindAll("30020032").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DiaphragmPosition
        {
            get { return _dicom.FindFirst("30020034") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DiaphragmPosition_
        {
            get { return _dicom.FindAll("30020034").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector FluenceMapSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30020040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FluenceMapSequence_
        {
            get { return _dicom.FindAll("30020040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FluenceDataSource
        {
            get { return _dicom.FindFirst("30020041") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FluenceDataSource_
        {
            get { return _dicom.FindAll("30020041").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString FluenceDataScale
        {
            get { return _dicom.FindFirst("30020042") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FluenceDataScale_
        {
            get { return _dicom.FindAll("30020042").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector PrimaryFluenceModeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30020050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PrimaryFluenceModeSequence_
        {
            get { return _dicom.FindAll("30020050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FluenceMode
        {
            get { return _dicom.FindFirst("30020051") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FluenceMode_
        {
            get { return _dicom.FindAll("30020051").Select(d => d as CodeString).ToList(); }
        }

        public ShortString FluenceModeID
        {
            get { return _dicom.FindFirst("30020052") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FluenceModeID_
        {
            get { return _dicom.FindAll("30020052").Select(d => d as ShortString).ToList(); }
        }

        public CodeString DVHType
        {
            get { return _dicom.FindFirst("30040001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DVHType_
        {
            get { return _dicom.FindAll("30040001").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DoseUnits
        {
            get { return _dicom.FindFirst("30040002") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DoseUnits_
        {
            get { return _dicom.FindAll("30040002").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DoseType
        {
            get { return _dicom.FindFirst("30040004") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DoseType_
        {
            get { return _dicom.FindAll("30040004").Select(d => d as CodeString).ToList(); }
        }

        public LongString DoseComment
        {
            get { return _dicom.FindFirst("30040006") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DoseComment_
        {
            get { return _dicom.FindAll("30040006").Select(d => d as LongString).ToList(); }
        }

        public DecimalString NormalizationPoint
        {
            get { return _dicom.FindFirst("30040008") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NormalizationPoint_
        {
            get { return _dicom.FindAll("30040008").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString DoseSummationType
        {
            get { return _dicom.FindFirst("3004000A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DoseSummationType_
        {
            get { return _dicom.FindAll("3004000A").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString GridFrameOffsetVector
        {
            get { return _dicom.FindFirst("3004000C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GridFrameOffsetVector_
        {
            get { return _dicom.FindAll("3004000C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DoseGridScaling
        {
            get { return _dicom.FindFirst("3004000E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoseGridScaling_
        {
            get { return _dicom.FindAll("3004000E").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector RTDoseROISequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30040010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RTDoseROISequence_
        {
            get { return _dicom.FindAll("30040010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString DoseValue
        {
            get { return _dicom.FindFirst("30040012") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoseValue_
        {
            get { return _dicom.FindAll("30040012").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString TissueHeterogeneityCorrection
        {
            get { return _dicom.FindFirst("30040014") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TissueHeterogeneityCorrection_
        {
            get { return _dicom.FindAll("30040014").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString DVHNormalizationPoint
        {
            get { return _dicom.FindFirst("30040040") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DVHNormalizationPoint_
        {
            get { return _dicom.FindAll("30040040").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DVHNormalizationDoseValue
        {
            get { return _dicom.FindFirst("30040042") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DVHNormalizationDoseValue_
        {
            get { return _dicom.FindAll("30040042").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector DVHSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30040050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DVHSequence_
        {
            get { return _dicom.FindAll("30040050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString DVHDoseScaling
        {
            get { return _dicom.FindFirst("30040052") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DVHDoseScaling_
        {
            get { return _dicom.FindAll("30040052").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString DVHVolumeUnits
        {
            get { return _dicom.FindFirst("30040054") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DVHVolumeUnits_
        {
            get { return _dicom.FindAll("30040054").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString DVHNumberOfBins
        {
            get { return _dicom.FindFirst("30040056") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> DVHNumberOfBins_
        {
            get { return _dicom.FindAll("30040056").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString DVHData
        {
            get { return _dicom.FindFirst("30040058") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DVHData_
        {
            get { return _dicom.FindAll("30040058").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector DVHReferencedROISequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30040060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DVHReferencedROISequence_
        {
            get { return _dicom.FindAll("30040060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString DVHROIContributionType
        {
            get { return _dicom.FindFirst("30040062") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DVHROIContributionType_
        {
            get { return _dicom.FindAll("30040062").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString DVHMinimumDose
        {
            get { return _dicom.FindFirst("30040070") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DVHMinimumDose_
        {
            get { return _dicom.FindAll("30040070").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DVHMaximumDose
        {
            get { return _dicom.FindFirst("30040072") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DVHMaximumDose_
        {
            get { return _dicom.FindAll("30040072").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DVHMeanDose
        {
            get { return _dicom.FindFirst("30040074") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DVHMeanDose_
        {
            get { return _dicom.FindAll("30040074").Select(d => d as DecimalString).ToList(); }
        }

        public ShortString StructureSetLabel
        {
            get { return _dicom.FindFirst("30060002") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> StructureSetLabel_
        {
            get { return _dicom.FindAll("30060002").Select(d => d as ShortString).ToList(); }
        }

        public LongString StructureSetName
        {
            get { return _dicom.FindFirst("30060004") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> StructureSetName_
        {
            get { return _dicom.FindAll("30060004").Select(d => d as LongString).ToList(); }
        }

        public ShortText StructureSetDescription
        {
            get { return _dicom.FindFirst("30060006") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> StructureSetDescription_
        {
            get { return _dicom.FindAll("30060006").Select(d => d as ShortText).ToList(); }
        }

        public Date StructureSetDate
        {
            get { return _dicom.FindFirst("30060008") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> StructureSetDate_
        {
            get { return _dicom.FindAll("30060008").Select(d => d as Date).ToList(); }
        }

        public Time StructureSetTime
        {
            get { return _dicom.FindFirst("30060009") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> StructureSetTime_
        {
            get { return _dicom.FindAll("30060009").Select(d => d as Time).ToList(); }
        }

        public SequenceSelector ReferencedFrameOfReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedFrameOfReferenceSequence_
        {
            get { return _dicom.FindAll("30060010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RTReferencedStudySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060012") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RTReferencedStudySequence_
        {
            get { return _dicom.FindAll("30060012").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RTReferencedSeriesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060014") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RTReferencedSeriesSequence_
        {
            get { return _dicom.FindAll("30060014").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContourImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060016") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContourImageSequence_
        {
            get { return _dicom.FindAll("30060016").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector StructureSetROISequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> StructureSetROISequence_
        {
            get { return _dicom.FindAll("30060020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ROINumber
        {
            get { return _dicom.FindFirst("30060022") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ROINumber_
        {
            get { return _dicom.FindAll("30060022").Select(d => d as IntegerString).ToList(); }
        }

        public UniqueIdentifier ReferencedFrameOfReferenceUID
        {
            get { return _dicom.FindFirst("30060024") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> ReferencedFrameOfReferenceUID_
        {
            get { return _dicom.FindAll("30060024").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public LongString ROIName
        {
            get { return _dicom.FindFirst("30060026") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ROIName_
        {
            get { return _dicom.FindAll("30060026").Select(d => d as LongString).ToList(); }
        }

        public ShortText ROIDescription
        {
            get { return _dicom.FindFirst("30060028") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ROIDescription_
        {
            get { return _dicom.FindAll("30060028").Select(d => d as ShortText).ToList(); }
        }

        public IntegerString ROIDisplayColor
        {
            get { return _dicom.FindFirst("3006002A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ROIDisplayColor_
        {
            get { return _dicom.FindAll("3006002A").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ROIVolume
        {
            get { return _dicom.FindFirst("3006002C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ROIVolume_
        {
            get { return _dicom.FindAll("3006002C").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector RTRelatedROISequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RTRelatedROISequence_
        {
            get { return _dicom.FindAll("30060030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString RTROIRelationship
        {
            get { return _dicom.FindFirst("30060033") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RTROIRelationship_
        {
            get { return _dicom.FindAll("30060033").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ROIGenerationAlgorithm
        {
            get { return _dicom.FindFirst("30060036") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ROIGenerationAlgorithm_
        {
            get { return _dicom.FindAll("30060036").Select(d => d as CodeString).ToList(); }
        }

        public LongString ROIGenerationDescription
        {
            get { return _dicom.FindFirst("30060038") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ROIGenerationDescription_
        {
            get { return _dicom.FindAll("30060038").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ROIContourSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060039") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ROIContourSequence_
        {
            get { return _dicom.FindAll("30060039").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ContourSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ContourSequence_
        {
            get { return _dicom.FindAll("30060040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ContourGeometricType
        {
            get { return _dicom.FindFirst("30060042") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ContourGeometricType_
        {
            get { return _dicom.FindAll("30060042").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString ContourSlabThickness
        {
            get { return _dicom.FindFirst("30060044") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContourSlabThickness_
        {
            get { return _dicom.FindAll("30060044").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ContourOffsetVector
        {
            get { return _dicom.FindFirst("30060045") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContourOffsetVector_
        {
            get { return _dicom.FindAll("30060045").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString NumberOfContourPoints
        {
            get { return _dicom.FindFirst("30060046") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfContourPoints_
        {
            get { return _dicom.FindAll("30060046").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ContourNumber
        {
            get { return _dicom.FindFirst("30060048") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ContourNumber_
        {
            get { return _dicom.FindAll("30060048").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString AttachedContours
        {
            get { return _dicom.FindFirst("30060049") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> AttachedContours_
        {
            get { return _dicom.FindAll("30060049").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ContourData
        {
            get { return _dicom.FindFirst("30060050") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ContourData_
        {
            get { return _dicom.FindAll("30060050").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector RTROIObservationsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060080") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RTROIObservationsSequence_
        {
            get { return _dicom.FindAll("30060080").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ObservationNumber
        {
            get { return _dicom.FindFirst("30060082") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ObservationNumber_
        {
            get { return _dicom.FindAll("30060082").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedROINumber
        {
            get { return _dicom.FindFirst("30060084") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedROINumber_
        {
            get { return _dicom.FindAll("30060084").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString ROIObservationLabel
        {
            get { return _dicom.FindFirst("30060085") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ROIObservationLabel_
        {
            get { return _dicom.FindAll("30060085").Select(d => d as ShortString).ToList(); }
        }

        public SequenceSelector RTROIIdentificationCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30060086") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RTROIIdentificationCodeSequence_
        {
            get { return _dicom.FindAll("30060086").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText ROIObservationDescription
        {
            get { return _dicom.FindFirst("30060088") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ROIObservationDescription_
        {
            get { return _dicom.FindAll("30060088").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector RelatedRTROIObservationsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300600A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RelatedRTROIObservationsSequence_
        {
            get { return _dicom.FindAll("300600A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString RTROIInterpretedType
        {
            get { return _dicom.FindFirst("300600A4") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RTROIInterpretedType_
        {
            get { return _dicom.FindAll("300600A4").Select(d => d as CodeString).ToList(); }
        }

        public PersonName ROIInterpreter
        {
            get { return _dicom.FindFirst("300600A6") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> ROIInterpreter_
        {
            get { return _dicom.FindAll("300600A6").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector ROIPhysicalPropertiesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300600B0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ROIPhysicalPropertiesSequence_
        {
            get { return _dicom.FindAll("300600B0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ROIPhysicalProperty
        {
            get { return _dicom.FindFirst("300600B2") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ROIPhysicalProperty_
        {
            get { return _dicom.FindAll("300600B2").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString ROIPhysicalPropertyValue
        {
            get { return _dicom.FindFirst("300600B4") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ROIPhysicalPropertyValue_
        {
            get { return _dicom.FindAll("300600B4").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ROIElementalCompositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300600B6") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ROIElementalCompositionSequence_
        {
            get { return _dicom.FindAll("300600B6").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort ROIElementalCompositionAtomicNumber
        {
            get { return _dicom.FindFirst("300600B7") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ROIElementalCompositionAtomicNumber_
        {
            get { return _dicom.FindAll("300600B7").Select(d => d as UnsignedShort).ToList(); }
        }

        public FloatingPointSingle ROIElementalCompositionAtomicMassFraction
        {
            get { return _dicom.FindFirst("300600B8") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ROIElementalCompositionAtomicMassFraction_
        {
            get { return _dicom.FindAll("300600B8").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector FrameOfReferenceRelationshipSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300600C0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FrameOfReferenceRelationshipSequence_
        {
            get { return _dicom.FindAll("300600C0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UniqueIdentifier RelatedFrameOfReferenceUID
        {
            get { return _dicom.FindFirst("300600C2") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> RelatedFrameOfReferenceUID_
        {
            get { return _dicom.FindAll("300600C2").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString FrameOfReferenceTransformationType
        {
            get { return _dicom.FindFirst("300600C4") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FrameOfReferenceTransformationType_
        {
            get { return _dicom.FindAll("300600C4").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString FrameOfReferenceTransformationMatrix
        {
            get { return _dicom.FindFirst("300600C6") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FrameOfReferenceTransformationMatrix_
        {
            get { return _dicom.FindAll("300600C6").Select(d => d as DecimalString).ToList(); }
        }

        public LongString FrameOfReferenceTransformationComment
        {
            get { return _dicom.FindFirst("300600C8") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FrameOfReferenceTransformationComment_
        {
            get { return _dicom.FindAll("300600C8").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector MeasuredDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MeasuredDoseReferenceSequence_
        {
            get { return _dicom.FindAll("30080010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText MeasuredDoseDescription
        {
            get { return _dicom.FindFirst("30080012") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> MeasuredDoseDescription_
        {
            get { return _dicom.FindAll("30080012").Select(d => d as ShortText).ToList(); }
        }

        public CodeString MeasuredDoseType
        {
            get { return _dicom.FindFirst("30080014") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> MeasuredDoseType_
        {
            get { return _dicom.FindAll("30080014").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString MeasuredDoseValue
        {
            get { return _dicom.FindFirst("30080016") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> MeasuredDoseValue_
        {
            get { return _dicom.FindAll("30080016").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector TreatmentSessionBeamSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TreatmentSessionBeamSequence_
        {
            get { return _dicom.FindAll("30080020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TreatmentSessionIonBeamSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080021") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TreatmentSessionIonBeamSequence_
        {
            get { return _dicom.FindAll("30080021").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString CurrentFractionNumber
        {
            get { return _dicom.FindFirst("30080022") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CurrentFractionNumber_
        {
            get { return _dicom.FindAll("30080022").Select(d => d as IntegerString).ToList(); }
        }

        public Date TreatmentControlPointDate
        {
            get { return _dicom.FindFirst("30080024") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> TreatmentControlPointDate_
        {
            get { return _dicom.FindAll("30080024").Select(d => d as Date).ToList(); }
        }

        public Time TreatmentControlPointTime
        {
            get { return _dicom.FindFirst("30080025") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> TreatmentControlPointTime_
        {
            get { return _dicom.FindAll("30080025").Select(d => d as Time).ToList(); }
        }

        public CodeString TreatmentTerminationStatus
        {
            get { return _dicom.FindFirst("3008002A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TreatmentTerminationStatus_
        {
            get { return _dicom.FindAll("3008002A").Select(d => d as CodeString).ToList(); }
        }

        public ShortString TreatmentTerminationCode
        {
            get { return _dicom.FindFirst("3008002B") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> TreatmentTerminationCode_
        {
            get { return _dicom.FindAll("3008002B").Select(d => d as ShortString).ToList(); }
        }

        public CodeString TreatmentVerificationStatus
        {
            get { return _dicom.FindFirst("3008002C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TreatmentVerificationStatus_
        {
            get { return _dicom.FindAll("3008002C").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector ReferencedTreatmentRecordSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080030") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedTreatmentRecordSequence_
        {
            get { return _dicom.FindAll("30080030").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString SpecifiedPrimaryMeterset
        {
            get { return _dicom.FindFirst("30080032") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpecifiedPrimaryMeterset_
        {
            get { return _dicom.FindAll("30080032").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SpecifiedSecondaryMeterset
        {
            get { return _dicom.FindFirst("30080033") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpecifiedSecondaryMeterset_
        {
            get { return _dicom.FindAll("30080033").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveredPrimaryMeterset
        {
            get { return _dicom.FindFirst("30080036") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveredPrimaryMeterset_
        {
            get { return _dicom.FindAll("30080036").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveredSecondaryMeterset
        {
            get { return _dicom.FindFirst("30080037") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveredSecondaryMeterset_
        {
            get { return _dicom.FindAll("30080037").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SpecifiedTreatmentTime
        {
            get { return _dicom.FindFirst("3008003A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpecifiedTreatmentTime_
        {
            get { return _dicom.FindAll("3008003A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveredTreatmentTime
        {
            get { return _dicom.FindFirst("3008003B") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveredTreatmentTime_
        {
            get { return _dicom.FindAll("3008003B").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ControlPointDeliverySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ControlPointDeliverySequence_
        {
            get { return _dicom.FindAll("30080040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonControlPointDeliverySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080041") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonControlPointDeliverySequence_
        {
            get { return _dicom.FindAll("30080041").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString SpecifiedMeterset
        {
            get { return _dicom.FindFirst("30080042") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpecifiedMeterset_
        {
            get { return _dicom.FindAll("30080042").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveredMeterset
        {
            get { return _dicom.FindFirst("30080044") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveredMeterset_
        {
            get { return _dicom.FindAll("30080044").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle MetersetRateSet
        {
            get { return _dicom.FindFirst("30080045") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MetersetRateSet_
        {
            get { return _dicom.FindAll("30080045").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MetersetRateDelivered
        {
            get { return _dicom.FindFirst("30080046") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MetersetRateDelivered_
        {
            get { return _dicom.FindAll("30080046").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ScanSpotMetersetsDelivered
        {
            get { return _dicom.FindFirst("30080047") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ScanSpotMetersetsDelivered_
        {
            get { return _dicom.FindAll("30080047").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public DecimalString DoseRateDelivered
        {
            get { return _dicom.FindFirst("30080048") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoseRateDelivered_
        {
            get { return _dicom.FindAll("30080048").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector TreatmentSummaryCalculatedDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TreatmentSummaryCalculatedDoseReferenceSequence_
        {
            get { return _dicom.FindAll("30080050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString CumulativeDoseToDoseReference
        {
            get { return _dicom.FindFirst("30080052") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CumulativeDoseToDoseReference_
        {
            get { return _dicom.FindAll("30080052").Select(d => d as DecimalString).ToList(); }
        }

        public Date FirstTreatmentDate
        {
            get { return _dicom.FindFirst("30080054") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> FirstTreatmentDate_
        {
            get { return _dicom.FindAll("30080054").Select(d => d as Date).ToList(); }
        }

        public Date MostRecentTreatmentDate
        {
            get { return _dicom.FindFirst("30080056") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> MostRecentTreatmentDate_
        {
            get { return _dicom.FindAll("30080056").Select(d => d as Date).ToList(); }
        }

        public IntegerString NumberOfFractionsDelivered
        {
            get { return _dicom.FindFirst("3008005A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfFractionsDelivered_
        {
            get { return _dicom.FindAll("3008005A").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector OverrideSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OverrideSequence_
        {
            get { return _dicom.FindAll("30080060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public AttributeTag ParameterSequencePointer
        {
            get { return _dicom.FindFirst("30080061") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> ParameterSequencePointer_
        {
            get { return _dicom.FindAll("30080061").Select(d => d as AttributeTag).ToList(); }
        }

        public AttributeTag OverrideParameterPointer
        {
            get { return _dicom.FindFirst("30080062") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> OverrideParameterPointer_
        {
            get { return _dicom.FindAll("30080062").Select(d => d as AttributeTag).ToList(); }
        }

        public IntegerString ParameterItemIndex
        {
            get { return _dicom.FindFirst("30080063") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ParameterItemIndex_
        {
            get { return _dicom.FindAll("30080063").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString MeasuredDoseReferenceNumber
        {
            get { return _dicom.FindFirst("30080064") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> MeasuredDoseReferenceNumber_
        {
            get { return _dicom.FindAll("30080064").Select(d => d as IntegerString).ToList(); }
        }

        public AttributeTag ParameterPointer
        {
            get { return _dicom.FindFirst("30080065") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> ParameterPointer_
        {
            get { return _dicom.FindAll("30080065").Select(d => d as AttributeTag).ToList(); }
        }

        public ShortText OverrideReason
        {
            get { return _dicom.FindFirst("30080066") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> OverrideReason_
        {
            get { return _dicom.FindAll("30080066").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector CorrectedParameterSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080068") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CorrectedParameterSequence_
        {
            get { return _dicom.FindAll("30080068").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle CorrectionValue
        {
            get { return _dicom.FindFirst("3008006A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CorrectionValue_
        {
            get { return _dicom.FindAll("3008006A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector CalculatedDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080070") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CalculatedDoseReferenceSequence_
        {
            get { return _dicom.FindAll("30080070").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString CalculatedDoseReferenceNumber
        {
            get { return _dicom.FindFirst("30080072") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CalculatedDoseReferenceNumber_
        {
            get { return _dicom.FindAll("30080072").Select(d => d as IntegerString).ToList(); }
        }

        public ShortText CalculatedDoseReferenceDescription
        {
            get { return _dicom.FindFirst("30080074") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> CalculatedDoseReferenceDescription_
        {
            get { return _dicom.FindAll("30080074").Select(d => d as ShortText).ToList(); }
        }

        public DecimalString CalculatedDoseReferenceDoseValue
        {
            get { return _dicom.FindFirst("30080076") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CalculatedDoseReferenceDoseValue_
        {
            get { return _dicom.FindAll("30080076").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString StartMeterset
        {
            get { return _dicom.FindFirst("30080078") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> StartMeterset_
        {
            get { return _dicom.FindAll("30080078").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString EndMeterset
        {
            get { return _dicom.FindFirst("3008007A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EndMeterset_
        {
            get { return _dicom.FindAll("3008007A").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ReferencedMeasuredDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080080") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedMeasuredDoseReferenceSequence_
        {
            get { return _dicom.FindAll("30080080").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedMeasuredDoseReferenceNumber
        {
            get { return _dicom.FindFirst("30080082") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedMeasuredDoseReferenceNumber_
        {
            get { return _dicom.FindAll("30080082").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ReferencedCalculatedDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080090") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedCalculatedDoseReferenceSequence_
        {
            get { return _dicom.FindAll("30080090").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedCalculatedDoseReferenceNumber
        {
            get { return _dicom.FindFirst("30080092") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedCalculatedDoseReferenceNumber_
        {
            get { return _dicom.FindAll("30080092").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector BeamLimitingDeviceLeafPairsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BeamLimitingDeviceLeafPairsSequence_
        {
            get { return _dicom.FindAll("300800A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedWedgeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800B0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedWedgeSequence_
        {
            get { return _dicom.FindAll("300800B0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedCompensatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800C0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedCompensatorSequence_
        {
            get { return _dicom.FindAll("300800C0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedBlockSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800D0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedBlockSequence_
        {
            get { return _dicom.FindAll("300800D0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector TreatmentSummaryMeasuredDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800E0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TreatmentSummaryMeasuredDoseReferenceSequence_
        {
            get { return _dicom.FindAll("300800E0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedSnoutSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800F0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedSnoutSequence_
        {
            get { return _dicom.FindAll("300800F0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedRangeShifterSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800F2") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedRangeShifterSequence_
        {
            get { return _dicom.FindAll("300800F2").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedLateralSpreadingDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800F4") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedLateralSpreadingDeviceSequence_
        {
            get { return _dicom.FindAll("300800F4").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedRangeModulatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300800F6") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedRangeModulatorSequence_
        {
            get { return _dicom.FindAll("300800F6").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector RecordedSourceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedSourceSequence_
        {
            get { return _dicom.FindAll("30080100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString SourceSerialNumber
        {
            get { return _dicom.FindFirst("30080105") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SourceSerialNumber_
        {
            get { return _dicom.FindAll("30080105").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector TreatmentSessionApplicationSetupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080110") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TreatmentSessionApplicationSetupSequence_
        {
            get { return _dicom.FindAll("30080110").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ApplicationSetupCheck
        {
            get { return _dicom.FindFirst("30080116") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ApplicationSetupCheck_
        {
            get { return _dicom.FindAll("30080116").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector RecordedBrachyAccessoryDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080120") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedBrachyAccessoryDeviceSequence_
        {
            get { return _dicom.FindAll("30080120").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedBrachyAccessoryDeviceNumber
        {
            get { return _dicom.FindFirst("30080122") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedBrachyAccessoryDeviceNumber_
        {
            get { return _dicom.FindAll("30080122").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector RecordedChannelSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080130") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedChannelSequence_
        {
            get { return _dicom.FindAll("30080130").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString SpecifiedChannelTotalTime
        {
            get { return _dicom.FindFirst("30080132") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpecifiedChannelTotalTime_
        {
            get { return _dicom.FindAll("30080132").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveredChannelTotalTime
        {
            get { return _dicom.FindFirst("30080134") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveredChannelTotalTime_
        {
            get { return _dicom.FindAll("30080134").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString SpecifiedNumberOfPulses
        {
            get { return _dicom.FindFirst("30080136") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SpecifiedNumberOfPulses_
        {
            get { return _dicom.FindAll("30080136").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString DeliveredNumberOfPulses
        {
            get { return _dicom.FindFirst("30080138") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> DeliveredNumberOfPulses_
        {
            get { return _dicom.FindAll("30080138").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString SpecifiedPulseRepetitionInterval
        {
            get { return _dicom.FindFirst("3008013A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SpecifiedPulseRepetitionInterval_
        {
            get { return _dicom.FindAll("3008013A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveredPulseRepetitionInterval
        {
            get { return _dicom.FindFirst("3008013C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveredPulseRepetitionInterval_
        {
            get { return _dicom.FindAll("3008013C").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector RecordedSourceApplicatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080140") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedSourceApplicatorSequence_
        {
            get { return _dicom.FindAll("30080140").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedSourceApplicatorNumber
        {
            get { return _dicom.FindFirst("30080142") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedSourceApplicatorNumber_
        {
            get { return _dicom.FindAll("30080142").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector RecordedChannelShieldSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080150") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RecordedChannelShieldSequence_
        {
            get { return _dicom.FindAll("30080150").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedChannelShieldNumber
        {
            get { return _dicom.FindFirst("30080152") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedChannelShieldNumber_
        {
            get { return _dicom.FindAll("30080152").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector BrachyControlPointDeliveredSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080160") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BrachyControlPointDeliveredSequence_
        {
            get { return _dicom.FindAll("30080160").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public Date SafePositionExitDate
        {
            get { return _dicom.FindFirst("30080162") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> SafePositionExitDate_
        {
            get { return _dicom.FindAll("30080162").Select(d => d as Date).ToList(); }
        }

        public Time SafePositionExitTime
        {
            get { return _dicom.FindFirst("30080164") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> SafePositionExitTime_
        {
            get { return _dicom.FindAll("30080164").Select(d => d as Time).ToList(); }
        }

        public Date SafePositionReturnDate
        {
            get { return _dicom.FindFirst("30080166") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> SafePositionReturnDate_
        {
            get { return _dicom.FindAll("30080166").Select(d => d as Date).ToList(); }
        }

        public Time SafePositionReturnTime
        {
            get { return _dicom.FindFirst("30080168") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> SafePositionReturnTime_
        {
            get { return _dicom.FindAll("30080168").Select(d => d as Time).ToList(); }
        }

        public CodeString CurrentTreatmentStatus
        {
            get { return _dicom.FindFirst("30080200") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CurrentTreatmentStatus_
        {
            get { return _dicom.FindAll("30080200").Select(d => d as CodeString).ToList(); }
        }

        public ShortText TreatmentStatusComment
        {
            get { return _dicom.FindFirst("30080202") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> TreatmentStatusComment_
        {
            get { return _dicom.FindAll("30080202").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector FractionGroupSummarySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080220") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FractionGroupSummarySequence_
        {
            get { return _dicom.FindAll("30080220").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedFractionNumber
        {
            get { return _dicom.FindFirst("30080223") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedFractionNumber_
        {
            get { return _dicom.FindAll("30080223").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString FractionGroupType
        {
            get { return _dicom.FindFirst("30080224") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FractionGroupType_
        {
            get { return _dicom.FindAll("30080224").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BeamStopperPosition
        {
            get { return _dicom.FindFirst("30080230") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BeamStopperPosition_
        {
            get { return _dicom.FindAll("30080230").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector FractionStatusSummarySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("30080240") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FractionStatusSummarySequence_
        {
            get { return _dicom.FindAll("30080240").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public Date TreatmentDate
        {
            get { return _dicom.FindFirst("30080250") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> TreatmentDate_
        {
            get { return _dicom.FindAll("30080250").Select(d => d as Date).ToList(); }
        }

        public Time TreatmentTime
        {
            get { return _dicom.FindFirst("30080251") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> TreatmentTime_
        {
            get { return _dicom.FindAll("30080251").Select(d => d as Time).ToList(); }
        }

        public ShortString RTPlanLabel
        {
            get { return _dicom.FindFirst("300A0002") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RTPlanLabel_
        {
            get { return _dicom.FindAll("300A0002").Select(d => d as ShortString).ToList(); }
        }

        public LongString RTPlanName
        {
            get { return _dicom.FindFirst("300A0003") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RTPlanName_
        {
            get { return _dicom.FindAll("300A0003").Select(d => d as LongString).ToList(); }
        }

        public ShortText RTPlanDescription
        {
            get { return _dicom.FindFirst("300A0004") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> RTPlanDescription_
        {
            get { return _dicom.FindAll("300A0004").Select(d => d as ShortText).ToList(); }
        }

        public Date RTPlanDate
        {
            get { return _dicom.FindFirst("300A0006") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> RTPlanDate_
        {
            get { return _dicom.FindAll("300A0006").Select(d => d as Date).ToList(); }
        }

        public Time RTPlanTime
        {
            get { return _dicom.FindFirst("300A0007") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> RTPlanTime_
        {
            get { return _dicom.FindAll("300A0007").Select(d => d as Time).ToList(); }
        }

        public LongString TreatmentProtocols
        {
            get { return _dicom.FindFirst("300A0009") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TreatmentProtocols_
        {
            get { return _dicom.FindAll("300A0009").Select(d => d as LongString).ToList(); }
        }

        public CodeString PlanIntent
        {
            get { return _dicom.FindFirst("300A000A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PlanIntent_
        {
            get { return _dicom.FindAll("300A000A").Select(d => d as CodeString).ToList(); }
        }

        public LongString TreatmentSites
        {
            get { return _dicom.FindFirst("300A000B") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TreatmentSites_
        {
            get { return _dicom.FindAll("300A000B").Select(d => d as LongString).ToList(); }
        }

        public CodeString RTPlanGeometry
        {
            get { return _dicom.FindFirst("300A000C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RTPlanGeometry_
        {
            get { return _dicom.FindAll("300A000C").Select(d => d as CodeString).ToList(); }
        }

        public ShortText PrescriptionDescription
        {
            get { return _dicom.FindFirst("300A000E") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> PrescriptionDescription_
        {
            get { return _dicom.FindAll("300A000E").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector DoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0010") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DoseReferenceSequence_
        {
            get { return _dicom.FindAll("300A0010").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString DoseReferenceNumber
        {
            get { return _dicom.FindFirst("300A0012") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> DoseReferenceNumber_
        {
            get { return _dicom.FindAll("300A0012").Select(d => d as IntegerString).ToList(); }
        }

        public UniqueIdentifier DoseReferenceUID
        {
            get { return _dicom.FindFirst("300A0013") as UniqueIdentifier; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UniqueIdentifier> DoseReferenceUID_
        {
            get { return _dicom.FindAll("300A0013").Select(d => d as UniqueIdentifier).ToList(); }
        }

        public CodeString DoseReferenceStructureType
        {
            get { return _dicom.FindFirst("300A0014") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DoseReferenceStructureType_
        {
            get { return _dicom.FindAll("300A0014").Select(d => d as CodeString).ToList(); }
        }

        public CodeString NominalBeamEnergyUnit
        {
            get { return _dicom.FindFirst("300A0015") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> NominalBeamEnergyUnit_
        {
            get { return _dicom.FindAll("300A0015").Select(d => d as CodeString).ToList(); }
        }

        public LongString DoseReferenceDescription
        {
            get { return _dicom.FindFirst("300A0016") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DoseReferenceDescription_
        {
            get { return _dicom.FindAll("300A0016").Select(d => d as LongString).ToList(); }
        }

        public DecimalString DoseReferencePointCoordinates
        {
            get { return _dicom.FindFirst("300A0018") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoseReferencePointCoordinates_
        {
            get { return _dicom.FindAll("300A0018").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString NominalPriorDose
        {
            get { return _dicom.FindFirst("300A001A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NominalPriorDose_
        {
            get { return _dicom.FindAll("300A001A").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString DoseReferenceType
        {
            get { return _dicom.FindFirst("300A0020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DoseReferenceType_
        {
            get { return _dicom.FindAll("300A0020").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString ConstraintWeight
        {
            get { return _dicom.FindFirst("300A0021") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ConstraintWeight_
        {
            get { return _dicom.FindAll("300A0021").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveryWarningDose
        {
            get { return _dicom.FindFirst("300A0022") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveryWarningDose_
        {
            get { return _dicom.FindAll("300A0022").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DeliveryMaximumDose
        {
            get { return _dicom.FindFirst("300A0023") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DeliveryMaximumDose_
        {
            get { return _dicom.FindAll("300A0023").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TargetMinimumDose
        {
            get { return _dicom.FindFirst("300A0025") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TargetMinimumDose_
        {
            get { return _dicom.FindAll("300A0025").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TargetPrescriptionDose
        {
            get { return _dicom.FindFirst("300A0026") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TargetPrescriptionDose_
        {
            get { return _dicom.FindAll("300A0026").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TargetMaximumDose
        {
            get { return _dicom.FindFirst("300A0027") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TargetMaximumDose_
        {
            get { return _dicom.FindAll("300A0027").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TargetUnderdoseVolumeFraction
        {
            get { return _dicom.FindFirst("300A0028") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TargetUnderdoseVolumeFraction_
        {
            get { return _dicom.FindAll("300A0028").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString OrganAtRiskFullVolumeDose
        {
            get { return _dicom.FindFirst("300A002A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> OrganAtRiskFullVolumeDose_
        {
            get { return _dicom.FindAll("300A002A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString OrganAtRiskLimitDose
        {
            get { return _dicom.FindFirst("300A002B") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> OrganAtRiskLimitDose_
        {
            get { return _dicom.FindAll("300A002B").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString OrganAtRiskMaximumDose
        {
            get { return _dicom.FindFirst("300A002C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> OrganAtRiskMaximumDose_
        {
            get { return _dicom.FindAll("300A002C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString OrganAtRiskOverdoseVolumeFraction
        {
            get { return _dicom.FindFirst("300A002D") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> OrganAtRiskOverdoseVolumeFraction_
        {
            get { return _dicom.FindAll("300A002D").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ToleranceTableSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ToleranceTableSequence_
        {
            get { return _dicom.FindAll("300A0040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ToleranceTableNumber
        {
            get { return _dicom.FindFirst("300A0042") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ToleranceTableNumber_
        {
            get { return _dicom.FindAll("300A0042").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString ToleranceTableLabel
        {
            get { return _dicom.FindFirst("300A0043") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ToleranceTableLabel_
        {
            get { return _dicom.FindAll("300A0043").Select(d => d as ShortString).ToList(); }
        }

        public DecimalString GantryAngleTolerance
        {
            get { return _dicom.FindFirst("300A0044") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GantryAngleTolerance_
        {
            get { return _dicom.FindAll("300A0044").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString BeamLimitingDeviceAngleTolerance
        {
            get { return _dicom.FindFirst("300A0046") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BeamLimitingDeviceAngleTolerance_
        {
            get { return _dicom.FindAll("300A0046").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector BeamLimitingDeviceToleranceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0048") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BeamLimitingDeviceToleranceSequence_
        {
            get { return _dicom.FindAll("300A0048").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString BeamLimitingDevicePositionTolerance
        {
            get { return _dicom.FindFirst("300A004A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BeamLimitingDevicePositionTolerance_
        {
            get { return _dicom.FindAll("300A004A").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle SnoutPositionTolerance
        {
            get { return _dicom.FindFirst("300A004B") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SnoutPositionTolerance_
        {
            get { return _dicom.FindAll("300A004B").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public DecimalString PatientSupportAngleTolerance
        {
            get { return _dicom.FindFirst("300A004C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PatientSupportAngleTolerance_
        {
            get { return _dicom.FindAll("300A004C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopEccentricAngleTolerance
        {
            get { return _dicom.FindFirst("300A004E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopEccentricAngleTolerance_
        {
            get { return _dicom.FindAll("300A004E").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle TableTopPitchAngleTolerance
        {
            get { return _dicom.FindFirst("300A004F") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableTopPitchAngleTolerance_
        {
            get { return _dicom.FindAll("300A004F").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle TableTopRollAngleTolerance
        {
            get { return _dicom.FindFirst("300A0050") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableTopRollAngleTolerance_
        {
            get { return _dicom.FindAll("300A0050").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public DecimalString TableTopVerticalPositionTolerance
        {
            get { return _dicom.FindFirst("300A0051") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopVerticalPositionTolerance_
        {
            get { return _dicom.FindAll("300A0051").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopLongitudinalPositionTolerance
        {
            get { return _dicom.FindFirst("300A0052") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopLongitudinalPositionTolerance_
        {
            get { return _dicom.FindAll("300A0052").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopLateralPositionTolerance
        {
            get { return _dicom.FindFirst("300A0053") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopLateralPositionTolerance_
        {
            get { return _dicom.FindAll("300A0053").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString RTPlanRelationship
        {
            get { return _dicom.FindFirst("300A0055") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RTPlanRelationship_
        {
            get { return _dicom.FindAll("300A0055").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector FractionGroupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0070") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FractionGroupSequence_
        {
            get { return _dicom.FindAll("300A0070").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString FractionGroupNumber
        {
            get { return _dicom.FindFirst("300A0071") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> FractionGroupNumber_
        {
            get { return _dicom.FindAll("300A0071").Select(d => d as IntegerString).ToList(); }
        }

        public LongString FractionGroupDescription
        {
            get { return _dicom.FindFirst("300A0072") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> FractionGroupDescription_
        {
            get { return _dicom.FindAll("300A0072").Select(d => d as LongString).ToList(); }
        }

        public IntegerString NumberOfFractionsPlanned
        {
            get { return _dicom.FindFirst("300A0078") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfFractionsPlanned_
        {
            get { return _dicom.FindAll("300A0078").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString NumberOfFractionPatternDigitsPerDay
        {
            get { return _dicom.FindFirst("300A0079") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfFractionPatternDigitsPerDay_
        {
            get { return _dicom.FindAll("300A0079").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString RepeatFractionCycleLength
        {
            get { return _dicom.FindFirst("300A007A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RepeatFractionCycleLength_
        {
            get { return _dicom.FindAll("300A007A").Select(d => d as IntegerString).ToList(); }
        }

        public LongText FractionPattern
        {
            get { return _dicom.FindFirst("300A007B") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> FractionPattern_
        {
            get { return _dicom.FindAll("300A007B").Select(d => d as LongText).ToList(); }
        }

        public IntegerString NumberOfBeams
        {
            get { return _dicom.FindFirst("300A0080") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfBeams_
        {
            get { return _dicom.FindAll("300A0080").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString BeamDoseSpecificationPoint
        {
            get { return _dicom.FindFirst("300A0082") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BeamDoseSpecificationPoint_
        {
            get { return _dicom.FindAll("300A0082").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString BeamDose
        {
            get { return _dicom.FindFirst("300A0084") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BeamDose_
        {
            get { return _dicom.FindAll("300A0084").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString BeamMeterset
        {
            get { return _dicom.FindFirst("300A0086") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BeamMeterset_
        {
            get { return _dicom.FindAll("300A0086").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle BeamDosePointDepth
        {
            get { return _dicom.FindFirst("300A0088") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BeamDosePointDepth_
        {
            get { return _dicom.FindAll("300A0088").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BeamDosePointEquivalentDepth
        {
            get { return _dicom.FindFirst("300A0089") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BeamDosePointEquivalentDepth_
        {
            get { return _dicom.FindAll("300A0089").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BeamDosePointSSD
        {
            get { return _dicom.FindFirst("300A008A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BeamDosePointSSD_
        {
            get { return _dicom.FindAll("300A008A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public IntegerString NumberOfBrachyApplicationSetups
        {
            get { return _dicom.FindFirst("300A00A0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfBrachyApplicationSetups_
        {
            get { return _dicom.FindAll("300A00A0").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString BrachyApplicationSetupDoseSpecificationPoint
        {
            get { return _dicom.FindFirst("300A00A2") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BrachyApplicationSetupDoseSpecificationPoint_
        {
            get { return _dicom.FindAll("300A00A2").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString BrachyApplicationSetupDose
        {
            get { return _dicom.FindFirst("300A00A4") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BrachyApplicationSetupDose_
        {
            get { return _dicom.FindAll("300A00A4").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector BeamSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A00B0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BeamSequence_
        {
            get { return _dicom.FindAll("300A00B0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString TreatmentMachineName
        {
            get { return _dicom.FindFirst("300A00B2") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> TreatmentMachineName_
        {
            get { return _dicom.FindAll("300A00B2").Select(d => d as ShortString).ToList(); }
        }

        public CodeString PrimaryDosimeterUnit
        {
            get { return _dicom.FindFirst("300A00B3") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PrimaryDosimeterUnit_
        {
            get { return _dicom.FindAll("300A00B3").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString SourceAxisDistance
        {
            get { return _dicom.FindFirst("300A00B4") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceAxisDistance_
        {
            get { return _dicom.FindAll("300A00B4").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector BeamLimitingDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A00B6") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BeamLimitingDeviceSequence_
        {
            get { return _dicom.FindAll("300A00B6").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString RTBeamLimitingDeviceType
        {
            get { return _dicom.FindFirst("300A00B8") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RTBeamLimitingDeviceType_
        {
            get { return _dicom.FindAll("300A00B8").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString SourceToBeamLimitingDeviceDistance
        {
            get { return _dicom.FindFirst("300A00BA") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceToBeamLimitingDeviceDistance_
        {
            get { return _dicom.FindAll("300A00BA").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle IsocenterToBeamLimitingDeviceDistance
        {
            get { return _dicom.FindFirst("300A00BB") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToBeamLimitingDeviceDistance_
        {
            get { return _dicom.FindAll("300A00BB").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public IntegerString NumberOfLeafJawPairs
        {
            get { return _dicom.FindFirst("300A00BC") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfLeafJawPairs_
        {
            get { return _dicom.FindAll("300A00BC").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString LeafPositionBoundaries
        {
            get { return _dicom.FindFirst("300A00BE") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> LeafPositionBoundaries_
        {
            get { return _dicom.FindAll("300A00BE").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString BeamNumber
        {
            get { return _dicom.FindFirst("300A00C0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> BeamNumber_
        {
            get { return _dicom.FindAll("300A00C0").Select(d => d as IntegerString).ToList(); }
        }

        public LongString BeamName
        {
            get { return _dicom.FindFirst("300A00C2") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> BeamName_
        {
            get { return _dicom.FindAll("300A00C2").Select(d => d as LongString).ToList(); }
        }

        public ShortText BeamDescription
        {
            get { return _dicom.FindFirst("300A00C3") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> BeamDescription_
        {
            get { return _dicom.FindAll("300A00C3").Select(d => d as ShortText).ToList(); }
        }

        public CodeString BeamType
        {
            get { return _dicom.FindFirst("300A00C4") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BeamType_
        {
            get { return _dicom.FindAll("300A00C4").Select(d => d as CodeString).ToList(); }
        }

        public CodeString RadiationType
        {
            get { return _dicom.FindFirst("300A00C6") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RadiationType_
        {
            get { return _dicom.FindAll("300A00C6").Select(d => d as CodeString).ToList(); }
        }

        public CodeString HighDoseTechniqueType
        {
            get { return _dicom.FindFirst("300A00C7") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> HighDoseTechniqueType_
        {
            get { return _dicom.FindAll("300A00C7").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString ReferenceImageNumber
        {
            get { return _dicom.FindFirst("300A00C8") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferenceImageNumber_
        {
            get { return _dicom.FindAll("300A00C8").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector PlannedVerificationImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A00CA") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PlannedVerificationImageSequence_
        {
            get { return _dicom.FindAll("300A00CA").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString ImagingDeviceSpecificAcquisitionParameters
        {
            get { return _dicom.FindFirst("300A00CC") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ImagingDeviceSpecificAcquisitionParameters_
        {
            get { return _dicom.FindAll("300A00CC").Select(d => d as LongString).ToList(); }
        }

        public CodeString TreatmentDeliveryType
        {
            get { return _dicom.FindFirst("300A00CE") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TreatmentDeliveryType_
        {
            get { return _dicom.FindAll("300A00CE").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString NumberOfWedges
        {
            get { return _dicom.FindFirst("300A00D0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfWedges_
        {
            get { return _dicom.FindAll("300A00D0").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector WedgeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A00D1") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> WedgeSequence_
        {
            get { return _dicom.FindAll("300A00D1").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString WedgeNumber
        {
            get { return _dicom.FindFirst("300A00D2") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> WedgeNumber_
        {
            get { return _dicom.FindAll("300A00D2").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString WedgeType
        {
            get { return _dicom.FindFirst("300A00D3") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> WedgeType_
        {
            get { return _dicom.FindAll("300A00D3").Select(d => d as CodeString).ToList(); }
        }

        public ShortString WedgeID
        {
            get { return _dicom.FindFirst("300A00D4") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> WedgeID_
        {
            get { return _dicom.FindAll("300A00D4").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString WedgeAngle
        {
            get { return _dicom.FindFirst("300A00D5") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> WedgeAngle_
        {
            get { return _dicom.FindAll("300A00D5").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString WedgeFactor
        {
            get { return _dicom.FindFirst("300A00D6") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> WedgeFactor_
        {
            get { return _dicom.FindAll("300A00D6").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle TotalWedgeTrayWaterEquivalentThickness
        {
            get { return _dicom.FindFirst("300A00D7") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TotalWedgeTrayWaterEquivalentThickness_
        {
            get { return _dicom.FindAll("300A00D7").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public DecimalString WedgeOrientation
        {
            get { return _dicom.FindFirst("300A00D8") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> WedgeOrientation_
        {
            get { return _dicom.FindAll("300A00D8").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle IsocenterToWedgeTrayDistance
        {
            get { return _dicom.FindFirst("300A00D9") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToWedgeTrayDistance_
        {
            get { return _dicom.FindAll("300A00D9").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public DecimalString SourceToWedgeTrayDistance
        {
            get { return _dicom.FindFirst("300A00DA") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceToWedgeTrayDistance_
        {
            get { return _dicom.FindAll("300A00DA").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle WedgeThinEdgePosition
        {
            get { return _dicom.FindFirst("300A00DB") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> WedgeThinEdgePosition_
        {
            get { return _dicom.FindAll("300A00DB").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public ShortString BolusID
        {
            get { return _dicom.FindFirst("300A00DC") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> BolusID_
        {
            get { return _dicom.FindAll("300A00DC").Select(d => d as ShortString).ToList(); }
        }

        public ShortText BolusDescription
        {
            get { return _dicom.FindFirst("300A00DD") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> BolusDescription_
        {
            get { return _dicom.FindAll("300A00DD").Select(d => d as ShortText).ToList(); }
        }

        public IntegerString NumberOfCompensators
        {
            get { return _dicom.FindFirst("300A00E0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfCompensators_
        {
            get { return _dicom.FindAll("300A00E0").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString MaterialID
        {
            get { return _dicom.FindFirst("300A00E1") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> MaterialID_
        {
            get { return _dicom.FindAll("300A00E1").Select(d => d as ShortString).ToList(); }
        }

        public DecimalString TotalCompensatorTrayFactor
        {
            get { return _dicom.FindFirst("300A00E2") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TotalCompensatorTrayFactor_
        {
            get { return _dicom.FindAll("300A00E2").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector CompensatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A00E3") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CompensatorSequence_
        {
            get { return _dicom.FindAll("300A00E3").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString CompensatorNumber
        {
            get { return _dicom.FindFirst("300A00E4") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CompensatorNumber_
        {
            get { return _dicom.FindAll("300A00E4").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString CompensatorID
        {
            get { return _dicom.FindFirst("300A00E5") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CompensatorID_
        {
            get { return _dicom.FindAll("300A00E5").Select(d => d as ShortString).ToList(); }
        }

        public DecimalString SourceToCompensatorTrayDistance
        {
            get { return _dicom.FindFirst("300A00E6") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceToCompensatorTrayDistance_
        {
            get { return _dicom.FindAll("300A00E6").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString CompensatorRows
        {
            get { return _dicom.FindFirst("300A00E7") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CompensatorRows_
        {
            get { return _dicom.FindAll("300A00E7").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString CompensatorColumns
        {
            get { return _dicom.FindFirst("300A00E8") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> CompensatorColumns_
        {
            get { return _dicom.FindAll("300A00E8").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString CompensatorPixelSpacing
        {
            get { return _dicom.FindFirst("300A00E9") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CompensatorPixelSpacing_
        {
            get { return _dicom.FindAll("300A00E9").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CompensatorPosition
        {
            get { return _dicom.FindFirst("300A00EA") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CompensatorPosition_
        {
            get { return _dicom.FindAll("300A00EA").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CompensatorTransmissionData
        {
            get { return _dicom.FindFirst("300A00EB") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CompensatorTransmissionData_
        {
            get { return _dicom.FindAll("300A00EB").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CompensatorThicknessData
        {
            get { return _dicom.FindFirst("300A00EC") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CompensatorThicknessData_
        {
            get { return _dicom.FindAll("300A00EC").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString NumberOfBoli
        {
            get { return _dicom.FindFirst("300A00ED") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfBoli_
        {
            get { return _dicom.FindAll("300A00ED").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString CompensatorType
        {
            get { return _dicom.FindFirst("300A00EE") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompensatorType_
        {
            get { return _dicom.FindAll("300A00EE").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString NumberOfBlocks
        {
            get { return _dicom.FindFirst("300A00F0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfBlocks_
        {
            get { return _dicom.FindAll("300A00F0").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString TotalBlockTrayFactor
        {
            get { return _dicom.FindFirst("300A00F2") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TotalBlockTrayFactor_
        {
            get { return _dicom.FindAll("300A00F2").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle TotalBlockTrayWaterEquivalentThickness
        {
            get { return _dicom.FindFirst("300A00F3") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TotalBlockTrayWaterEquivalentThickness_
        {
            get { return _dicom.FindAll("300A00F3").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector BlockSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A00F4") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BlockSequence_
        {
            get { return _dicom.FindAll("300A00F4").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString BlockTrayID
        {
            get { return _dicom.FindFirst("300A00F5") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> BlockTrayID_
        {
            get { return _dicom.FindAll("300A00F5").Select(d => d as ShortString).ToList(); }
        }

        public DecimalString SourceToBlockTrayDistance
        {
            get { return _dicom.FindFirst("300A00F6") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceToBlockTrayDistance_
        {
            get { return _dicom.FindAll("300A00F6").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle IsocenterToBlockTrayDistance
        {
            get { return _dicom.FindFirst("300A00F7") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToBlockTrayDistance_
        {
            get { return _dicom.FindAll("300A00F7").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString BlockType
        {
            get { return _dicom.FindFirst("300A00F8") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlockType_
        {
            get { return _dicom.FindAll("300A00F8").Select(d => d as CodeString).ToList(); }
        }

        public LongString AccessoryCode
        {
            get { return _dicom.FindFirst("300A00F9") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> AccessoryCode_
        {
            get { return _dicom.FindAll("300A00F9").Select(d => d as LongString).ToList(); }
        }

        public CodeString BlockDivergence
        {
            get { return _dicom.FindFirst("300A00FA") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlockDivergence_
        {
            get { return _dicom.FindAll("300A00FA").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BlockMountingPosition
        {
            get { return _dicom.FindFirst("300A00FB") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BlockMountingPosition_
        {
            get { return _dicom.FindAll("300A00FB").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString BlockNumber
        {
            get { return _dicom.FindFirst("300A00FC") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> BlockNumber_
        {
            get { return _dicom.FindAll("300A00FC").Select(d => d as IntegerString).ToList(); }
        }

        public LongString BlockName
        {
            get { return _dicom.FindFirst("300A00FE") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> BlockName_
        {
            get { return _dicom.FindAll("300A00FE").Select(d => d as LongString).ToList(); }
        }

        public DecimalString BlockThickness
        {
            get { return _dicom.FindFirst("300A0100") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BlockThickness_
        {
            get { return _dicom.FindAll("300A0100").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString BlockTransmission
        {
            get { return _dicom.FindFirst("300A0102") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BlockTransmission_
        {
            get { return _dicom.FindAll("300A0102").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString BlockNumberOfPoints
        {
            get { return _dicom.FindFirst("300A0104") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> BlockNumberOfPoints_
        {
            get { return _dicom.FindAll("300A0104").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString BlockData
        {
            get { return _dicom.FindFirst("300A0106") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BlockData_
        {
            get { return _dicom.FindAll("300A0106").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ApplicatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0107") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ApplicatorSequence_
        {
            get { return _dicom.FindAll("300A0107").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString ApplicatorID
        {
            get { return _dicom.FindFirst("300A0108") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ApplicatorID_
        {
            get { return _dicom.FindAll("300A0108").Select(d => d as ShortString).ToList(); }
        }

        public CodeString ApplicatorType
        {
            get { return _dicom.FindFirst("300A0109") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ApplicatorType_
        {
            get { return _dicom.FindAll("300A0109").Select(d => d as CodeString).ToList(); }
        }

        public LongString ApplicatorDescription
        {
            get { return _dicom.FindFirst("300A010A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ApplicatorDescription_
        {
            get { return _dicom.FindAll("300A010A").Select(d => d as LongString).ToList(); }
        }

        public DecimalString CumulativeDoseReferenceCoefficient
        {
            get { return _dicom.FindFirst("300A010C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CumulativeDoseReferenceCoefficient_
        {
            get { return _dicom.FindAll("300A010C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FinalCumulativeMetersetWeight
        {
            get { return _dicom.FindFirst("300A010E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FinalCumulativeMetersetWeight_
        {
            get { return _dicom.FindAll("300A010E").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString NumberOfControlPoints
        {
            get { return _dicom.FindFirst("300A0110") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfControlPoints_
        {
            get { return _dicom.FindAll("300A0110").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ControlPointSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0111") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ControlPointSequence_
        {
            get { return _dicom.FindAll("300A0111").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ControlPointIndex
        {
            get { return _dicom.FindFirst("300A0112") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ControlPointIndex_
        {
            get { return _dicom.FindAll("300A0112").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString NominalBeamEnergy
        {
            get { return _dicom.FindFirst("300A0114") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> NominalBeamEnergy_
        {
            get { return _dicom.FindAll("300A0114").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString DoseRateSet
        {
            get { return _dicom.FindFirst("300A0115") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> DoseRateSet_
        {
            get { return _dicom.FindAll("300A0115").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector WedgePositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0116") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> WedgePositionSequence_
        {
            get { return _dicom.FindAll("300A0116").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString WedgePosition
        {
            get { return _dicom.FindFirst("300A0118") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> WedgePosition_
        {
            get { return _dicom.FindAll("300A0118").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector BeamLimitingDevicePositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A011A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BeamLimitingDevicePositionSequence_
        {
            get { return _dicom.FindAll("300A011A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString LeafJawPositions
        {
            get { return _dicom.FindFirst("300A011C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> LeafJawPositions_
        {
            get { return _dicom.FindAll("300A011C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString GantryAngle
        {
            get { return _dicom.FindFirst("300A011E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> GantryAngle_
        {
            get { return _dicom.FindAll("300A011E").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString GantryRotationDirection
        {
            get { return _dicom.FindFirst("300A011F") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GantryRotationDirection_
        {
            get { return _dicom.FindAll("300A011F").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString BeamLimitingDeviceAngle
        {
            get { return _dicom.FindFirst("300A0120") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BeamLimitingDeviceAngle_
        {
            get { return _dicom.FindAll("300A0120").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString BeamLimitingDeviceRotationDirection
        {
            get { return _dicom.FindFirst("300A0121") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BeamLimitingDeviceRotationDirection_
        {
            get { return _dicom.FindAll("300A0121").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString PatientSupportAngle
        {
            get { return _dicom.FindFirst("300A0122") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PatientSupportAngle_
        {
            get { return _dicom.FindAll("300A0122").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString PatientSupportRotationDirection
        {
            get { return _dicom.FindFirst("300A0123") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientSupportRotationDirection_
        {
            get { return _dicom.FindAll("300A0123").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString TableTopEccentricAxisDistance
        {
            get { return _dicom.FindFirst("300A0124") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopEccentricAxisDistance_
        {
            get { return _dicom.FindAll("300A0124").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopEccentricAngle
        {
            get { return _dicom.FindFirst("300A0125") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopEccentricAngle_
        {
            get { return _dicom.FindAll("300A0125").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString TableTopEccentricRotationDirection
        {
            get { return _dicom.FindFirst("300A0126") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TableTopEccentricRotationDirection_
        {
            get { return _dicom.FindAll("300A0126").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString TableTopVerticalPosition
        {
            get { return _dicom.FindFirst("300A0128") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopVerticalPosition_
        {
            get { return _dicom.FindAll("300A0128").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopLongitudinalPosition
        {
            get { return _dicom.FindFirst("300A0129") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopLongitudinalPosition_
        {
            get { return _dicom.FindAll("300A0129").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopLateralPosition
        {
            get { return _dicom.FindFirst("300A012A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopLateralPosition_
        {
            get { return _dicom.FindAll("300A012A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString IsocenterPosition
        {
            get { return _dicom.FindFirst("300A012C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> IsocenterPosition_
        {
            get { return _dicom.FindAll("300A012C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SurfaceEntryPoint
        {
            get { return _dicom.FindFirst("300A012E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SurfaceEntryPoint_
        {
            get { return _dicom.FindAll("300A012E").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SourceToSurfaceDistance
        {
            get { return _dicom.FindFirst("300A0130") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceToSurfaceDistance_
        {
            get { return _dicom.FindAll("300A0130").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CumulativeMetersetWeight
        {
            get { return _dicom.FindFirst("300A0134") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CumulativeMetersetWeight_
        {
            get { return _dicom.FindAll("300A0134").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle TableTopPitchAngle
        {
            get { return _dicom.FindFirst("300A0140") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableTopPitchAngle_
        {
            get { return _dicom.FindAll("300A0140").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString TableTopPitchRotationDirection
        {
            get { return _dicom.FindFirst("300A0142") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TableTopPitchRotationDirection_
        {
            get { return _dicom.FindAll("300A0142").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle TableTopRollAngle
        {
            get { return _dicom.FindFirst("300A0144") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TableTopRollAngle_
        {
            get { return _dicom.FindAll("300A0144").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString TableTopRollRotationDirection
        {
            get { return _dicom.FindFirst("300A0146") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TableTopRollRotationDirection_
        {
            get { return _dicom.FindAll("300A0146").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle HeadFixationAngle
        {
            get { return _dicom.FindFirst("300A0148") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> HeadFixationAngle_
        {
            get { return _dicom.FindAll("300A0148").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle GantryPitchAngle
        {
            get { return _dicom.FindFirst("300A014A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GantryPitchAngle_
        {
            get { return _dicom.FindAll("300A014A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString GantryPitchRotationDirection
        {
            get { return _dicom.FindFirst("300A014C") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GantryPitchRotationDirection_
        {
            get { return _dicom.FindAll("300A014C").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle GantryPitchAngleTolerance
        {
            get { return _dicom.FindFirst("300A014E") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> GantryPitchAngleTolerance_
        {
            get { return _dicom.FindAll("300A014E").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector PatientSetupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0180") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PatientSetupSequence_
        {
            get { return _dicom.FindAll("300A0180").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString PatientSetupNumber
        {
            get { return _dicom.FindFirst("300A0182") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> PatientSetupNumber_
        {
            get { return _dicom.FindAll("300A0182").Select(d => d as IntegerString).ToList(); }
        }

        public LongString PatientSetupLabel
        {
            get { return _dicom.FindFirst("300A0183") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientSetupLabel_
        {
            get { return _dicom.FindAll("300A0183").Select(d => d as LongString).ToList(); }
        }

        public LongString PatientAdditionalPosition
        {
            get { return _dicom.FindFirst("300A0184") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientAdditionalPosition_
        {
            get { return _dicom.FindAll("300A0184").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector FixationDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0190") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> FixationDeviceSequence_
        {
            get { return _dicom.FindAll("300A0190").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString FixationDeviceType
        {
            get { return _dicom.FindFirst("300A0192") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> FixationDeviceType_
        {
            get { return _dicom.FindAll("300A0192").Select(d => d as CodeString).ToList(); }
        }

        public ShortString FixationDeviceLabel
        {
            get { return _dicom.FindFirst("300A0194") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FixationDeviceLabel_
        {
            get { return _dicom.FindAll("300A0194").Select(d => d as ShortString).ToList(); }
        }

        public ShortText FixationDeviceDescription
        {
            get { return _dicom.FindFirst("300A0196") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> FixationDeviceDescription_
        {
            get { return _dicom.FindAll("300A0196").Select(d => d as ShortText).ToList(); }
        }

        public ShortString FixationDevicePosition
        {
            get { return _dicom.FindFirst("300A0198") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> FixationDevicePosition_
        {
            get { return _dicom.FindAll("300A0198").Select(d => d as ShortString).ToList(); }
        }

        public FloatingPointSingle FixationDevicePitchAngle
        {
            get { return _dicom.FindFirst("300A0199") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FixationDevicePitchAngle_
        {
            get { return _dicom.FindAll("300A0199").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle FixationDeviceRollAngle
        {
            get { return _dicom.FindFirst("300A019A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FixationDeviceRollAngle_
        {
            get { return _dicom.FindAll("300A019A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector ShieldingDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A01A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ShieldingDeviceSequence_
        {
            get { return _dicom.FindAll("300A01A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ShieldingDeviceType
        {
            get { return _dicom.FindFirst("300A01A2") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ShieldingDeviceType_
        {
            get { return _dicom.FindAll("300A01A2").Select(d => d as CodeString).ToList(); }
        }

        public ShortString ShieldingDeviceLabel
        {
            get { return _dicom.FindFirst("300A01A4") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ShieldingDeviceLabel_
        {
            get { return _dicom.FindAll("300A01A4").Select(d => d as ShortString).ToList(); }
        }

        public ShortText ShieldingDeviceDescription
        {
            get { return _dicom.FindFirst("300A01A6") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ShieldingDeviceDescription_
        {
            get { return _dicom.FindAll("300A01A6").Select(d => d as ShortText).ToList(); }
        }

        public ShortString ShieldingDevicePosition
        {
            get { return _dicom.FindFirst("300A01A8") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ShieldingDevicePosition_
        {
            get { return _dicom.FindAll("300A01A8").Select(d => d as ShortString).ToList(); }
        }

        public CodeString SetupTechnique
        {
            get { return _dicom.FindFirst("300A01B0") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SetupTechnique_
        {
            get { return _dicom.FindAll("300A01B0").Select(d => d as CodeString).ToList(); }
        }

        public ShortText SetupTechniqueDescription
        {
            get { return _dicom.FindFirst("300A01B2") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> SetupTechniqueDescription_
        {
            get { return _dicom.FindAll("300A01B2").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector SetupDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A01B4") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SetupDeviceSequence_
        {
            get { return _dicom.FindAll("300A01B4").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString SetupDeviceType
        {
            get { return _dicom.FindFirst("300A01B6") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SetupDeviceType_
        {
            get { return _dicom.FindAll("300A01B6").Select(d => d as CodeString).ToList(); }
        }

        public ShortString SetupDeviceLabel
        {
            get { return _dicom.FindFirst("300A01B8") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> SetupDeviceLabel_
        {
            get { return _dicom.FindAll("300A01B8").Select(d => d as ShortString).ToList(); }
        }

        public ShortText SetupDeviceDescription
        {
            get { return _dicom.FindFirst("300A01BA") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> SetupDeviceDescription_
        {
            get { return _dicom.FindAll("300A01BA").Select(d => d as ShortText).ToList(); }
        }

        public DecimalString SetupDeviceParameter
        {
            get { return _dicom.FindFirst("300A01BC") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SetupDeviceParameter_
        {
            get { return _dicom.FindAll("300A01BC").Select(d => d as DecimalString).ToList(); }
        }

        public ShortText SetupReferenceDescription
        {
            get { return _dicom.FindFirst("300A01D0") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> SetupReferenceDescription_
        {
            get { return _dicom.FindAll("300A01D0").Select(d => d as ShortText).ToList(); }
        }

        public DecimalString TableTopVerticalSetupDisplacement
        {
            get { return _dicom.FindFirst("300A01D2") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopVerticalSetupDisplacement_
        {
            get { return _dicom.FindAll("300A01D2").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopLongitudinalSetupDisplacement
        {
            get { return _dicom.FindFirst("300A01D4") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopLongitudinalSetupDisplacement_
        {
            get { return _dicom.FindAll("300A01D4").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString TableTopLateralSetupDisplacement
        {
            get { return _dicom.FindFirst("300A01D6") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TableTopLateralSetupDisplacement_
        {
            get { return _dicom.FindAll("300A01D6").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString BrachyTreatmentTechnique
        {
            get { return _dicom.FindFirst("300A0200") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BrachyTreatmentTechnique_
        {
            get { return _dicom.FindAll("300A0200").Select(d => d as CodeString).ToList(); }
        }

        public CodeString BrachyTreatmentType
        {
            get { return _dicom.FindFirst("300A0202") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BrachyTreatmentType_
        {
            get { return _dicom.FindAll("300A0202").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector TreatmentMachineSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0206") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> TreatmentMachineSequence_
        {
            get { return _dicom.FindAll("300A0206").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector SourceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0210") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SourceSequence_
        {
            get { return _dicom.FindAll("300A0210").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString SourceNumber
        {
            get { return _dicom.FindFirst("300A0212") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SourceNumber_
        {
            get { return _dicom.FindAll("300A0212").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString SourceType
        {
            get { return _dicom.FindFirst("300A0214") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SourceType_
        {
            get { return _dicom.FindAll("300A0214").Select(d => d as CodeString).ToList(); }
        }

        public LongString SourceManufacturer
        {
            get { return _dicom.FindFirst("300A0216") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SourceManufacturer_
        {
            get { return _dicom.FindAll("300A0216").Select(d => d as LongString).ToList(); }
        }

        public DecimalString ActiveSourceDiameter
        {
            get { return _dicom.FindFirst("300A0218") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ActiveSourceDiameter_
        {
            get { return _dicom.FindAll("300A0218").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ActiveSourceLength
        {
            get { return _dicom.FindFirst("300A021A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ActiveSourceLength_
        {
            get { return _dicom.FindAll("300A021A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SourceEncapsulationNominalThickness
        {
            get { return _dicom.FindFirst("300A0222") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceEncapsulationNominalThickness_
        {
            get { return _dicom.FindAll("300A0222").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SourceEncapsulationNominalTransmission
        {
            get { return _dicom.FindFirst("300A0224") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceEncapsulationNominalTransmission_
        {
            get { return _dicom.FindAll("300A0224").Select(d => d as DecimalString).ToList(); }
        }

        public LongString SourceIsotopeName
        {
            get { return _dicom.FindFirst("300A0226") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SourceIsotopeName_
        {
            get { return _dicom.FindAll("300A0226").Select(d => d as LongString).ToList(); }
        }

        public DecimalString SourceIsotopeHalfLife
        {
            get { return _dicom.FindFirst("300A0228") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceIsotopeHalfLife_
        {
            get { return _dicom.FindAll("300A0228").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString SourceStrengthUnits
        {
            get { return _dicom.FindFirst("300A0229") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SourceStrengthUnits_
        {
            get { return _dicom.FindAll("300A0229").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString ReferenceAirKermaRate
        {
            get { return _dicom.FindFirst("300A022A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ReferenceAirKermaRate_
        {
            get { return _dicom.FindAll("300A022A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SourceStrength
        {
            get { return _dicom.FindFirst("300A022B") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceStrength_
        {
            get { return _dicom.FindAll("300A022B").Select(d => d as DecimalString).ToList(); }
        }

        public Date SourceStrengthReferenceDate
        {
            get { return _dicom.FindFirst("300A022C") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> SourceStrengthReferenceDate_
        {
            get { return _dicom.FindAll("300A022C").Select(d => d as Date).ToList(); }
        }

        public Time SourceStrengthReferenceTime
        {
            get { return _dicom.FindFirst("300A022E") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> SourceStrengthReferenceTime_
        {
            get { return _dicom.FindAll("300A022E").Select(d => d as Time).ToList(); }
        }

        public SequenceSelector ApplicationSetupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0230") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ApplicationSetupSequence_
        {
            get { return _dicom.FindAll("300A0230").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ApplicationSetupType
        {
            get { return _dicom.FindFirst("300A0232") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ApplicationSetupType_
        {
            get { return _dicom.FindAll("300A0232").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString ApplicationSetupNumber
        {
            get { return _dicom.FindFirst("300A0234") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ApplicationSetupNumber_
        {
            get { return _dicom.FindAll("300A0234").Select(d => d as IntegerString).ToList(); }
        }

        public LongString ApplicationSetupName
        {
            get { return _dicom.FindFirst("300A0236") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ApplicationSetupName_
        {
            get { return _dicom.FindAll("300A0236").Select(d => d as LongString).ToList(); }
        }

        public LongString ApplicationSetupManufacturer
        {
            get { return _dicom.FindFirst("300A0238") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ApplicationSetupManufacturer_
        {
            get { return _dicom.FindAll("300A0238").Select(d => d as LongString).ToList(); }
        }

        public IntegerString TemplateNumber
        {
            get { return _dicom.FindFirst("300A0240") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TemplateNumber_
        {
            get { return _dicom.FindAll("300A0240").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString TemplateType
        {
            get { return _dicom.FindFirst("300A0242") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> TemplateType_
        {
            get { return _dicom.FindAll("300A0242").Select(d => d as ShortString).ToList(); }
        }

        public LongString TemplateName
        {
            get { return _dicom.FindFirst("300A0244") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> TemplateName_
        {
            get { return _dicom.FindAll("300A0244").Select(d => d as LongString).ToList(); }
        }

        public DecimalString TotalReferenceAirKerma
        {
            get { return _dicom.FindFirst("300A0250") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TotalReferenceAirKerma_
        {
            get { return _dicom.FindAll("300A0250").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector BrachyAccessoryDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0260") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BrachyAccessoryDeviceSequence_
        {
            get { return _dicom.FindAll("300A0260").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString BrachyAccessoryDeviceNumber
        {
            get { return _dicom.FindFirst("300A0262") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> BrachyAccessoryDeviceNumber_
        {
            get { return _dicom.FindAll("300A0262").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString BrachyAccessoryDeviceID
        {
            get { return _dicom.FindFirst("300A0263") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> BrachyAccessoryDeviceID_
        {
            get { return _dicom.FindAll("300A0263").Select(d => d as ShortString).ToList(); }
        }

        public CodeString BrachyAccessoryDeviceType
        {
            get { return _dicom.FindFirst("300A0264") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> BrachyAccessoryDeviceType_
        {
            get { return _dicom.FindAll("300A0264").Select(d => d as CodeString).ToList(); }
        }

        public LongString BrachyAccessoryDeviceName
        {
            get { return _dicom.FindFirst("300A0266") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> BrachyAccessoryDeviceName_
        {
            get { return _dicom.FindAll("300A0266").Select(d => d as LongString).ToList(); }
        }

        public DecimalString BrachyAccessoryDeviceNominalThickness
        {
            get { return _dicom.FindFirst("300A026A") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BrachyAccessoryDeviceNominalThickness_
        {
            get { return _dicom.FindAll("300A026A").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString BrachyAccessoryDeviceNominalTransmission
        {
            get { return _dicom.FindFirst("300A026C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> BrachyAccessoryDeviceNominalTransmission_
        {
            get { return _dicom.FindAll("300A026C").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ChannelSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0280") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelSequence_
        {
            get { return _dicom.FindAll("300A0280").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ChannelNumber
        {
            get { return _dicom.FindFirst("300A0282") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ChannelNumber_
        {
            get { return _dicom.FindAll("300A0282").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ChannelLength
        {
            get { return _dicom.FindFirst("300A0284") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelLength_
        {
            get { return _dicom.FindAll("300A0284").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ChannelTotalTime
        {
            get { return _dicom.FindFirst("300A0286") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelTotalTime_
        {
            get { return _dicom.FindAll("300A0286").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString SourceMovementType
        {
            get { return _dicom.FindFirst("300A0288") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SourceMovementType_
        {
            get { return _dicom.FindAll("300A0288").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString NumberOfPulses
        {
            get { return _dicom.FindFirst("300A028A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfPulses_
        {
            get { return _dicom.FindAll("300A028A").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString PulseRepetitionInterval
        {
            get { return _dicom.FindFirst("300A028C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> PulseRepetitionInterval_
        {
            get { return _dicom.FindAll("300A028C").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString SourceApplicatorNumber
        {
            get { return _dicom.FindFirst("300A0290") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> SourceApplicatorNumber_
        {
            get { return _dicom.FindAll("300A0290").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString SourceApplicatorID
        {
            get { return _dicom.FindFirst("300A0291") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> SourceApplicatorID_
        {
            get { return _dicom.FindAll("300A0291").Select(d => d as ShortString).ToList(); }
        }

        public CodeString SourceApplicatorType
        {
            get { return _dicom.FindFirst("300A0292") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> SourceApplicatorType_
        {
            get { return _dicom.FindAll("300A0292").Select(d => d as CodeString).ToList(); }
        }

        public LongString SourceApplicatorName
        {
            get { return _dicom.FindFirst("300A0294") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SourceApplicatorName_
        {
            get { return _dicom.FindAll("300A0294").Select(d => d as LongString).ToList(); }
        }

        public DecimalString SourceApplicatorLength
        {
            get { return _dicom.FindFirst("300A0296") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceApplicatorLength_
        {
            get { return _dicom.FindAll("300A0296").Select(d => d as DecimalString).ToList(); }
        }

        public LongString SourceApplicatorManufacturer
        {
            get { return _dicom.FindFirst("300A0298") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> SourceApplicatorManufacturer_
        {
            get { return _dicom.FindAll("300A0298").Select(d => d as LongString).ToList(); }
        }

        public DecimalString SourceApplicatorWallNominalThickness
        {
            get { return _dicom.FindFirst("300A029C") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceApplicatorWallNominalThickness_
        {
            get { return _dicom.FindAll("300A029C").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SourceApplicatorWallNominalTransmission
        {
            get { return _dicom.FindFirst("300A029E") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceApplicatorWallNominalTransmission_
        {
            get { return _dicom.FindAll("300A029E").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString SourceApplicatorStepSize
        {
            get { return _dicom.FindFirst("300A02A0") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceApplicatorStepSize_
        {
            get { return _dicom.FindAll("300A02A0").Select(d => d as DecimalString).ToList(); }
        }

        public IntegerString TransferTubeNumber
        {
            get { return _dicom.FindFirst("300A02A2") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> TransferTubeNumber_
        {
            get { return _dicom.FindAll("300A02A2").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString TransferTubeLength
        {
            get { return _dicom.FindFirst("300A02A4") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> TransferTubeLength_
        {
            get { return _dicom.FindAll("300A02A4").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ChannelShieldSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A02B0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ChannelShieldSequence_
        {
            get { return _dicom.FindAll("300A02B0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ChannelShieldNumber
        {
            get { return _dicom.FindFirst("300A02B2") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ChannelShieldNumber_
        {
            get { return _dicom.FindAll("300A02B2").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString ChannelShieldID
        {
            get { return _dicom.FindFirst("300A02B3") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ChannelShieldID_
        {
            get { return _dicom.FindAll("300A02B3").Select(d => d as ShortString).ToList(); }
        }

        public LongString ChannelShieldName
        {
            get { return _dicom.FindFirst("300A02B4") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ChannelShieldName_
        {
            get { return _dicom.FindAll("300A02B4").Select(d => d as LongString).ToList(); }
        }

        public DecimalString ChannelShieldNominalThickness
        {
            get { return _dicom.FindFirst("300A02B8") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelShieldNominalThickness_
        {
            get { return _dicom.FindAll("300A02B8").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ChannelShieldNominalTransmission
        {
            get { return _dicom.FindFirst("300A02BA") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ChannelShieldNominalTransmission_
        {
            get { return _dicom.FindAll("300A02BA").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString FinalCumulativeTimeWeight
        {
            get { return _dicom.FindFirst("300A02C8") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> FinalCumulativeTimeWeight_
        {
            get { return _dicom.FindAll("300A02C8").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector BrachyControlPointSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A02D0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BrachyControlPointSequence_
        {
            get { return _dicom.FindAll("300A02D0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public DecimalString ControlPointRelativePosition
        {
            get { return _dicom.FindFirst("300A02D2") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ControlPointRelativePosition_
        {
            get { return _dicom.FindAll("300A02D2").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ControlPoint3DPosition
        {
            get { return _dicom.FindFirst("300A02D4") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ControlPoint3DPosition_
        {
            get { return _dicom.FindAll("300A02D4").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString CumulativeTimeWeight
        {
            get { return _dicom.FindFirst("300A02D6") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> CumulativeTimeWeight_
        {
            get { return _dicom.FindAll("300A02D6").Select(d => d as DecimalString).ToList(); }
        }

        public CodeString CompensatorDivergence
        {
            get { return _dicom.FindFirst("300A02E0") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompensatorDivergence_
        {
            get { return _dicom.FindAll("300A02E0").Select(d => d as CodeString).ToList(); }
        }

        public CodeString CompensatorMountingPosition
        {
            get { return _dicom.FindFirst("300A02E1") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CompensatorMountingPosition_
        {
            get { return _dicom.FindAll("300A02E1").Select(d => d as CodeString).ToList(); }
        }

        public DecimalString SourceToCompensatorDistance
        {
            get { return _dicom.FindFirst("300A02E2") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> SourceToCompensatorDistance_
        {
            get { return _dicom.FindAll("300A02E2").Select(d => d as DecimalString).ToList(); }
        }

        public FloatingPointSingle TotalCompensatorTrayWaterEquivalentThickness
        {
            get { return _dicom.FindFirst("300A02E3") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TotalCompensatorTrayWaterEquivalentThickness_
        {
            get { return _dicom.FindAll("300A02E3").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle IsocenterToCompensatorTrayDistance
        {
            get { return _dicom.FindFirst("300A02E4") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToCompensatorTrayDistance_
        {
            get { return _dicom.FindAll("300A02E4").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CompensatorColumnOffset
        {
            get { return _dicom.FindFirst("300A02E5") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CompensatorColumnOffset_
        {
            get { return _dicom.FindAll("300A02E5").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle IsocenterToCompensatorDistances
        {
            get { return _dicom.FindFirst("300A02E6") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToCompensatorDistances_
        {
            get { return _dicom.FindAll("300A02E6").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CompensatorRelativeStoppingPowerRatio
        {
            get { return _dicom.FindFirst("300A02E7") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CompensatorRelativeStoppingPowerRatio_
        {
            get { return _dicom.FindAll("300A02E7").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CompensatorMillingToolDiameter
        {
            get { return _dicom.FindFirst("300A02E8") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CompensatorMillingToolDiameter_
        {
            get { return _dicom.FindAll("300A02E8").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector IonRangeCompensatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A02EA") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonRangeCompensatorSequence_
        {
            get { return _dicom.FindAll("300A02EA").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongText CompensatorDescription
        {
            get { return _dicom.FindFirst("300A02EB") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> CompensatorDescription_
        {
            get { return _dicom.FindAll("300A02EB").Select(d => d as LongText).ToList(); }
        }

        public IntegerString RadiationMassNumber
        {
            get { return _dicom.FindFirst("300A0302") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RadiationMassNumber_
        {
            get { return _dicom.FindAll("300A0302").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString RadiationAtomicNumber
        {
            get { return _dicom.FindFirst("300A0304") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RadiationAtomicNumber_
        {
            get { return _dicom.FindAll("300A0304").Select(d => d as IntegerString).ToList(); }
        }

        public SignedShort RadiationChargeState
        {
            get { return _dicom.FindFirst("300A0306") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> RadiationChargeState_
        {
            get { return _dicom.FindAll("300A0306").Select(d => d as SignedShort).ToList(); }
        }

        public CodeString ScanMode
        {
            get { return _dicom.FindFirst("300A0308") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScanMode_
        {
            get { return _dicom.FindAll("300A0308").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle VirtualSourceAxisDistances
        {
            get { return _dicom.FindFirst("300A030A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VirtualSourceAxisDistances_
        {
            get { return _dicom.FindAll("300A030A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector SnoutSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A030C") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SnoutSequence_
        {
            get { return _dicom.FindAll("300A030C").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle SnoutPosition
        {
            get { return _dicom.FindFirst("300A030D") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SnoutPosition_
        {
            get { return _dicom.FindAll("300A030D").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public ShortString SnoutID
        {
            get { return _dicom.FindFirst("300A030F") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> SnoutID_
        {
            get { return _dicom.FindAll("300A030F").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString NumberOfRangeShifters
        {
            get { return _dicom.FindFirst("300A0312") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfRangeShifters_
        {
            get { return _dicom.FindAll("300A0312").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector RangeShifterSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0314") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RangeShifterSequence_
        {
            get { return _dicom.FindAll("300A0314").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString RangeShifterNumber
        {
            get { return _dicom.FindFirst("300A0316") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RangeShifterNumber_
        {
            get { return _dicom.FindAll("300A0316").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString RangeShifterID
        {
            get { return _dicom.FindFirst("300A0318") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RangeShifterID_
        {
            get { return _dicom.FindAll("300A0318").Select(d => d as ShortString).ToList(); }
        }

        public CodeString RangeShifterType
        {
            get { return _dicom.FindFirst("300A0320") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RangeShifterType_
        {
            get { return _dicom.FindAll("300A0320").Select(d => d as CodeString).ToList(); }
        }

        public LongString RangeShifterDescription
        {
            get { return _dicom.FindFirst("300A0322") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RangeShifterDescription_
        {
            get { return _dicom.FindAll("300A0322").Select(d => d as LongString).ToList(); }
        }

        public IntegerString NumberOfLateralSpreadingDevices
        {
            get { return _dicom.FindFirst("300A0330") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfLateralSpreadingDevices_
        {
            get { return _dicom.FindAll("300A0330").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector LateralSpreadingDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0332") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LateralSpreadingDeviceSequence_
        {
            get { return _dicom.FindAll("300A0332").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString LateralSpreadingDeviceNumber
        {
            get { return _dicom.FindFirst("300A0334") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> LateralSpreadingDeviceNumber_
        {
            get { return _dicom.FindAll("300A0334").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString LateralSpreadingDeviceID
        {
            get { return _dicom.FindFirst("300A0336") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> LateralSpreadingDeviceID_
        {
            get { return _dicom.FindAll("300A0336").Select(d => d as ShortString).ToList(); }
        }

        public CodeString LateralSpreadingDeviceType
        {
            get { return _dicom.FindFirst("300A0338") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LateralSpreadingDeviceType_
        {
            get { return _dicom.FindAll("300A0338").Select(d => d as CodeString).ToList(); }
        }

        public LongString LateralSpreadingDeviceDescription
        {
            get { return _dicom.FindFirst("300A033A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> LateralSpreadingDeviceDescription_
        {
            get { return _dicom.FindAll("300A033A").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle LateralSpreadingDeviceWaterEquivalentThickness
        {
            get { return _dicom.FindFirst("300A033C") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> LateralSpreadingDeviceWaterEquivalentThickness_
        {
            get { return _dicom.FindAll("300A033C").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public IntegerString NumberOfRangeModulators
        {
            get { return _dicom.FindFirst("300A0340") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfRangeModulators_
        {
            get { return _dicom.FindAll("300A0340").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector RangeModulatorSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0342") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RangeModulatorSequence_
        {
            get { return _dicom.FindAll("300A0342").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString RangeModulatorNumber
        {
            get { return _dicom.FindFirst("300A0344") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> RangeModulatorNumber_
        {
            get { return _dicom.FindAll("300A0344").Select(d => d as IntegerString).ToList(); }
        }

        public ShortString RangeModulatorID
        {
            get { return _dicom.FindFirst("300A0346") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RangeModulatorID_
        {
            get { return _dicom.FindAll("300A0346").Select(d => d as ShortString).ToList(); }
        }

        public CodeString RangeModulatorType
        {
            get { return _dicom.FindFirst("300A0348") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RangeModulatorType_
        {
            get { return _dicom.FindAll("300A0348").Select(d => d as CodeString).ToList(); }
        }

        public LongString RangeModulatorDescription
        {
            get { return _dicom.FindFirst("300A034A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RangeModulatorDescription_
        {
            get { return _dicom.FindAll("300A034A").Select(d => d as LongString).ToList(); }
        }

        public ShortString BeamCurrentModulationID
        {
            get { return _dicom.FindFirst("300A034C") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> BeamCurrentModulationID_
        {
            get { return _dicom.FindAll("300A034C").Select(d => d as ShortString).ToList(); }
        }

        public CodeString PatientSupportType
        {
            get { return _dicom.FindFirst("300A0350") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PatientSupportType_
        {
            get { return _dicom.FindAll("300A0350").Select(d => d as CodeString).ToList(); }
        }

        public ShortString PatientSupportID
        {
            get { return _dicom.FindFirst("300A0352") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> PatientSupportID_
        {
            get { return _dicom.FindAll("300A0352").Select(d => d as ShortString).ToList(); }
        }

        public LongString PatientSupportAccessoryCode
        {
            get { return _dicom.FindFirst("300A0354") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> PatientSupportAccessoryCode_
        {
            get { return _dicom.FindAll("300A0354").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle FixationLightAzimuthalAngle
        {
            get { return _dicom.FindFirst("300A0356") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FixationLightAzimuthalAngle_
        {
            get { return _dicom.FindAll("300A0356").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle FixationLightPolarAngle
        {
            get { return _dicom.FindFirst("300A0358") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> FixationLightPolarAngle_
        {
            get { return _dicom.FindAll("300A0358").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle MetersetRate
        {
            get { return _dicom.FindFirst("300A035A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> MetersetRate_
        {
            get { return _dicom.FindAll("300A035A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector RangeShifterSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0360") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RangeShifterSettingsSequence_
        {
            get { return _dicom.FindAll("300A0360").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString RangeShifterSetting
        {
            get { return _dicom.FindFirst("300A0362") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> RangeShifterSetting_
        {
            get { return _dicom.FindAll("300A0362").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle IsocenterToRangeShifterDistance
        {
            get { return _dicom.FindFirst("300A0364") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToRangeShifterDistance_
        {
            get { return _dicom.FindAll("300A0364").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle RangeShifterWaterEquivalentThickness
        {
            get { return _dicom.FindFirst("300A0366") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RangeShifterWaterEquivalentThickness_
        {
            get { return _dicom.FindAll("300A0366").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector LateralSpreadingDeviceSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0370") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> LateralSpreadingDeviceSettingsSequence_
        {
            get { return _dicom.FindAll("300A0370").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public LongString LateralSpreadingDeviceSetting
        {
            get { return _dicom.FindFirst("300A0372") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> LateralSpreadingDeviceSetting_
        {
            get { return _dicom.FindAll("300A0372").Select(d => d as LongString).ToList(); }
        }

        public FloatingPointSingle IsocenterToLateralSpreadingDeviceDistance
        {
            get { return _dicom.FindFirst("300A0374") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToLateralSpreadingDeviceDistance_
        {
            get { return _dicom.FindAll("300A0374").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector RangeModulatorSettingsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0380") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RangeModulatorSettingsSequence_
        {
            get { return _dicom.FindAll("300A0380").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle RangeModulatorGatingStartValue
        {
            get { return _dicom.FindFirst("300A0382") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RangeModulatorGatingStartValue_
        {
            get { return _dicom.FindAll("300A0382").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle RangeModulatorGatingStopValue
        {
            get { return _dicom.FindFirst("300A0384") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RangeModulatorGatingStopValue_
        {
            get { return _dicom.FindAll("300A0384").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle RangeModulatorGatingStartWaterEquivalentThickness
        {
            get { return _dicom.FindFirst("300A0386") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RangeModulatorGatingStartWaterEquivalentThickness_
        {
            get { return _dicom.FindAll("300A0386").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle RangeModulatorGatingStopWaterEquivalentThickness
        {
            get { return _dicom.FindFirst("300A0388") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> RangeModulatorGatingStopWaterEquivalentThickness_
        {
            get { return _dicom.FindAll("300A0388").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle IsocenterToRangeModulatorDistance
        {
            get { return _dicom.FindFirst("300A038A") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> IsocenterToRangeModulatorDistance_
        {
            get { return _dicom.FindAll("300A038A").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public ShortString ScanSpotTuneID
        {
            get { return _dicom.FindFirst("300A0390") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ScanSpotTuneID_
        {
            get { return _dicom.FindAll("300A0390").Select(d => d as ShortString).ToList(); }
        }

        public IntegerString NumberOfScanSpotPositions
        {
            get { return _dicom.FindFirst("300A0392") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfScanSpotPositions_
        {
            get { return _dicom.FindAll("300A0392").Select(d => d as IntegerString).ToList(); }
        }

        public FloatingPointSingle ScanSpotPositionMap
        {
            get { return _dicom.FindFirst("300A0394") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ScanSpotPositionMap_
        {
            get { return _dicom.FindAll("300A0394").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ScanSpotMetersetWeights
        {
            get { return _dicom.FindFirst("300A0396") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ScanSpotMetersetWeights_
        {
            get { return _dicom.FindAll("300A0396").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ScanningSpotSize
        {
            get { return _dicom.FindFirst("300A0398") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ScanningSpotSize_
        {
            get { return _dicom.FindAll("300A0398").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public IntegerString NumberOfPaintings
        {
            get { return _dicom.FindFirst("300A039A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfPaintings_
        {
            get { return _dicom.FindAll("300A039A").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector IonToleranceTableSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A03A0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonToleranceTableSequence_
        {
            get { return _dicom.FindAll("300A03A0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonBeamSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A03A2") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonBeamSequence_
        {
            get { return _dicom.FindAll("300A03A2").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonBeamLimitingDeviceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A03A4") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonBeamLimitingDeviceSequence_
        {
            get { return _dicom.FindAll("300A03A4").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonBlockSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A03A6") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonBlockSequence_
        {
            get { return _dicom.FindAll("300A03A6").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonControlPointSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A03A8") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonControlPointSequence_
        {
            get { return _dicom.FindAll("300A03A8").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonWedgeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A03AA") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonWedgeSequence_
        {
            get { return _dicom.FindAll("300A03AA").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector IonWedgePositionSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A03AC") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> IonWedgePositionSequence_
        {
            get { return _dicom.FindAll("300A03AC").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedSetupImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0401") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedSetupImageSequence_
        {
            get { return _dicom.FindAll("300A0401").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortText SetupImageComment
        {
            get { return _dicom.FindFirst("300A0402") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> SetupImageComment_
        {
            get { return _dicom.FindAll("300A0402").Select(d => d as ShortText).ToList(); }
        }

        public SequenceSelector MotionSynchronizationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0410") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MotionSynchronizationSequence_
        {
            get { return _dicom.FindAll("300A0410").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle ControlPointOrientation
        {
            get { return _dicom.FindFirst("300A0412") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ControlPointOrientation_
        {
            get { return _dicom.FindAll("300A0412").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector GeneralAccessorySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0420") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> GeneralAccessorySequence_
        {
            get { return _dicom.FindAll("300A0420").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public ShortString GeneralAccessoryID
        {
            get { return _dicom.FindFirst("300A0421") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> GeneralAccessoryID_
        {
            get { return _dicom.FindAll("300A0421").Select(d => d as ShortString).ToList(); }
        }

        public ShortText GeneralAccessoryDescription
        {
            get { return _dicom.FindFirst("300A0422") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> GeneralAccessoryDescription_
        {
            get { return _dicom.FindAll("300A0422").Select(d => d as ShortText).ToList(); }
        }

        public CodeString GeneralAccessoryType
        {
            get { return _dicom.FindFirst("300A0423") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GeneralAccessoryType_
        {
            get { return _dicom.FindAll("300A0423").Select(d => d as CodeString).ToList(); }
        }

        public IntegerString GeneralAccessoryNumber
        {
            get { return _dicom.FindFirst("300A0424") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> GeneralAccessoryNumber_
        {
            get { return _dicom.FindAll("300A0424").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ApplicatorGeometrySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300A0431") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ApplicatorGeometrySequence_
        {
            get { return _dicom.FindAll("300A0431").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ApplicatorApertureShape
        {
            get { return _dicom.FindFirst("300A0432") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ApplicatorApertureShape_
        {
            get { return _dicom.FindAll("300A0432").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle ApplicatorOpening
        {
            get { return _dicom.FindFirst("300A0433") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ApplicatorOpening_
        {
            get { return _dicom.FindAll("300A0433").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ApplicatorOpeningX
        {
            get { return _dicom.FindFirst("300A0434") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ApplicatorOpeningX_
        {
            get { return _dicom.FindAll("300A0434").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ApplicatorOpeningY
        {
            get { return _dicom.FindFirst("300A0435") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ApplicatorOpeningY_
        {
            get { return _dicom.FindAll("300A0435").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle SourceToApplicatorMountingPositionDistance
        {
            get { return _dicom.FindFirst("300A0436") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SourceToApplicatorMountingPositionDistance_
        {
            get { return _dicom.FindAll("300A0436").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector ReferencedRTPlanSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0002") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedRTPlanSequence_
        {
            get { return _dicom.FindAll("300C0002").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedBeamSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0004") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedBeamSequence_
        {
            get { return _dicom.FindAll("300C0004").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedBeamNumber
        {
            get { return _dicom.FindFirst("300C0006") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedBeamNumber_
        {
            get { return _dicom.FindAll("300C0006").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedReferenceImageNumber
        {
            get { return _dicom.FindFirst("300C0007") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedReferenceImageNumber_
        {
            get { return _dicom.FindAll("300C0007").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString StartCumulativeMetersetWeight
        {
            get { return _dicom.FindFirst("300C0008") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> StartCumulativeMetersetWeight_
        {
            get { return _dicom.FindAll("300C0008").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString EndCumulativeMetersetWeight
        {
            get { return _dicom.FindFirst("300C0009") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> EndCumulativeMetersetWeight_
        {
            get { return _dicom.FindAll("300C0009").Select(d => d as DecimalString).ToList(); }
        }

        public SequenceSelector ReferencedBrachyApplicationSetupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C000A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedBrachyApplicationSetupSequence_
        {
            get { return _dicom.FindAll("300C000A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedBrachyApplicationSetupNumber
        {
            get { return _dicom.FindFirst("300C000C") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedBrachyApplicationSetupNumber_
        {
            get { return _dicom.FindAll("300C000C").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedSourceNumber
        {
            get { return _dicom.FindFirst("300C000E") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedSourceNumber_
        {
            get { return _dicom.FindAll("300C000E").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ReferencedFractionGroupSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0020") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedFractionGroupSequence_
        {
            get { return _dicom.FindAll("300C0020").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedFractionGroupNumber
        {
            get { return _dicom.FindFirst("300C0022") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedFractionGroupNumber_
        {
            get { return _dicom.FindAll("300C0022").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ReferencedVerificationImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0040") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedVerificationImageSequence_
        {
            get { return _dicom.FindAll("300C0040").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedReferenceImageSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0042") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedReferenceImageSequence_
        {
            get { return _dicom.FindAll("300C0042").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedDoseReferenceSequence_
        {
            get { return _dicom.FindAll("300C0050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedDoseReferenceNumber
        {
            get { return _dicom.FindFirst("300C0051") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedDoseReferenceNumber_
        {
            get { return _dicom.FindAll("300C0051").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector BrachyReferencedDoseReferenceSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0055") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BrachyReferencedDoseReferenceSequence_
        {
            get { return _dicom.FindAll("300C0055").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ReferencedStructureSetSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0060") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedStructureSetSequence_
        {
            get { return _dicom.FindAll("300C0060").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedPatientSetupNumber
        {
            get { return _dicom.FindFirst("300C006A") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedPatientSetupNumber_
        {
            get { return _dicom.FindAll("300C006A").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ReferencedDoseSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C0080") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedDoseSequence_
        {
            get { return _dicom.FindAll("300C0080").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedToleranceTableNumber
        {
            get { return _dicom.FindFirst("300C00A0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedToleranceTableNumber_
        {
            get { return _dicom.FindAll("300C00A0").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ReferencedBolusSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C00B0") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedBolusSequence_
        {
            get { return _dicom.FindAll("300C00B0").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedWedgeNumber
        {
            get { return _dicom.FindFirst("300C00C0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedWedgeNumber_
        {
            get { return _dicom.FindAll("300C00C0").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedCompensatorNumber
        {
            get { return _dicom.FindFirst("300C00D0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedCompensatorNumber_
        {
            get { return _dicom.FindAll("300C00D0").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedBlockNumber
        {
            get { return _dicom.FindFirst("300C00E0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedBlockNumber_
        {
            get { return _dicom.FindAll("300C00E0").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedControlPointIndex
        {
            get { return _dicom.FindFirst("300C00F0") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedControlPointIndex_
        {
            get { return _dicom.FindAll("300C00F0").Select(d => d as IntegerString).ToList(); }
        }

        public SequenceSelector ReferencedControlPointSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("300C00F2") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedControlPointSequence_
        {
            get { return _dicom.FindAll("300C00F2").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public IntegerString ReferencedStartControlPointIndex
        {
            get { return _dicom.FindFirst("300C00F4") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedStartControlPointIndex_
        {
            get { return _dicom.FindAll("300C00F4").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedStopControlPointIndex
        {
            get { return _dicom.FindFirst("300C00F6") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedStopControlPointIndex_
        {
            get { return _dicom.FindAll("300C00F6").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedRangeShifterNumber
        {
            get { return _dicom.FindFirst("300C0100") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedRangeShifterNumber_
        {
            get { return _dicom.FindAll("300C0100").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedLateralSpreadingDeviceNumber
        {
            get { return _dicom.FindFirst("300C0102") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedLateralSpreadingDeviceNumber_
        {
            get { return _dicom.FindAll("300C0102").Select(d => d as IntegerString).ToList(); }
        }

        public IntegerString ReferencedRangeModulatorNumber
        {
            get { return _dicom.FindFirst("300C0104") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ReferencedRangeModulatorNumber_
        {
            get { return _dicom.FindAll("300C0104").Select(d => d as IntegerString).ToList(); }
        }

        public CodeString ApprovalStatus
        {
            get { return _dicom.FindFirst("300E0002") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ApprovalStatus_
        {
            get { return _dicom.FindAll("300E0002").Select(d => d as CodeString).ToList(); }
        }

        public Date ReviewDate
        {
            get { return _dicom.FindFirst("300E0004") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> ReviewDate_
        {
            get { return _dicom.FindAll("300E0004").Select(d => d as Date).ToList(); }
        }

        public Time ReviewTime
        {
            get { return _dicom.FindFirst("300E0005") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> ReviewTime_
        {
            get { return _dicom.FindAll("300E0005").Select(d => d as Time).ToList(); }
        }

        public PersonName ReviewerName
        {
            get { return _dicom.FindFirst("300E0008") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> ReviewerName_
        {
            get { return _dicom.FindAll("300E0008").Select(d => d as PersonName).ToList(); }
        }

        public LongText ArbitraryRetired
        {
            get { return _dicom.FindFirst("40000010") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ArbitraryRetired_
        {
            get { return _dicom.FindAll("40000010").Select(d => d as LongText).ToList(); }
        }

        public LongText TextCommentsRetired
        {
            get { return _dicom.FindFirst("40004000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> TextCommentsRetired_
        {
            get { return _dicom.FindAll("40004000").Select(d => d as LongText).ToList(); }
        }

        public ShortString ResultsIDRetired
        {
            get { return _dicom.FindFirst("40080040") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ResultsIDRetired_
        {
            get { return _dicom.FindAll("40080040").Select(d => d as ShortString).ToList(); }
        }

        public LongString ResultsIDIssuerRetired
        {
            get { return _dicom.FindFirst("40080042") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ResultsIDIssuerRetired_
        {
            get { return _dicom.FindAll("40080042").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector ReferencedInterpretationSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("40080050") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ReferencedInterpretationSequenceRetired_
        {
            get { return _dicom.FindAll("40080050").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ReportProductionStatusTrialRetired
        {
            get { return _dicom.FindFirst("400800FF") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ReportProductionStatusTrialRetired_
        {
            get { return _dicom.FindAll("400800FF").Select(d => d as CodeString).ToList(); }
        }

        public Date InterpretationRecordedDateRetired
        {
            get { return _dicom.FindFirst("40080100") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> InterpretationRecordedDateRetired_
        {
            get { return _dicom.FindAll("40080100").Select(d => d as Date).ToList(); }
        }

        public Time InterpretationRecordedTimeRetired
        {
            get { return _dicom.FindFirst("40080101") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> InterpretationRecordedTimeRetired_
        {
            get { return _dicom.FindAll("40080101").Select(d => d as Time).ToList(); }
        }

        public PersonName InterpretationRecorderRetired
        {
            get { return _dicom.FindFirst("40080102") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> InterpretationRecorderRetired_
        {
            get { return _dicom.FindAll("40080102").Select(d => d as PersonName).ToList(); }
        }

        public LongString ReferenceToRecordedSoundRetired
        {
            get { return _dicom.FindFirst("40080103") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ReferenceToRecordedSoundRetired_
        {
            get { return _dicom.FindAll("40080103").Select(d => d as LongString).ToList(); }
        }

        public Date InterpretationTranscriptionDateRetired
        {
            get { return _dicom.FindFirst("40080108") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> InterpretationTranscriptionDateRetired_
        {
            get { return _dicom.FindAll("40080108").Select(d => d as Date).ToList(); }
        }

        public Time InterpretationTranscriptionTimeRetired
        {
            get { return _dicom.FindFirst("40080109") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> InterpretationTranscriptionTimeRetired_
        {
            get { return _dicom.FindAll("40080109").Select(d => d as Time).ToList(); }
        }

        public PersonName InterpretationTranscriberRetired
        {
            get { return _dicom.FindFirst("4008010A") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> InterpretationTranscriberRetired_
        {
            get { return _dicom.FindAll("4008010A").Select(d => d as PersonName).ToList(); }
        }

        public ShortText InterpretationTextRetired
        {
            get { return _dicom.FindFirst("4008010B") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> InterpretationTextRetired_
        {
            get { return _dicom.FindAll("4008010B").Select(d => d as ShortText).ToList(); }
        }

        public PersonName InterpretationAuthorRetired
        {
            get { return _dicom.FindFirst("4008010C") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> InterpretationAuthorRetired_
        {
            get { return _dicom.FindAll("4008010C").Select(d => d as PersonName).ToList(); }
        }

        public SequenceSelector InterpretationApproverSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("40080111") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InterpretationApproverSequenceRetired_
        {
            get { return _dicom.FindAll("40080111").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public Date InterpretationApprovalDateRetired
        {
            get { return _dicom.FindFirst("40080112") as Date; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Date> InterpretationApprovalDateRetired_
        {
            get { return _dicom.FindAll("40080112").Select(d => d as Date).ToList(); }
        }

        public Time InterpretationApprovalTimeRetired
        {
            get { return _dicom.FindFirst("40080113") as Time; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<Time> InterpretationApprovalTimeRetired_
        {
            get { return _dicom.FindAll("40080113").Select(d => d as Time).ToList(); }
        }

        public PersonName PhysicianApprovingInterpretationRetired
        {
            get { return _dicom.FindFirst("40080114") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> PhysicianApprovingInterpretationRetired_
        {
            get { return _dicom.FindAll("40080114").Select(d => d as PersonName).ToList(); }
        }

        public LongText InterpretationDiagnosisDescriptionRetired
        {
            get { return _dicom.FindFirst("40080115") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> InterpretationDiagnosisDescriptionRetired_
        {
            get { return _dicom.FindAll("40080115").Select(d => d as LongText).ToList(); }
        }

        public SequenceSelector InterpretationDiagnosisCodeSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("40080117") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> InterpretationDiagnosisCodeSequenceRetired_
        {
            get { return _dicom.FindAll("40080117").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ResultsDistributionListSequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("40080118") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ResultsDistributionListSequenceRetired_
        {
            get { return _dicom.FindAll("40080118").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public PersonName DistributionNameRetired
        {
            get { return _dicom.FindFirst("40080119") as PersonName; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<PersonName> DistributionNameRetired_
        {
            get { return _dicom.FindAll("40080119").Select(d => d as PersonName).ToList(); }
        }

        public LongString DistributionAddressRetired
        {
            get { return _dicom.FindFirst("4008011A") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> DistributionAddressRetired_
        {
            get { return _dicom.FindAll("4008011A").Select(d => d as LongString).ToList(); }
        }

        public ShortString InterpretationIDRetired
        {
            get { return _dicom.FindFirst("40080200") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> InterpretationIDRetired_
        {
            get { return _dicom.FindAll("40080200").Select(d => d as ShortString).ToList(); }
        }

        public LongString InterpretationIDIssuerRetired
        {
            get { return _dicom.FindFirst("40080202") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> InterpretationIDIssuerRetired_
        {
            get { return _dicom.FindAll("40080202").Select(d => d as LongString).ToList(); }
        }

        public CodeString InterpretationTypeIDRetired
        {
            get { return _dicom.FindFirst("40080210") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InterpretationTypeIDRetired_
        {
            get { return _dicom.FindAll("40080210").Select(d => d as CodeString).ToList(); }
        }

        public CodeString InterpretationStatusIDRetired
        {
            get { return _dicom.FindFirst("40080212") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InterpretationStatusIDRetired_
        {
            get { return _dicom.FindAll("40080212").Select(d => d as CodeString).ToList(); }
        }

        public ShortText ImpressionsRetired
        {
            get { return _dicom.FindFirst("40080300") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ImpressionsRetired_
        {
            get { return _dicom.FindAll("40080300").Select(d => d as ShortText).ToList(); }
        }

        public ShortText ResultsCommentsRetired
        {
            get { return _dicom.FindFirst("40084000") as ShortText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortText> ResultsCommentsRetired_
        {
            get { return _dicom.FindAll("40084000").Select(d => d as ShortText).ToList(); }
        }

        public CodeString LowEnergyDetectors
        {
            get { return _dicom.FindFirst("40100001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> LowEnergyDetectors_
        {
            get { return _dicom.FindAll("40100001").Select(d => d as CodeString).ToList(); }
        }

        public CodeString HighEnergyDetectors
        {
            get { return _dicom.FindFirst("40100002") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> HighEnergyDetectors_
        {
            get { return _dicom.FindAll("40100002").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector DetectorGeometrySequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40100004") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DetectorGeometrySequence_
        {
            get { return _dicom.FindAll("40100004").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ThreatROIVoxelSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40101001") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ThreatROIVoxelSequence_
        {
            get { return _dicom.FindAll("40101001").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public FloatingPointSingle ThreatROIBase
        {
            get { return _dicom.FindFirst("40101004") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ThreatROIBase_
        {
            get { return _dicom.FindAll("40101004").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ThreatROIExtents
        {
            get { return _dicom.FindFirst("40101005") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ThreatROIExtents_
        {
            get { return _dicom.FindAll("40101005").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public OtherByteString ThreatROIBitmap
        {
            get { return _dicom.FindFirst("40101006") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> ThreatROIBitmap_
        {
            get { return _dicom.FindAll("40101006").Select(d => d as OtherByteString).ToList(); }
        }

        public ShortString RouteSegmentID
        {
            get { return _dicom.FindFirst("40101007") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RouteSegmentID_
        {
            get { return _dicom.FindAll("40101007").Select(d => d as ShortString).ToList(); }
        }

        public CodeString GantryType
        {
            get { return _dicom.FindFirst("40101008") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> GantryType_
        {
            get { return _dicom.FindAll("40101008").Select(d => d as CodeString).ToList(); }
        }

        public CodeString OOIOwnerType
        {
            get { return _dicom.FindFirst("40101009") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OOIOwnerType_
        {
            get { return _dicom.FindAll("40101009").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector RouteSegmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("4010100A") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> RouteSegmentSequence_
        {
            get { return _dicom.FindAll("4010100A").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort PotentialThreatObjectID
        {
            get { return _dicom.FindFirst("40101010") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> PotentialThreatObjectID_
        {
            get { return _dicom.FindAll("40101010").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector ThreatSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40101011") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ThreatSequence_
        {
            get { return _dicom.FindAll("40101011").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ThreatCategory
        {
            get { return _dicom.FindFirst("40101012") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ThreatCategory_
        {
            get { return _dicom.FindAll("40101012").Select(d => d as CodeString).ToList(); }
        }

        public LongText ThreatCategoryDescription
        {
            get { return _dicom.FindFirst("40101013") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> ThreatCategoryDescription_
        {
            get { return _dicom.FindAll("40101013").Select(d => d as LongText).ToList(); }
        }

        public CodeString ATDAbilityAssessment
        {
            get { return _dicom.FindFirst("40101014") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ATDAbilityAssessment_
        {
            get { return _dicom.FindAll("40101014").Select(d => d as CodeString).ToList(); }
        }

        public CodeString ATDAssessmentFlag
        {
            get { return _dicom.FindFirst("40101015") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ATDAssessmentFlag_
        {
            get { return _dicom.FindAll("40101015").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle ATDAssessmentProbability
        {
            get { return _dicom.FindFirst("40101016") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ATDAssessmentProbability_
        {
            get { return _dicom.FindAll("40101016").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle Mass
        {
            get { return _dicom.FindFirst("40101017") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> Mass_
        {
            get { return _dicom.FindAll("40101017").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle Density
        {
            get { return _dicom.FindFirst("40101018") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> Density_
        {
            get { return _dicom.FindAll("40101018").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle ZEffective
        {
            get { return _dicom.FindFirst("40101019") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> ZEffective_
        {
            get { return _dicom.FindAll("40101019").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public ShortString BoardingPassID
        {
            get { return _dicom.FindFirst("4010101A") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> BoardingPassID_
        {
            get { return _dicom.FindAll("4010101A").Select(d => d as ShortString).ToList(); }
        }

        public FloatingPointSingle CenterOfMass
        {
            get { return _dicom.FindFirst("4010101B") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CenterOfMass_
        {
            get { return _dicom.FindAll("4010101B").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle CenterOfPTO
        {
            get { return _dicom.FindFirst("4010101C") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> CenterOfPTO_
        {
            get { return _dicom.FindAll("4010101C").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BoundingPolygon
        {
            get { return _dicom.FindFirst("4010101D") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BoundingPolygon_
        {
            get { return _dicom.FindAll("4010101D").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public ShortString RouteSegmentStartLocationID
        {
            get { return _dicom.FindFirst("4010101E") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RouteSegmentStartLocationID_
        {
            get { return _dicom.FindAll("4010101E").Select(d => d as ShortString).ToList(); }
        }

        public ShortString RouteSegmentEndLocationID
        {
            get { return _dicom.FindFirst("4010101F") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RouteSegmentEndLocationID_
        {
            get { return _dicom.FindAll("4010101F").Select(d => d as ShortString).ToList(); }
        }

        public CodeString RouteSegmentLocationIDType
        {
            get { return _dicom.FindFirst("40101020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> RouteSegmentLocationIDType_
        {
            get { return _dicom.FindAll("40101020").Select(d => d as CodeString).ToList(); }
        }

        public CodeString AbortReason
        {
            get { return _dicom.FindFirst("40101021") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AbortReason_
        {
            get { return _dicom.FindAll("40101021").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle VolumeOfPTO
        {
            get { return _dicom.FindFirst("40101023") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> VolumeOfPTO_
        {
            get { return _dicom.FindAll("40101023").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString AbortFlag
        {
            get { return _dicom.FindFirst("40101024") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AbortFlag_
        {
            get { return _dicom.FindAll("40101024").Select(d => d as CodeString).ToList(); }
        }

        public DateTime RouteSegmentStartTime
        {
            get { return _dicom.FindFirst("40101025") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> RouteSegmentStartTime_
        {
            get { return _dicom.FindAll("40101025").Select(d => d as DateTime).ToList(); }
        }

        public DateTime RouteSegmentEndTime
        {
            get { return _dicom.FindFirst("40101026") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> RouteSegmentEndTime_
        {
            get { return _dicom.FindAll("40101026").Select(d => d as DateTime).ToList(); }
        }

        public CodeString TDRType
        {
            get { return _dicom.FindFirst("40101027") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TDRType_
        {
            get { return _dicom.FindAll("40101027").Select(d => d as CodeString).ToList(); }
        }

        public CodeString InternationalRouteSegment
        {
            get { return _dicom.FindFirst("40101028") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InternationalRouteSegment_
        {
            get { return _dicom.FindAll("40101028").Select(d => d as CodeString).ToList(); }
        }

        public LongString ThreatDetectionAlgorithmandVersion
        {
            get { return _dicom.FindFirst("40101029") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ThreatDetectionAlgorithmandVersion_
        {
            get { return _dicom.FindAll("40101029").Select(d => d as LongString).ToList(); }
        }

        public ShortString AssignedLocation
        {
            get { return _dicom.FindFirst("4010102A") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> AssignedLocation_
        {
            get { return _dicom.FindAll("4010102A").Select(d => d as ShortString).ToList(); }
        }

        public DateTime AlarmDecisionTime
        {
            get { return _dicom.FindFirst("4010102B") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> AlarmDecisionTime_
        {
            get { return _dicom.FindAll("4010102B").Select(d => d as DateTime).ToList(); }
        }

        public CodeString AlarmDecision
        {
            get { return _dicom.FindFirst("40101031") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AlarmDecision_
        {
            get { return _dicom.FindAll("40101031").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort NumberOfTotalObjects
        {
            get { return _dicom.FindFirst("40101033") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfTotalObjects_
        {
            get { return _dicom.FindAll("40101033").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfAlarmObjects
        {
            get { return _dicom.FindFirst("40101034") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfAlarmObjects_
        {
            get { return _dicom.FindAll("40101034").Select(d => d as UnsignedShort).ToList(); }
        }

        public SequenceSelector PTORepresentationSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40101037") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PTORepresentationSequence_
        {
            get { return _dicom.FindAll("40101037").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector ATDAssessmentSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40101038") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> ATDAssessmentSequence_
        {
            get { return _dicom.FindAll("40101038").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString TIPType
        {
            get { return _dicom.FindFirst("40101039") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TIPType_
        {
            get { return _dicom.FindAll("40101039").Select(d => d as CodeString).ToList(); }
        }

        public CodeString DICOSVersion
        {
            get { return _dicom.FindFirst("4010103A") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> DICOSVersion_
        {
            get { return _dicom.FindAll("4010103A").Select(d => d as CodeString).ToList(); }
        }

        public DateTime OOIOwnerCreationTime
        {
            get { return _dicom.FindFirst("40101041") as DateTime; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DateTime> OOIOwnerCreationTime_
        {
            get { return _dicom.FindAll("40101041").Select(d => d as DateTime).ToList(); }
        }

        public CodeString OOIType
        {
            get { return _dicom.FindFirst("40101042") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OOIType_
        {
            get { return _dicom.FindAll("40101042").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle OOISize
        {
            get { return _dicom.FindFirst("40101043") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> OOISize_
        {
            get { return _dicom.FindAll("40101043").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public CodeString AcquisitionStatus
        {
            get { return _dicom.FindFirst("40101044") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> AcquisitionStatus_
        {
            get { return _dicom.FindAll("40101044").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector BasisMaterialsCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40101045") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> BasisMaterialsCodeSequence_
        {
            get { return _dicom.FindAll("40101045").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString PhantomType
        {
            get { return _dicom.FindFirst("40101046") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> PhantomType_
        {
            get { return _dicom.FindAll("40101046").Select(d => d as CodeString).ToList(); }
        }

        public SequenceSelector OOIOwnerSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40101047") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> OOIOwnerSequence_
        {
            get { return _dicom.FindAll("40101047").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString ScanType
        {
            get { return _dicom.FindFirst("40101048") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> ScanType_
        {
            get { return _dicom.FindAll("40101048").Select(d => d as CodeString).ToList(); }
        }

        public LongString ItineraryID
        {
            get { return _dicom.FindFirst("40101051") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ItineraryID_
        {
            get { return _dicom.FindAll("40101051").Select(d => d as LongString).ToList(); }
        }

        public ShortString ItineraryIDType
        {
            get { return _dicom.FindFirst("40101052") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> ItineraryIDType_
        {
            get { return _dicom.FindAll("40101052").Select(d => d as ShortString).ToList(); }
        }

        public LongString ItineraryIDAssigningAuthority
        {
            get { return _dicom.FindFirst("40101053") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> ItineraryIDAssigningAuthority_
        {
            get { return _dicom.FindAll("40101053").Select(d => d as LongString).ToList(); }
        }

        public ShortString RouteID
        {
            get { return _dicom.FindFirst("40101054") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RouteID_
        {
            get { return _dicom.FindAll("40101054").Select(d => d as ShortString).ToList(); }
        }

        public ShortString RouteIDAssigningAuthority
        {
            get { return _dicom.FindFirst("40101055") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> RouteIDAssigningAuthority_
        {
            get { return _dicom.FindAll("40101055").Select(d => d as ShortString).ToList(); }
        }

        public CodeString InboundArrivalType
        {
            get { return _dicom.FindFirst("40101056") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> InboundArrivalType_
        {
            get { return _dicom.FindAll("40101056").Select(d => d as CodeString).ToList(); }
        }

        public ShortString CarrierID
        {
            get { return _dicom.FindFirst("40101058") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CarrierID_
        {
            get { return _dicom.FindAll("40101058").Select(d => d as ShortString).ToList(); }
        }

        public CodeString CarrierIDAssigningAuthority
        {
            get { return _dicom.FindFirst("40101059") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CarrierIDAssigningAuthority_
        {
            get { return _dicom.FindAll("40101059").Select(d => d as CodeString).ToList(); }
        }

        public FloatingPointSingle SourceOrientation
        {
            get { return _dicom.FindFirst("40101060") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SourceOrientation_
        {
            get { return _dicom.FindAll("40101060").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle SourcePosition
        {
            get { return _dicom.FindFirst("40101061") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> SourcePosition_
        {
            get { return _dicom.FindAll("40101061").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public FloatingPointSingle BeltHeight
        {
            get { return _dicom.FindFirst("40101062") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> BeltHeight_
        {
            get { return _dicom.FindAll("40101062").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public SequenceSelector AlgorithmRoutingCodeSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("40101064") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> AlgorithmRoutingCodeSequence_
        {
            get { return _dicom.FindAll("40101064").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public CodeString TransportClassification
        {
            get { return _dicom.FindFirst("40101067") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TransportClassification_
        {
            get { return _dicom.FindAll("40101067").Select(d => d as CodeString).ToList(); }
        }

        public LongText OOITypeDescriptor
        {
            get { return _dicom.FindFirst("40101068") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> OOITypeDescriptor_
        {
            get { return _dicom.FindAll("40101068").Select(d => d as LongText).ToList(); }
        }

        public FloatingPointSingle TotalProcessingTime
        {
            get { return _dicom.FindFirst("40101069") as FloatingPointSingle; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<FloatingPointSingle> TotalProcessingTime_
        {
            get { return _dicom.FindAll("40101069").Select(d => d as FloatingPointSingle).ToList(); }
        }

        public OtherByteString DetectorCalibrationData
        {
            get { return _dicom.FindFirst("4010106C") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> DetectorCalibrationData_
        {
            get { return _dicom.FindAll("4010106C").Select(d => d as OtherByteString).ToList(); }
        }

        public SequenceSelector MACParametersSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("4FFE0001") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> MACParametersSequence_
        {
            get { return _dicom.FindAll("4FFE0001").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort CurveDimensionsRetired
        {
            get { return _dicom.FindFirst("50xx0005") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CurveDimensionsRetired_
        {
            get { return _dicom.FindAll("50xx0005").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfPointsRetired
        {
            get { return _dicom.FindFirst("50xx0010") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfPointsRetired_
        {
            get { return _dicom.FindAll("50xx0010").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString TypeOfDataRetired
        {
            get { return _dicom.FindFirst("50xx0020") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> TypeOfDataRetired_
        {
            get { return _dicom.FindAll("50xx0020").Select(d => d as CodeString).ToList(); }
        }

        public LongString CurveDescriptionRetired
        {
            get { return _dicom.FindFirst("50xx0022") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CurveDescriptionRetired_
        {
            get { return _dicom.FindAll("50xx0022").Select(d => d as LongString).ToList(); }
        }

        public ShortString AxisUnitsRetired
        {
            get { return _dicom.FindFirst("50xx0030") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> AxisUnitsRetired_
        {
            get { return _dicom.FindAll("50xx0030").Select(d => d as ShortString).ToList(); }
        }

        public ShortString AxisLabelsRetired
        {
            get { return _dicom.FindFirst("50xx0040") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> AxisLabelsRetired_
        {
            get { return _dicom.FindAll("50xx0040").Select(d => d as ShortString).ToList(); }
        }

        public UnsignedShort DataValueRepresentationRetired
        {
            get { return _dicom.FindFirst("50xx0103") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> DataValueRepresentationRetired_
        {
            get { return _dicom.FindAll("50xx0103").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MinimumCoordinateValueRetired
        {
            get { return _dicom.FindFirst("50xx0104") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MinimumCoordinateValueRetired_
        {
            get { return _dicom.FindAll("50xx0104").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort MaximumCoordinateValueRetired
        {
            get { return _dicom.FindFirst("50xx0105") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> MaximumCoordinateValueRetired_
        {
            get { return _dicom.FindAll("50xx0105").Select(d => d as UnsignedShort).ToList(); }
        }

        public ShortString CurveRangeRetired
        {
            get { return _dicom.FindFirst("50xx0106") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> CurveRangeRetired_
        {
            get { return _dicom.FindAll("50xx0106").Select(d => d as ShortString).ToList(); }
        }

        public UnsignedShort CurveDataDescriptorRetired
        {
            get { return _dicom.FindFirst("50xx0110") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CurveDataDescriptorRetired_
        {
            get { return _dicom.FindAll("50xx0110").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort CoordinateStartValueRetired
        {
            get { return _dicom.FindFirst("50xx0112") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CoordinateStartValueRetired_
        {
            get { return _dicom.FindAll("50xx0112").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort CoordinateStepValueRetired
        {
            get { return _dicom.FindFirst("50xx0114") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CoordinateStepValueRetired_
        {
            get { return _dicom.FindAll("50xx0114").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString CurveActivationLayerRetired
        {
            get { return _dicom.FindFirst("50xx1001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> CurveActivationLayerRetired_
        {
            get { return _dicom.FindAll("50xx1001").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort AudioTypeRetired
        {
            get { return _dicom.FindFirst("50xx2000") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AudioTypeRetired_
        {
            get { return _dicom.FindAll("50xx2000").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort AudioSampleFormatRetired
        {
            get { return _dicom.FindFirst("50xx2002") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> AudioSampleFormatRetired_
        {
            get { return _dicom.FindAll("50xx2002").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort NumberOfChannelsRetired
        {
            get { return _dicom.FindFirst("50xx2004") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> NumberOfChannelsRetired_
        {
            get { return _dicom.FindAll("50xx2004").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedLong NumberOfSamplesRetired
        {
            get { return _dicom.FindFirst("50xx2006") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> NumberOfSamplesRetired_
        {
            get { return _dicom.FindAll("50xx2006").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong SampleRateRetired
        {
            get { return _dicom.FindFirst("50xx2008") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> SampleRateRetired_
        {
            get { return _dicom.FindAll("50xx2008").Select(d => d as UnsignedLong).ToList(); }
        }

        public UnsignedLong TotalTimeRetired
        {
            get { return _dicom.FindFirst("50xx200A") as UnsignedLong; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedLong> TotalTimeRetired_
        {
            get { return _dicom.FindAll("50xx200A").Select(d => d as UnsignedLong).ToList(); }
        }

        public OtherWordString AudioSampleDataRetired
        {
            get { return _dicom.FindFirst("50xx200C") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> AudioSampleDataRetired_
        {
            get { return _dicom.FindAll("50xx200C").Select(d => d as OtherWordString).ToList(); }
        }

        public LongText AudioCommentsRetired
        {
            get { return _dicom.FindFirst("50xx200E") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> AudioCommentsRetired_
        {
            get { return _dicom.FindAll("50xx200E").Select(d => d as LongText).ToList(); }
        }

        public LongString CurveLabelRetired
        {
            get { return _dicom.FindFirst("50xx2500") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> CurveLabelRetired_
        {
            get { return _dicom.FindAll("50xx2500").Select(d => d as LongString).ToList(); }
        }

        public SequenceSelector CurveReferencedOverlaySequenceRetired
        {
            get { return new SequenceSelector(_dicom.FindFirst("50xx2600") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> CurveReferencedOverlaySequenceRetired_
        {
            get { return _dicom.FindAll("50xx2600").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public UnsignedShort CurveReferencedOverlayGroupRetired
        {
            get { return _dicom.FindFirst("50xx2610") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> CurveReferencedOverlayGroupRetired_
        {
            get { return _dicom.FindAll("50xx2610").Select(d => d as UnsignedShort).ToList(); }
        }

        public OtherWordString CurveDataRetired
        {
            get { return _dicom.FindFirst("50xx3000") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> CurveDataRetired_
        {
            get { return _dicom.FindAll("50xx3000").Select(d => d as OtherWordString).ToList(); }
        }

        public SequenceSelector SharedFunctionalGroupsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("52009229") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> SharedFunctionalGroupsSequence_
        {
            get { return _dicom.FindAll("52009229").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector PerFrameFunctionalGroupsSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("52009230") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> PerFrameFunctionalGroupsSequence_
        {
            get { return _dicom.FindAll("52009230").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public SequenceSelector WaveformSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("54000100") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> WaveformSequence_
        {
            get { return _dicom.FindAll("54000100").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherByteString ChannelMinimumValue
        {
            get { return _dicom.FindFirst("54000110") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> ChannelMinimumValue_
        {
            get { return _dicom.FindAll("54000110").Select(d => d as OtherByteString).ToList(); }
        }

        public OtherByteString ChannelMaximumValue
        {
            get { return _dicom.FindFirst("54000112") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> ChannelMaximumValue_
        {
            get { return _dicom.FindAll("54000112").Select(d => d as OtherByteString).ToList(); }
        }

        public UnsignedShort WaveformBitsAllocated
        {
            get { return _dicom.FindFirst("54001004") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> WaveformBitsAllocated_
        {
            get { return _dicom.FindAll("54001004").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString WaveformSampleInterpretation
        {
            get { return _dicom.FindFirst("54001006") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> WaveformSampleInterpretation_
        {
            get { return _dicom.FindAll("54001006").Select(d => d as CodeString).ToList(); }
        }

        public OtherByteString WaveformPaddingValue
        {
            get { return _dicom.FindFirst("5400100A") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> WaveformPaddingValue_
        {
            get { return _dicom.FindAll("5400100A").Select(d => d as OtherByteString).ToList(); }
        }

        public OtherByteString WaveformData
        {
            get { return _dicom.FindFirst("54001010") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> WaveformData_
        {
            get { return _dicom.FindAll("54001010").Select(d => d as OtherByteString).ToList(); }
        }

        public OtherFloatString FirstOrderPhaseCorrectionAngle
        {
            get { return _dicom.FindFirst("56000010") as OtherFloatString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherFloatString> FirstOrderPhaseCorrectionAngle_
        {
            get { return _dicom.FindAll("56000010").Select(d => d as OtherFloatString).ToList(); }
        }

        public OtherFloatString SpectroscopyData
        {
            get { return _dicom.FindFirst("56000020") as OtherFloatString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherFloatString> SpectroscopyData_
        {
            get { return _dicom.FindAll("56000020").Select(d => d as OtherFloatString).ToList(); }
        }

        public UnsignedShort OverlayRows
        {
            get { return _dicom.FindFirst("60xx0010") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayRows_
        {
            get { return _dicom.FindAll("60xx0010").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayColumns
        {
            get { return _dicom.FindFirst("60xx0011") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayColumns_
        {
            get { return _dicom.FindAll("60xx0011").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayPlanesRetired
        {
            get { return _dicom.FindFirst("60xx0012") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayPlanesRetired_
        {
            get { return _dicom.FindAll("60xx0012").Select(d => d as UnsignedShort).ToList(); }
        }

        public IntegerString NumberOfFramesInOverlay
        {
            get { return _dicom.FindFirst("60xx0015") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> NumberOfFramesInOverlay_
        {
            get { return _dicom.FindAll("60xx0015").Select(d => d as IntegerString).ToList(); }
        }

        public LongString OverlayDescription
        {
            get { return _dicom.FindFirst("60xx0022") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OverlayDescription_
        {
            get { return _dicom.FindAll("60xx0022").Select(d => d as LongString).ToList(); }
        }

        public CodeString OverlayType
        {
            get { return _dicom.FindFirst("60xx0040") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayType_
        {
            get { return _dicom.FindAll("60xx0040").Select(d => d as CodeString).ToList(); }
        }

        public LongString OverlaySubtype
        {
            get { return _dicom.FindFirst("60xx0045") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OverlaySubtype_
        {
            get { return _dicom.FindAll("60xx0045").Select(d => d as LongString).ToList(); }
        }

        public SignedShort OverlayOrigin
        {
            get { return _dicom.FindFirst("60xx0050") as SignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<SignedShort> OverlayOrigin_
        {
            get { return _dicom.FindAll("60xx0050").Select(d => d as SignedShort).ToList(); }
        }

        public UnsignedShort ImageFrameOrigin
        {
            get { return _dicom.FindFirst("60xx0051") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> ImageFrameOrigin_
        {
            get { return _dicom.FindAll("60xx0051").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayPlaneOriginRetired
        {
            get { return _dicom.FindFirst("60xx0052") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayPlaneOriginRetired_
        {
            get { return _dicom.FindAll("60xx0052").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString OverlayCompressionCodeRetired
        {
            get { return _dicom.FindFirst("60xx0060") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayCompressionCodeRetired_
        {
            get { return _dicom.FindAll("60xx0060").Select(d => d as CodeString).ToList(); }
        }

        public ShortString OverlayCompressionOriginatorRetired
        {
            get { return _dicom.FindFirst("60xx0061") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> OverlayCompressionOriginatorRetired_
        {
            get { return _dicom.FindAll("60xx0061").Select(d => d as ShortString).ToList(); }
        }

        public ShortString OverlayCompressionLabelRetired
        {
            get { return _dicom.FindFirst("60xx0062") as ShortString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<ShortString> OverlayCompressionLabelRetired_
        {
            get { return _dicom.FindAll("60xx0062").Select(d => d as ShortString).ToList(); }
        }

        public CodeString OverlayCompressionDescriptionRetired
        {
            get { return _dicom.FindFirst("60xx0063") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayCompressionDescriptionRetired_
        {
            get { return _dicom.FindAll("60xx0063").Select(d => d as CodeString).ToList(); }
        }

        public AttributeTag OverlayCompressionStepPointersRetired
        {
            get { return _dicom.FindFirst("60xx0066") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> OverlayCompressionStepPointersRetired_
        {
            get { return _dicom.FindAll("60xx0066").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort OverlayRepeatIntervalRetired
        {
            get { return _dicom.FindFirst("60xx0068") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayRepeatIntervalRetired_
        {
            get { return _dicom.FindAll("60xx0068").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayBitsGroupedRetired
        {
            get { return _dicom.FindFirst("60xx0069") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayBitsGroupedRetired_
        {
            get { return _dicom.FindAll("60xx0069").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayBitsAllocated
        {
            get { return _dicom.FindFirst("60xx0100") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayBitsAllocated_
        {
            get { return _dicom.FindAll("60xx0100").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayBitPosition
        {
            get { return _dicom.FindFirst("60xx0102") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayBitPosition_
        {
            get { return _dicom.FindAll("60xx0102").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString OverlayFormatRetired
        {
            get { return _dicom.FindFirst("60xx0110") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayFormatRetired_
        {
            get { return _dicom.FindAll("60xx0110").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort OverlayLocationRetired
        {
            get { return _dicom.FindFirst("60xx0200") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayLocationRetired_
        {
            get { return _dicom.FindAll("60xx0200").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString OverlayCodeLabelRetired
        {
            get { return _dicom.FindFirst("60xx0800") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayCodeLabelRetired_
        {
            get { return _dicom.FindAll("60xx0800").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort OverlayNumberOfTablesRetired
        {
            get { return _dicom.FindFirst("60xx0802") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayNumberOfTablesRetired_
        {
            get { return _dicom.FindAll("60xx0802").Select(d => d as UnsignedShort).ToList(); }
        }

        public AttributeTag OverlayCodeTableLocationRetired
        {
            get { return _dicom.FindFirst("60xx0803") as AttributeTag; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<AttributeTag> OverlayCodeTableLocationRetired_
        {
            get { return _dicom.FindAll("60xx0803").Select(d => d as AttributeTag).ToList(); }
        }

        public UnsignedShort OverlayBitsForCodeWordRetired
        {
            get { return _dicom.FindFirst("60xx0804") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayBitsForCodeWordRetired_
        {
            get { return _dicom.FindAll("60xx0804").Select(d => d as UnsignedShort).ToList(); }
        }

        public CodeString OverlayActivationLayer
        {
            get { return _dicom.FindFirst("60xx1001") as CodeString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<CodeString> OverlayActivationLayer_
        {
            get { return _dicom.FindAll("60xx1001").Select(d => d as CodeString).ToList(); }
        }

        public UnsignedShort OverlayDescriptorGrayRetired
        {
            get { return _dicom.FindFirst("60xx1100") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayDescriptorGrayRetired_
        {
            get { return _dicom.FindAll("60xx1100").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayDescriptorRedRetired
        {
            get { return _dicom.FindFirst("60xx1101") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayDescriptorRedRetired_
        {
            get { return _dicom.FindAll("60xx1101").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayDescriptorGreenRetired
        {
            get { return _dicom.FindFirst("60xx1102") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayDescriptorGreenRetired_
        {
            get { return _dicom.FindAll("60xx1102").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlayDescriptorBlueRetired
        {
            get { return _dicom.FindFirst("60xx1103") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlayDescriptorBlueRetired_
        {
            get { return _dicom.FindAll("60xx1103").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlaysGrayRetired
        {
            get { return _dicom.FindFirst("60xx1200") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlaysGrayRetired_
        {
            get { return _dicom.FindAll("60xx1200").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlaysRedRetired
        {
            get { return _dicom.FindFirst("60xx1201") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlaysRedRetired_
        {
            get { return _dicom.FindAll("60xx1201").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlaysGreenRetired
        {
            get { return _dicom.FindFirst("60xx1202") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlaysGreenRetired_
        {
            get { return _dicom.FindAll("60xx1202").Select(d => d as UnsignedShort).ToList(); }
        }

        public UnsignedShort OverlaysBlueRetired
        {
            get { return _dicom.FindFirst("60xx1203") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> OverlaysBlueRetired_
        {
            get { return _dicom.FindAll("60xx1203").Select(d => d as UnsignedShort).ToList(); }
        }

        public IntegerString ROIArea
        {
            get { return _dicom.FindFirst("60xx1301") as IntegerString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<IntegerString> ROIArea_
        {
            get { return _dicom.FindAll("60xx1301").Select(d => d as IntegerString).ToList(); }
        }

        public DecimalString ROIMean
        {
            get { return _dicom.FindFirst("60xx1302") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ROIMean_
        {
            get { return _dicom.FindAll("60xx1302").Select(d => d as DecimalString).ToList(); }
        }

        public DecimalString ROIStandardDeviation
        {
            get { return _dicom.FindFirst("60xx1303") as DecimalString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<DecimalString> ROIStandardDeviation_
        {
            get { return _dicom.FindAll("60xx1303").Select(d => d as DecimalString).ToList(); }
        }

        public LongString OverlayLabel
        {
            get { return _dicom.FindFirst("60xx1500") as LongString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongString> OverlayLabel_
        {
            get { return _dicom.FindAll("60xx1500").Select(d => d as LongString).ToList(); }
        }

        public OtherByteString OverlayData
        {
            get { return _dicom.FindFirst("60xx3000") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> OverlayData_
        {
            get { return _dicom.FindAll("60xx3000").Select(d => d as OtherByteString).ToList(); }
        }

        public LongText OverlayCommentsRetired
        {
            get { return _dicom.FindFirst("60xx4000") as LongText; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<LongText> OverlayCommentsRetired_
        {
            get { return _dicom.FindAll("60xx4000").Select(d => d as LongText).ToList(); }
        }

        public OtherWordString PixelData
        {
            get { return _dicom.FindFirst("7FE00010") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> PixelData_
        {
            get { return _dicom.FindAll("7FE00010").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString CoefficientsSDVNRetired
        {
            get { return _dicom.FindFirst("7FE00020") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> CoefficientsSDVNRetired_
        {
            get { return _dicom.FindAll("7FE00020").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString CoefficientsSDHNRetired
        {
            get { return _dicom.FindFirst("7FE00030") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> CoefficientsSDHNRetired_
        {
            get { return _dicom.FindAll("7FE00030").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString CoefficientsSDDNRetired
        {
            get { return _dicom.FindFirst("7FE00040") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> CoefficientsSDDNRetired_
        {
            get { return _dicom.FindAll("7FE00040").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString VariablePixelDataRetired
        {
            get { return _dicom.FindFirst("7Fxx0010") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> VariablePixelDataRetired_
        {
            get { return _dicom.FindAll("7Fxx0010").Select(d => d as OtherWordString).ToList(); }
        }

        public UnsignedShort VariableNextDataGroupRetired
        {
            get { return _dicom.FindFirst("7Fxx0011") as UnsignedShort; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<UnsignedShort> VariableNextDataGroupRetired_
        {
            get { return _dicom.FindAll("7Fxx0011").Select(d => d as UnsignedShort).ToList(); }
        }

        public OtherWordString VariableCoefficientsSDVNRetired
        {
            get { return _dicom.FindFirst("7Fxx0020") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> VariableCoefficientsSDVNRetired_
        {
            get { return _dicom.FindAll("7Fxx0020").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString VariableCoefficientsSDHNRetired
        {
            get { return _dicom.FindFirst("7Fxx0030") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> VariableCoefficientsSDHNRetired_
        {
            get { return _dicom.FindAll("7Fxx0030").Select(d => d as OtherWordString).ToList(); }
        }

        public OtherWordString VariableCoefficientsSDDNRetired
        {
            get { return _dicom.FindFirst("7Fxx0040") as OtherWordString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherWordString> VariableCoefficientsSDDNRetired_
        {
            get { return _dicom.FindAll("7Fxx0040").Select(d => d as OtherWordString).ToList(); }
        }

        public SequenceSelector DigitalSignaturesSequence
        {
            get { return new SequenceSelector(_dicom.FindFirst("FFFAFFFA") as Sequence); }
            set { _dicom.ReplaceOrAdd(value.ToSequence()); }
        }

        public List<SequenceSelector> DigitalSignaturesSequence_
        {
            get { return _dicom.FindAll("FFFAFFFA").Select(s => new SequenceSelector(s as Sequence)).ToList(); }
        }

        public OtherByteString DataSetTrailingPadding
        {
            get { return _dicom.FindFirst("FFFCFFFC") as OtherByteString; }
            set { _dicom.ReplaceOrAdd(value); }
        }

        public List<OtherByteString> DataSetTrailingPadding_
        {
            get { return _dicom.FindAll("FFFCFFFC").Select(d => d as OtherByteString).ToList(); }
        }

        #endregion
    }
}