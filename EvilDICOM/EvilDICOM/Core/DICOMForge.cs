// THIS CODE WAS GENERATED AUTOMATICALLY

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using EvilDICOM.Core.Element;
using EvilDICOM.Core.Enums;

namespace EvilDICOM.Core
{
    public static class DICOMForge
    {
        public static UnsignedLong FileMetaInformationGroupLength(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00020000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString FileMetaInformationVersion(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00020001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier MediaStorageSOPClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00020002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier MediaStorageSOPInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00020003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TransferSyntaxUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00020010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ImplementationClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00020012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ImplementationVersionName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00020013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity SourceApplicationEntityTitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00020016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity SendingApplicationEntityTitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00020017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity ReceivingApplicationEntityTitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00020018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier PrivateInformationCreatorUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00020100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString PrivateInformation(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00020102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FileSetID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00041130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FileSetDescriptorFileID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00041141"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpecificCharacterSetOfFileSetDescriptorFile(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00041142"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00041200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00041202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort FileSetConsistencyFlag(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00041212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DirectoryRecordSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00041220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong OffsetOfTheNextDirectoryRecord(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00041400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RecordInUseFlag(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00041410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong OffsetOfReferencedLowerLevelDirectoryEntity(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00041420"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DirectoryRecordType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00041430"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier PrivateRecordUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00041432"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReferencedFileID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00041500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong MRDRDirectoryRecordOffset(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00041504"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedSOPClassUIDInFile(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00041510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedSOPInstanceUIDInFile(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00041511"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedTransferSyntaxUIDInFile(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00041512"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedRelatedGeneralSOPClassUIDInFile(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0004151A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfReferences(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00041600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong LengthToEnd(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00080001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpecificCharacterSet(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LanguageCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RecognitionCode(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00080010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date InstanceCreationDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00080012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time InstanceCreationTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00080013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier InstanceCreatorUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00080014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime InstanceCoercionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00080015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SOPClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00080016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SOPInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00080018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RelatedGeneralSOPClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0008001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier OriginalSpecializedSOPClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0008001B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date StudyDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00080020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date SeriesDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00080021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date AcquisitionDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00080022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ContentDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00080023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date OverlayDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00080024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date CurveDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00080025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime AcquisitionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0008002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time StudyTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00080030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time SeriesTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00080031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time AcquisitionTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00080032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ContentTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00080033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time OverlayTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00080034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time CurveTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00080035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DataSetType(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00080040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DataSetSubtype(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString NuclearMedicineSeriesType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString AccessionNumber(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00080050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IssuerOfAccessionNumberSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString QueryRetrieveLevel(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString QueryRetrieveView(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity RetrieveAETitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00080054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity StationAETitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00080055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InstanceAvailability(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier FailedSOPInstanceUIDList(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00080058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Modality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModalitiesInStudy(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SOPClassesInStudy(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00080062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicRegionsInStudyCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConversionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PresentationIntentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString Manufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString InstitutionName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText InstitutionAddress(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00080081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InstitutionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName ReferringPhysicianName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00080090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ReferringPhysicianAddress(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00080092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ReferringPhysicianTelephoneNumbers(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00080094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferringPhysicianIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080096"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName ConsultingPhysicianName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("0008009C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConsultingPhysicianIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008009D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CodeValue(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00080100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ExtendedCodeValue(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CodingSchemeDesignator(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00080102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CodingSchemeVersion(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00080103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CodeMeaning(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MappingResource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ContextGroupVersion(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00080106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ContextGroupLocalVersion(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00080107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ExtendedCodeMeaning(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00080108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CodingSchemeResourcesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080109"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CodingSchemeURLType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0008010A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContextGroupExtensionFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0008010B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier CodingSchemeUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0008010C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ContextGroupExtensionCreatorUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0008010D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId CodingSchemeURL(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("0008010E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContextIdentifier(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0008010F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CodingSchemeIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CodingSchemeRegistry(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CodingSchemeExternalID(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00080114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CodingSchemeName(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00080115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CodingSchemeResponsibleOrganization(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00080116"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ContextUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00080117"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier MappingResourceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00080118"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter LongCodeValue(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("00080119"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId URNCodeValue(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("00080120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EquivalentCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MappingResourceName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContextGroupIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080123"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MappingResourceIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TimezoneOffsetFromUTC(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00080201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ResponsibleGroupCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString EquipmentModality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080221"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ManufacturerRelatedModelGroup(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrivateDataElementCharacteristicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PrivateGroupReference(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00080301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PrivateCreatorReference(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00080302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlockIdentifyingInformationStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NonidentifyingPrivateElements(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00080304"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort IdentifyingPrivateElements(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00080306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeidentificationActionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080305"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeidentificationAction(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00080307"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PrivateDataElement(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00080308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong PrivateDataElementValueMultiplicity(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00080309"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PrivateDataElementValueRepresentation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0008030A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong PrivateDataElementNumberOfItems(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0008030B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter PrivateDataElementName(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("0008030C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter PrivateDataElementKeyword(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("0008030D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText PrivateDataElementDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0008030E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText PrivateDataElementEncoding(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0008030F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrivateDataElementDefinitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00080310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity NetworkID(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00081000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString StationName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00081010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString StudyDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00081030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SeriesDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0008103E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SeriesDescriptionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008103F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString InstitutionalDepartmentName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00081040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InstitutionalDepartmentTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName PhysiciansOfRecord(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00081048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PhysiciansOfRecordIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081049"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName PerformingPhysicianName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00081050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformingPhysicianIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName NameOfPhysiciansReadingStudy(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00081060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PhysiciansReadingStudyIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName OperatorsName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00081070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OperatorIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AdmittingDiagnosesDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00081080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AdmittingDiagnosesCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ManufacturerModelName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00081090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedResultsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedStudySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPerformedProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSeriesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPatientSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedVisitSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedOverlaySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedStereometricInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081134"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedWaveformSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008113A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedCurveSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081145"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008114A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedRealWorldValueMappingInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008114B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedSOPClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00081150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedSOPInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00081155"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DefinitionSourceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081156"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SOPClassesSupported(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0008115A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedFrameNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00081160"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SimpleFrameList(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00081161"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong CalculatedFrameList(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00081162"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TimeRange(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00081163"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameExtractionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081164"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier MultiFrameSourceSOPInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00081167"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId RetrieveURL(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("00081190"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TransactionUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00081195"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort WarningReason(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00081196"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort FailureReason(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00081197"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FailedSOPSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081198"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSOPSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081199"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OtherFailuresSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008119A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StudiesContainingOtherReferencedInstancesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelatedSeriesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00081250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LossyImageCompressionRetired(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00082110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText DerivationDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00082111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString StageName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00082120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString StageNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00082122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfStages(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00082124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ViewName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00082127"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ViewNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00082128"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfEventTimers(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00082129"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfViewsInStage(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("0008212A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EventElapsedTimes(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00082130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString EventTimerNames(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00082132"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EventTimerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082133"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble EventTimeOffset(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00082134"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EventCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082135"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString StartTrim(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00082142"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString StopTrim(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00082143"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RecommendedDisplayFrameRate(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00082144"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TransducerPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00082200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TransducerOrientation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00082204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnatomicStructure(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00082208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicRegionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082218"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicRegionModifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrimaryAnatomicStructureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082228"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicStructureSpaceOrRegionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082229"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrimaryAnatomicStructureModifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerPositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082240"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerPositionModifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerOrientationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerOrientationModifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082246"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicStructureSpaceOrRegionCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicPortalOfEntranceCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082253"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicApproachDirectionCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082255"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText AnatomicPerspectiveDescriptionTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00082256"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicPerspectiveCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082257"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText AnatomicLocationOfExaminingInstrumentDescriptionTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00082258"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicLocationOfExaminingInstrumentCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00082259"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008225A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OnAxisBackgroundAnatomicStructureCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0008225C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AlternateRepresentationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00083001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier IrradiationEventUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00083010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceIrradiationEventSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00083011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RadiopharmaceuticalAdministrationEventUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00083012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText IdentifyingComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00084000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FrameType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00089007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedImageEvidenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedRawDataSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier CreatorVersionUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00089123"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DerivationImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceImageEvidenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089154"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PixelPresentation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00089205"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VolumetricProperties(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00089206"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VolumeBasedCalculationTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00089207"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ComplexImageComponent(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00089208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionContrast(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00089209"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DerivationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089215"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPresentationStateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089237"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedOtherPlaneSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameDisplaySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00089458"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RecommendedDisplayFrameRateInFloat(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00089459"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SkipFrameRangeFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00089460"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName PatientName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00100010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString IssuerOfPatientID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TypeOfPatientID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00100022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IssuerOfPatientIDQualifiersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourcePatientGroupIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GroupOfPatientsIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SubjectRelativePositionInImage(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00100028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date PatientBirthDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00100030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time PatientBirthTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00100032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientBirthDateInAlternativeCalendar(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientDeathDateInAlternativeCalendar(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientAlternativeCalendar(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00100035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientSex(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00100040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientInsurancePlanCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientPrimaryLanguageCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientPrimaryLanguageModifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString QualityControlSubject(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00100200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence QualityControlSubjectTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter StrainDescription(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("00100212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString StrainNomenclature(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100213"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString StrainStockNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100214"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StrainSourceRegistryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100215"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StrainStockSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100216"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString StrainSource(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100217"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText StrainAdditionalInformation(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00100218"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StrainCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100219"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GeneticModificationsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100221"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter GeneticModificationsDescription(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("00100222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString GeneticModificationsNomenclature(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00100223"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GeneticModificationsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00100229"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OtherPatientIDs(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00101000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName OtherPatientNames(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00101001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OtherPatientIDsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00101002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName PatientBirthName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00101005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AgeString PatientAge(params String[] data)
        {
            var element = (new AgeString());
            element.Tag = (new Tag("00101010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PatientSize(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00101020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientSizeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00101021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PatientBodyMassIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00101022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MeasuredAPDimension(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00101023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MeasuredLateralDimension(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00101024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PatientWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00101030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientAddress(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00101040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString InsurancePlanIdentification(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00101050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName PatientMotherBirthName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00101060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MilitaryRank(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00101080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString BranchOfService(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00101081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MedicalRecordLocator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00101090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPatientPhotoSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00101100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MedicalAlerts(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString Allergies(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CountryOfResidence(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RegionOfResidence(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102152"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PatientTelephoneNumbers(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00102154"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText PatientTelecomInformation(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00102155"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString EthnicGroup(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00102160"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString Occupation(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00102180"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SmokingStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("001021A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText AdditionalPatientHistory(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("001021B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PregnancyStatus(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("001021C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date LastMenstrualDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("001021D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientReligiousPreference(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("001021F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientSpeciesDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientSpeciesCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00102202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientSexNeutered(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00102203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnatomicalOrientationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00102210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientBreedDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102292"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientBreedCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00102293"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BreedRegistrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00102294"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString BreedRegistrationNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102295"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BreedRegistryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00102296"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName ResponsiblePerson(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00102297"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ResponsiblePersonRole(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00102298"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ResponsibleOrganization(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00102299"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText PatientComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00104000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ExaminedBodyThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00109431"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialSponsorName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialProtocolID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialProtocolName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialSiteID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialSiteName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialSubjectID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialSubjectReadingID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialTimePointID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ClinicalTrialTimePointDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00120051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble LongitudinalTemporalOffsetFromEvent(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00120052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LongitudinalTemporalEventType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00120053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialCoordinatingCenterName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientIdentityRemoved(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00120062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DeidentificationMethod(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeidentificationMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00120064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialSeriesID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialSeriesDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialProtocolEthicsCommitteeName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ClinicalTrialProtocolEthicsCommitteeApprovalNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00120082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConsentForClinicalTrialUseSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00120083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DistributionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00120084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConsentForDistributionFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00120085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date EthicsCommitteeApprovalEffectivenessStartDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00120086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date EthicsCommitteeApprovalEffectivenessEndDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00120087"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CADFileFormat(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ComponentReferenceSystem(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ComponentManufacturingProcedure(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ComponentManufacturer(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MaterialThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00140030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MaterialPipeDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00140032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MaterialIsolationDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00140034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText MaterialGrade(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText MaterialPropertiesDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText MaterialPropertiesFileFormatRetired(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText MaterialNotes(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00140046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ComponentShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00140050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CurvatureType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00140052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString OuterDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00140054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString InnerDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00140056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ComponentWelderIDs(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00140100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SecondaryApprovalStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00140101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date SecondaryReviewDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00140102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time SecondaryReviewTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00140103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName SecondaryReviewerName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00140104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText RepairID(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00140105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultipleComponentApprovalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00140106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OtherApprovalStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00140107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OtherSecondaryApprovalStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00140108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ActualEnvironmentalConditions(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00141010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ExpiryDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00141020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText EnvironmentalConditions(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00141040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EvaluatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00142002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString EvaluatorNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00142004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName EvaluatorName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00142006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString EvaluationAttempt(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00142008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IndicationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00142012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString IndicationNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00142014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString IndicationLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00142016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText IndicationDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00142018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IndicationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0014201A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IndicationDisposition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0014201C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IndicationROISequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0014201E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IndicationPhysicalPropertySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00142030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PropertyLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00142032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CoordinateSystemNumberOfAxes(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00142202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CoordinateSystemAxesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00142204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CoordinateSystemAxisDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00142206"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CoordinateSystemDataSetMapping(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00142208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CoordinateSystemAxisNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("0014220A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CoordinateSystemAxisType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0014220C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CoordinateSystemAxisUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0014220E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString CoordinateSystemAxisValues(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00142210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CoordinateSystemTransformSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00142220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText TransformDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00142222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TransformNumberOfAxes(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00142224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TransformOrderOfAxes(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00142226"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TransformedAxisUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00142228"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CoordinateSystemTransformRotationAndScaleMatrix(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014222A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CoordinateSystemTransformTranslationMatrix(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014222C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString InternalDetectorFrameTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NumberOfFramesIntegrated(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DetectorTemperatureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00143020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SensorName(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00143022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString HorizontalOffsetOfSensor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString VerticalOffsetOfSensor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SensorTemperature(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DarkCurrentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00143040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString DarkCurrentCounts(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00143050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GainCorrectionReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00143060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString AirCounts(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00143070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString KVUsedInGainCalibration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MAUsedInGainCalibration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NumberOfFramesUsedForIntegration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FilterMaterialUsedInGainCalibration(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00143074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FilterThicknessUsedInGainCalibration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00143075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date DateOfGainCalibration(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00143076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time TimeOfGainCalibration(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00143077"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString BadPixelImage(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00143080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText CalibrationNotes(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00143099"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PulserEquipmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PulserType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00144004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText PulserNotes(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00144006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReceiverEquipmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AmplifierType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0014400A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ReceiverNotes(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("0014400C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PreAmplifierEquipmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0014400E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText PreAmplifierNotes(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("0014400F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransmitTransducerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReceiveTransducerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfElements(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00144012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ElementShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00144013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ElementDimensionA(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ElementDimensionB(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ElementPitchA(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MeasuredBeamDimensionA(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MeasuredBeamDimensionB(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString LocationOfMeasuredBeamDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NominalFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014401A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MeasuredCenterFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014401B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MeasuredBandwidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014401C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ElementPitchB(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014401D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PulserSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PulseWidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ExcitationFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModulationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00144026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString Damping(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReceiverSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString AcquiredSoundpathLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionCompressionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00144032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AcquisitionSampleSize(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00144033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RectifierSmoothing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DACSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DACType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00144036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DACGainPoints(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DACTimePoints(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014403A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DACAmplitude(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014403C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PreAmplifierSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransmitTransducerSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReceiveTransducerSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString IncidentAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CouplingTechnique(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00144054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CouplingMedium(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00144056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CouplingVelocity(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144057"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ProbeCenterLocationX(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ProbeCenterLocationZ(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144059"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SoundPathLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014405A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText DelayLawIdentifier(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0014405C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GateSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GateThreshold(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString VelocityOfSound(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CalibrationSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CalibrationProcedure(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00144072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ProcedureVersion(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00144074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ProcedureCreationDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00144076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ProcedureExpirationDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00144078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ProcedureLastModifiedDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0014407A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time CalibrationTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0014407C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date CalibrationDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0014407E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProbeDriveEquipmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DriveType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00144081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ProbeDriveNotes(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00144082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DriveProbeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ProbeInductance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ProbeResistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReceiveProbeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProbeDriveSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144087"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BridgeResistors(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ProbeOrientationAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144089"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString UserSelectedGainY(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014408B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString UserSelectedPhase(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014408C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString UserSelectedOffsetX(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014408D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString UserSelectedOffsetY(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014408E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00144091"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelThreshold(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00144092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScannerSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0014409A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ScanProcedure(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0014409B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TranslationRateX(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014409C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TranslationRateY(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014409D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelOverlap(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014409F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImageQualityIndicatorType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("001440A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImageQualityIndicatorMaterial(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("001440A1"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImageQualityIndicatorSize(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("001440A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString LINACEnergy(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00145002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString LINACOutput(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00145004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ActiveAperture(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00145100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TotalAperture(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ApertureElevation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MainLobeAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MainRoofAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConnectorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00145105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString WedgeModelNumber(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00145106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeAngleFloat(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeRoofAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WedgeElement1Position(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00145109"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeMaterialVelocity(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014510A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString WedgeMaterial(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("0014510B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeOffsetZ(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014510C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeOriginOffsetX(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014510D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeTimeDelay(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014510E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString WedgeName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("0014510F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString WedgeManufacturerName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00145110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString WedgeDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00145111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NominalBeamAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeOffsetX(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145113"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeOffsetY(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeTotalLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeInContactLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145116"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeFrontGap(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145117"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeTotalHeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145118"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeFrontHeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00145119"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeRearHeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014511A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeTotalWidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014511B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeInContactWidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014511C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeChamferHeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014511D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WedgeCurve(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0014511E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadiusAlongWedge(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0014511F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContrastBolusAgent(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00180010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContrastBolusAgentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00180012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ContrastBolusT1Relaxivity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00180013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContrastBolusAdministrationRouteSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00180014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BodyPartExamined(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScanningSequence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SequenceVariant(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScanOptions(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MRAcquisitionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString SequenceName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00180024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AngioFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InterventionDrugInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00180026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time InterventionDrugStopTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00180027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString InterventionDrugDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InterventionDrugCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00180029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AdditionalDrugSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString Radionuclide(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00180030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString Radiopharmaceutical(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00180031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EnergyWindowCenterline(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EnergyWindowTotalWidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString InterventionDrugName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00180034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time InterventionDrugStartTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00180035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InterventionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00180036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TherapyType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InterventionStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TherapyDescription(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText InterventionDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0018003A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CineRate(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00180040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InitialCineRunState(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SliceThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString KVP(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CountsAccumulated(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00180070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionTerminationCondition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EffectiveDuration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionStartCondition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00180073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AcquisitionStartConditionData(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00180074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AcquisitionTerminationConditionData(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00180075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RepetitionTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EchoTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString InversionTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NumberOfAverages(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImagingFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ImagedNucleus(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00180085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString EchoNumbers(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00180086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MagneticFieldStrength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180087"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpacingBetweenSlices(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfPhaseEncodingSteps(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00180089"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DataCollectionDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString EchoTrainLength(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00180091"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PercentSampling(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180093"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PercentPhaseFieldOfView(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PixelBandwidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00180095"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DeviceSerialNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier DeviceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00181002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DeviceID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PlateID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString GeneratorID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString GridID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CassetteID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString GantryID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText UniqueDeviceIdentifier(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00181009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UDISequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018100A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SecondaryCaptureDeviceID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HardcopyCreationDeviceID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date DateOfSecondaryCapture(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00181012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time TimeOfSecondaryCapture(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00181014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SecondaryCaptureDeviceManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HardcopyDeviceManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SecondaryCaptureDeviceManufacturerModelName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SecondaryCaptureDeviceSoftwareVersions(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HardcopyDeviceSoftwareVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0018101A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HardcopyDeviceManufacturerModelName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0018101B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SoftwareVersions(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString VideoImageFormatAcquired(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DigitalImageFormatAcquired(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ProtocolName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContrastBolusRoute(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContrastBolusVolume(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ContrastBolusStartTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00181042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ContrastBolusStopTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00181043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContrastBolusTotalDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SyringeCounts(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContrastFlowRate(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContrastFlowDuration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181047"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContrastBolusIngredient(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContrastBolusIngredientConcentration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181049"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpatialResolution(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TriggerTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TriggerSourceOrType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NominalInterval(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FrameTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CardiacFramingType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FrameTimeVector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FrameDelay(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageTriggerDelay(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MultiplexGroupTimeOffset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TriggerTimeOffset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SynchronizationTrigger(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0018106A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SynchronizationChannel(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0018106C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TriggerSamplePosition(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018106E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RadiopharmaceuticalRoute(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadiopharmaceuticalVolume(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time RadiopharmaceuticalStartTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00181072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time RadiopharmaceuticalStopTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00181073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadionuclideTotalDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadionuclideHalfLife(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadionuclidePositronFraction(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadiopharmaceuticalSpecificActivity(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181077"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime RadiopharmaceuticalStartDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00181078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime RadiopharmaceuticalStopDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00181079"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BeatRejectionFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString LowRRValue(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString HighRRValue(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString IntervalsAcquired(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString IntervalsRejected(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PVCRejection(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SkipBeats(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString HeartRate(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CardiacNumberOfImages(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TriggerWindow(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ReconstructionDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DistanceSourceToDetector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DistanceSourceToPatient(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EstimatedRadiographicMagnificationFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GantryDetectorTilt(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GantryDetectorSlew(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableHeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTraverse(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181131"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TableMotion(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181134"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableVerticalIncrement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181135"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableLateralIncrement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181136"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableLongitudinalIncrement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181137"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181138"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TableType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0018113A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString AngularPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181141"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadialPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181142"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ScanArc(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181143"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString AngularStep(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181144"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CenterOfRotationOffset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181145"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RotationOffset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181146"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FieldOfViewShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181147"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString FieldOfViewDimensions(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181149"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ExposureTime(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString XRayTubeCurrent(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181151"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString Exposure(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181152"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ExposureInuAs(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181153"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString AveragePulseWidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181154"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RadiationSetting(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181155"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RectificationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181156"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RadiationMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0018115A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageAndFluoroscopyAreaDoseProduct(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0018115E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FilterType(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181160"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TypeOfFilters(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181161"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString IntensifierSize(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181162"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImagerPixelSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181164"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Grid(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181166"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString GeneratorPower(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181170"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CollimatorGridName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181180"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CollimatorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181181"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString FocalDistance(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181182"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString XFocusCenter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181183"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString YFocusCenter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181184"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FocalSpots(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181190"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnodeTargetMaterial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181191"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BodyPartThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("001811A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CompressionForce(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("001811A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CompressionPressure(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("001811A3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PaddleDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("001811A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CompressionContactArea(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("001811A5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date DateOfLastCalibration(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00181200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time TimeOfLastCalibration(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00181201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime DateTimeOfLastCalibration(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00181202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ConvolutionKernel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString UpperLowerPixelValues(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181240"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ActualFrameDuration(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CountRate(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181243"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PreferredPlaybackSequencing(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00181244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ReceiveCoilName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TransmitCoilName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PlateType(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181260"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PhosphorType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181261"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble WaterEquivalentDiameter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00181271"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WaterEquivalentDiameterCalculationMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00181272"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ScanVelocity(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WholeBodyTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ScanLength(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AcquisitionMatrix(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00181310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InPlanePhaseEncodingDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181312"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FlipAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181314"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VariableFlipAngleFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181315"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SAR(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181316"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString dBdt(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181318"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle B1rms(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00181320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AcquisitionDeviceProcessingDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AcquisitionDeviceProcessingCode(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CassetteOrientation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CassetteSize(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ExposuresOnPlate(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00181404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RelativeXRayExposure(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181405"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ExposureIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181411"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TargetExposureIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181412"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeviationIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181413"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ColumnAngulation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181450"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TomoLayerHeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181460"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TomoAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181470"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TomoTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181480"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TomoType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181490"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TomoClass(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181491"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfTomosynthesisSourceImages(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181495"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PositionerMotion(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PositionerType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181508"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PositionerPrimaryAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PositionerSecondaryAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181511"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PositionerPrimaryAngleIncrement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181520"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PositionerSecondaryAngleIncrement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181521"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorPrimaryAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181530"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorSecondaryAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00181531"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShutterShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ShutterLeftVerticalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181602"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ShutterRightVerticalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181604"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ShutterUpperHorizontalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181606"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ShutterLowerHorizontalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181608"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CenterOfCircularShutter(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181610"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RadiusOfCircularShutter(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181612"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString VerticesOfThePolygonalShutter(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181620"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ShutterPresentationValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00181622"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ShutterOverlayGroup(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00181623"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ShutterPresentationColorCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00181624"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CollimatorShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181700"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CollimatorLeftVerticalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181702"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CollimatorRightVerticalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181704"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CollimatorUpperHorizontalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181706"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CollimatorLowerHorizontalEdge(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181708"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CenterOfCircularCollimator(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181710"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RadiusOfCircularCollimator(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181712"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString VerticesOfThePolygonalCollimator(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00181720"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionTimeSynchronized(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181800"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TimeSource(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00181801"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TimeDistributionProtocol(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00181802"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString NTPSourceAddress(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00181803"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PageNumberVector(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00182001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FrameLabelVector(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00182002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FramePrimaryAngleVector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00182003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FrameSecondaryAngleVector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00182004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SliceLocationVector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00182005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString DisplayWindowLabelVector(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00182006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NominalScannedPixelSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00182010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DigitizingDeviceTransportDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00182020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RotationOfScannedFilm(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00182030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BiopsyTargetSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00182041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TargetUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00182042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle LocalizingCursorPosition(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00182043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CalculatedTargetPosition(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00182044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TargetLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00182045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DisplayedZValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00182046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IVUSAcquisition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00183100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString IVUSPullbackRate(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00183101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString IVUSGatedRate(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00183102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString IVUSPullbackStartFrameNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00183103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString IVUSPullbackStopFrameNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00183104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString LesionNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00183105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText AcquisitionComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00184000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString OutputPower(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00185000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TransducerData(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00185010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FocusDepth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ProcessingFunction(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00185020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PostprocessingFunction(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00185021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MechanicalIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BoneThermalIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CranialThermalIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SoftTissueThermalIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SoftTissueFocusThermalIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SoftTissueSurfaceThermalIndex(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DynamicRange(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TotalGain(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString DepthOfScanField(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00185050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00185100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ViewPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00185101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProjectionEponymousNameCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00185104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageTransformationMatrix(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageTranslationVector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00185212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString Sensitivity(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00186000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SequenceOfUltrasoundRegions(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00186011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RegionSpatialFormat(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00186012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RegionDataType(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00186014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong RegionFlags(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong RegionLocationMinX0(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong RegionLocationMinY0(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018601A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong RegionLocationMaxX1(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018601C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong RegionLocationMaxY1(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018601E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong ReferencePixelX0(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("00186020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong ReferencePixelY0(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("00186022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PhysicalUnitsXDirection(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00186024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PhysicalUnitsYDirection(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00186026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReferencePixelPhysicalValueX(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00186028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReferencePixelPhysicalValueY(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0018602A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble PhysicalDeltaX(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0018602C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble PhysicalDeltaY(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0018602E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TransducerFrequency(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TransducerType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00186031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong PulseRepetitionFrequency(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DopplerCorrectionAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00186034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SteeringAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00186036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong DopplerSampleVolumeXPositionRetired(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong DopplerSampleVolumeXPosition(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("00186039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong DopplerSampleVolumeYPositionRetired(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018603A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong DopplerSampleVolumeYPosition(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0018603B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TMLinePositionX0Retired(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018603C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong TMLinePositionX0(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0018603D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TMLinePositionY0Retired(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018603E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong TMLinePositionY0(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0018603F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TMLinePositionX1Retired(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong TMLinePositionX1(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("00186041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TMLinePositionY1Retired(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong TMLinePositionY1(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("00186043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PixelComponentOrganization(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00186044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong PixelComponentMask(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong PixelComponentRangeStart(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong PixelComponentRangeStop(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018604A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PixelComponentPhysicalUnits(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0018604C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PixelComponentDataType(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0018604E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfTableBreakPoints(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TableOfXBreakPoints(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableOfYBreakPoints(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00186054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfTableEntries(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TableOfPixelValues(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00186058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableOfParameterValues(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0018605A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RWaveTimeVector(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00186060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DetectorConditionsNominalFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorTemperature(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DetectorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DetectorConfiguration(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText DetectorDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00187006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText DetectorMode(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00187008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString DetectorID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("0018700A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date DateOfLastDetectorCalibration(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0018700C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time TimeOfLastDetectorCalibration(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0018700E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ExposuresOnDetectorSinceLastCalibration(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00187010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ExposuresOnDetectorSinceManufactured(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00187011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorTimeSinceLastExposure(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorActiveTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorActivationOffsetFromExposure(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorBinning(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0018701A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorElementPhysicalSize(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorElementSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DetectorActiveShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorActiveDimensions(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorActiveOrigin(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DetectorManufacturerName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0018702A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DetectorManufacturerModelName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0018702B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FieldOfViewOrigin(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FieldOfViewRotation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FieldOfViewHorizontalFlip(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PixelDataAreaOriginRelativeToFOV(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00187036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PixelDataAreaRotationAngleRelativeToFOV(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00187038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText GridAbsorbingMaterial(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00187040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText GridSpacingMaterial(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00187041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GridThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GridPitch(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString GridAspectRatio(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00187046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GridPeriod(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GridFocalDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0018704C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FilterMaterial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FilterThicknessMinimum(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FilterThicknessMaximum(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FilterBeamPathLengthMinimum(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00187056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FilterBeamPathLengthMaximum(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00187058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExposureControlMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ExposureControlModeDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00187062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExposureStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00187064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PhototimerSetting(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00187065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ExposureTimeInuS(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00188150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString XRayTubeCurrentInuA(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00188151"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContentQualification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PulseSequenceName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00189005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRImagingModifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString EchoPulseSequence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InversionRecovery(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FlowCompensation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultipleSpinEcho(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultiPlanarExcitation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PhaseContrast(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TimeOfFlightContrast(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Spoiling(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SteadyStatePulseSequence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString EchoPlanarPulseSequence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TagAngleFirstAxis(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MagnetizationTransfer(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString T2Preparation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BloodSignalNulling(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SaturationRecovery(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpectrallySelectedSuppression(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpectrallySelectedExcitation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpatialPresaturation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Tagging(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OversamplingPhase(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TagSpacingFirstDimension(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeometryOfKSpaceTraversal(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SegmentedKSpaceTraversal(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RectilinearPhaseEncodeReordering(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TagThickness(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PartialFourierDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CardiacSynchronizationTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReceiveCoilManufacturerName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRReceiveCoilSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReceiveCoilType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString QuadratureReceiveCoil(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultiCoilDefinitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MultiCoilConfiguration(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString MultiCoilElementName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00189047"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultiCoilElementUsed(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRTransmitCoilSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189049"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TransmitCoilManufacturerName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TransmitCoilType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SpectralWidth(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ChemicalShiftReference(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VolumeLocalizationTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MRAcquisitionFrequencyEncodingSteps(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Decoupling(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189059"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DecoupledNucleus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DecouplingFrequency(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DecouplingMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DecouplingChemicalShiftReference(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString KSpaceFiltering(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TimeDomainFiltering(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfZeroFills(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BaselineCorrection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ParallelReductionFactorInPlane(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble CardiacRRIntervalSpecified(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AcquisitionDuration(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime FrameAcquisitionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DiffusionDirectionality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DiffusionGradientDirectionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ParallelAcquisition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189077"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ParallelAcquisitionTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble InversionTimes(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189079"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText MetaboliteMapDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00189080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PartialFourier(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble EffectiveEchoTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MetaboliteMapCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChemicalShiftSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CardiacSignalSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionBValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189087"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionGradientOrientation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189089"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble VelocityEncodingDirection(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble VelocityEncodingMinimumValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189091"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VelocityEncodingAcquisitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfKSpaceTrajectories(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189093"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CoverageOfKSpace(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SpectroscopyAcquisitionPhaseRows(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00189095"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ParallelReductionFactorInPlaneRetired(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189096"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TransmitterFrequency(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189098"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ResonantNucleus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FrequencyCorrection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRSpectroscopyFOVGeometrySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SlabThickness(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SlabOrientation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MidSlabPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRSpatialSaturationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRTimingAndRelatedParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MREchoSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRModifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRDiffusionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189117"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CardiacSynchronizationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189118"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRAveragesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189119"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRFOVGeometrySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VolumeLocalizationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189126"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SpectroscopyAcquisitionDataColumns(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00189127"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DiffusionAnisotropyType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189147"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime FrameReferenceDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189151"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRMetaboliteMapSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189152"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ParallelReductionFactorOutOfPlane(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189155"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SpectroscopyAcquisitionOutOfPlanePhaseSteps(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00189159"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BulkMotionStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189166"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ParallelReductionFactorSecondInPlane(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189168"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CardiacBeatRejectionTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189169"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RespiratoryMotionCompensationTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189170"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RespiratorySignalSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189171"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BulkMotionCompensationTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189172"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BulkMotionSignalSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189173"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ApplicableSafetyStandardAgency(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189174"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ApplicableSafetyStandardDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189175"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OperatingModeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189176"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OperatingModeType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189177"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OperatingMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189178"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpecificAbsorptionRateDefinition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189179"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GradientOutputType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189180"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SpecificAbsorptionRateValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189181"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble GradientOutput(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189182"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FlowCompensationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189183"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TaggingDelay(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189184"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText RespiratoryMotionCompensationTechniqueDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00189185"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RespiratorySignalSourceID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00189186"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ChemicalShiftMinimumIntegrationLimitInHz(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189195"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ChemicalShiftMaximumIntegrationLimitInHz(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189196"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRVelocityEncodingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189197"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FirstOrderPhaseCorrection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189198"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WaterReferencedPhaseCorrection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189199"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MRSpectroscopyAcquisitionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RespiratoryCyclePosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189214"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble VelocityEncodingMaximumValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189217"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TagSpacingSecondDimension(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189218"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort TagAngleSecondAxis(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189219"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble FrameAcquisitionDuration(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRImageFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189226"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRSpectroscopyFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189227"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MRAcquisitionPhaseEncodingStepsInPlane(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189231"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MRAcquisitionPhaseEncodingStepsOutOfPlane(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189232"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SpectroscopyAcquisitionPhaseColumns(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00189234"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CardiacCyclePosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189236"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecificAbsorptionRateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189239"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RFEchoTrainLength(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189240"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GradientEchoTrainLength(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189241"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ArterialSpinLabelingContrast(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MRArterialSpinLabelingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ASLTechniqueDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189252"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ASLSlabNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189253"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ASLSlabThickness(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189254"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ASLSlabOrientation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189255"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ASLMidSlabPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189256"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ASLContext(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189257"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong ASLPulseTrainDuration(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00189258"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ASLCrusherFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189259"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ASLCrusherFlowLimit(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0018925A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ASLCrusherDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0018925B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ASLBolusCutoffFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0018925C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ASLBolusCutoffTimingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018925D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ASLBolusCutoffTechnique(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0018925E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong ASLBolusCutoffDelayTime(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0018925F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ASLSlabSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189260"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ChemicalShiftMinimumIntegrationLimitInppm(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189295"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ChemicalShiftMaximumIntegrationLimitInppm(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189296"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WaterReferenceAcquisition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189297"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString EchoPeakPosition(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00189298"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTAcquisitionTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TubeAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTAcquisitionDetailsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189304"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RevolutionTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189305"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SingleCollimationWidth(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TotalCollimationWidth(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189307"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTTableDynamicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableSpeed(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189309"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableFeedPerRotation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SpiralPitchFactor(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189311"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTGeometrySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189312"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DataCollectionCenterPatient(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189313"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTReconstructionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189314"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReconstructionAlgorithm(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189315"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConvolutionKernelGroup(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189316"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReconstructionFieldOfView(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189317"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReconstructionTargetCenterPatient(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189318"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReconstructionAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189319"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ImageFilter(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00189320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTExposureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189321"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReconstructionPixelSpacing(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189322"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExposureModulationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189323"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble EstimatedDoseSaving(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189324"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTXRayDetailsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189325"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTPositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189326"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TablePosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189327"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ExposureTimeInms(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189328"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTImageFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189329"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble XRayTubeCurrentInmA(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189330"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ExposureInmAs(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189332"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConstantVolumeFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189333"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FluoroscopyFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189334"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DistanceSourceToDataCollectionCenter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189335"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ContrastBolusAgentNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189337"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContrastBolusIngredientCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189338"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContrastAdministrationProfileSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189340"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContrastBolusUsageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189341"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContrastBolusAgentAdministered(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189342"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContrastBolusAgentDetected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189343"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContrastBolusAgentPhase(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189344"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble CTDIvol(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189345"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTDIPhantomTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189346"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CalciumScoringMassFactorPatient(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189351"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CalciumScoringMassFactorDevice(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189352"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle EnergyWeightingFactor(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189353"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CTAdditionalXRaySourceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189360"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultienergyCTAcquisition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189361"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultienergyCTAcquisitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189362"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultienergyCTProcessingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189363"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultienergyCTCharacteristicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189364"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultienergyCTXRaySourceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189365"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort XRaySourceIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189366"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter XRaySourceID(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("00189367"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultienergySourceTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189368"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime SourceStartDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189369"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime SourceEndDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0018936A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SwitchingPhaseNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0018936B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SwitchingPhaseNominalDuration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0018936C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SwitchingPhaseTransitionDuration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0018936D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EffectiveBinEnergy(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0018936E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultienergyCTXRayDetectorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018936F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort XRayDetectorIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189370"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter XRayDetectorID(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("00189371"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultienergyDetectorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189372"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText XRayDetectorLabel(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00189373"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NominalMaxEnergy(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00189374"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NominalMinEnergy(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00189375"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedXRayDetectorIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189376"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedXRaySourceIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189377"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedPathIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189378"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultienergyCTPathSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189379"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MultienergyCTPathIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0018937A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText MultienergyAcquisitionDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0018937B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MonoenergeticEnergyEquivalent(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0018937C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MaterialCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018937D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DecompositionMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0018937E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText DecompositionDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0018937F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DecompositionAlgorithmIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189380"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DecompositionMaterialSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189381"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MaterialAttenuationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189382"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PhotonEnergy(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00189383"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString XRayMassAttenuationCoefficient(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00189384"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProjectionPixelCalibrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DistanceSourceToIsocenter(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DistanceObjectToTableTop(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ObjectPixelSpacingInCenterOfBeam(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PositionerPositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189405"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TablePositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189406"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CollimatorShapeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189407"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PlanesInAcquisition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XAXRFFrameCharacteristicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189412"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameAcquisitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189417"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString XRayReceptorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189420"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AcquisitionProtocolName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189423"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText AcquisitionProtocolDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00189424"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContrastBolusIngredientOpaque(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189425"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DistanceReceptorPlaneToDetectorHousing(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189426"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IntensifierActiveShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189427"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IntensifierActiveDimensions(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189428"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PhysicalDetectorSize(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189429"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PositionOfIsocenterProjection(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189430"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FieldOfViewSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189432"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FieldOfViewDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189433"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ExposureControlSensingRegionsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189434"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExposureControlSensingRegionShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189435"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort ExposureControlSensingRegionLeftVerticalEdge(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189436"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort ExposureControlSensingRegionRightVerticalEdge(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189437"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort ExposureControlSensingRegionUpperHorizontalEdge(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189438"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort ExposureControlSensingRegionLowerHorizontalEdge(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189439"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort CenterOfCircularExposureControlSensingRegion(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189440"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RadiusOfCircularExposureControlSensingRegion(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189441"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort VerticesOfThePolygonalExposureControlSensingRegion(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189442"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ColumnAngulationPatient(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189447"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BeamAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189449"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameDetectorParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189451"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CalculatedAnatomyThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189452"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CalibrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189455"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ObjectThicknessSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189456"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PlaneIdentification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189457"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FieldOfViewDimensionsInFloat(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189461"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IsocenterReferenceSystemSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189462"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PositionerIsocenterPrimaryAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189463"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PositionerIsocenterSecondaryAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189464"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PositionerIsocenterDetectorRotationAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189465"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableXPositionToIsocenter(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189466"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableYPositionToIsocenter(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189467"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableZPositionToIsocenter(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189468"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableHorizontalRotationAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189469"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableHeadTiltAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189470"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableCradleTiltAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189471"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameDisplayShutterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189472"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AcquiredImageAreaDoseProduct(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189473"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CArmPositionerTabletopRelationship(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189474"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XRayGeometrySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189476"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IrradiationEventIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189477"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XRay3DFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189504"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContributingSourcesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189506"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XRay3DAcquisitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189507"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PrimaryPositionerScanArc(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189508"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SecondaryPositionerScanArc(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189509"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PrimaryPositionerScanStartAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SecondaryPositionerScanStartAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189511"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PrimaryPositionerIncrement(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189514"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SecondaryPositionerIncrement(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00189515"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime StartAcquisitionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189516"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime EndAcquisitionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189517"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort PrimaryPositionerIncrementSign(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189518"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort SecondaryPositionerIncrementSign(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00189519"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ApplicationName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189524"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ApplicationVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189525"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ApplicationManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189526"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AlgorithmType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189527"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AlgorithmDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189528"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XRay3DReconstructionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189530"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReconstructionDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189531"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerProjectionAcquisitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189538"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DetectorPositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189541"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XRayAcquisitionDoseSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189542"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble XRaySourceIsocenterPrimaryAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189543"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble XRaySourceIsocenterSecondaryAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189544"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BreastSupportIsocenterPrimaryAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189545"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BreastSupportIsocenterSecondaryAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189546"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BreastSupportXPositionToIsocenter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189547"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BreastSupportYPositionToIsocenter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189548"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BreastSupportZPositionToIsocenter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189549"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DetectorIsocenterPrimaryAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189550"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DetectorIsocenterSecondaryAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189551"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DetectorXPositionToIsocenter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189552"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DetectorYPositionToIsocenter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189553"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DetectorZPositionToIsocenter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189554"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XRayGridSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189555"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XRayFilterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189556"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DetectorActiveAreaTLHCPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189557"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DetectorActiveAreaOrientation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189558"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PositionerPrimaryAngleDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189559"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DiffusionBMatrixSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189601"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionBValueXX(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189602"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionBValueXY(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189603"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionBValueXZ(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189604"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionBValueYY(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189605"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionBValueYZ(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189606"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffusionBValueZZ(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189607"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FunctionalMRSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189621"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FunctionalSettlingPhaseFramesPresent(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189622"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime FunctionalSyncPulse(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189623"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SettlingPhaseFrame(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189624"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime DecayCorrectionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189701"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble StartDensityThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189715"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble StartRelativeDensityDifferenceThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189716"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble StartCardiacTriggerCountThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189717"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble StartRespiratoryTriggerCountThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189718"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TerminationCountsThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189719"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TerminationDensityThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189720"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TerminationRelativeDensityThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189721"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TerminationTimeThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189722"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TerminationCardiacTriggerCountThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189723"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TerminationRespiratoryTriggerCountThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189724"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DetectorGeometry(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189725"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TransverseDetectorSeparation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189726"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AxialDetectorDimension(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189727"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RadiopharmaceuticalAgentNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189729"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PETFrameAcquisitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189732"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PETDetectorMotionDetailsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189733"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PETTableDynamicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189734"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PETPositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189735"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PETFrameCorrectionFactorsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189736"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RadiopharmaceuticalUsageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189737"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AttenuationCorrectionSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189738"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfIterations(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189739"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfSubsets(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189740"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PETReconstructionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189749"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PETFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189751"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TimeOfFlightInformationUsed(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189755"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReconstructionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189756"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DecayCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189758"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AttenuationCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189759"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScatterCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189760"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeadTimeCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189761"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GantryMotionCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189762"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientMotionCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189763"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CountLossNormalizationCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189764"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RandomsCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189765"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString NonUniformRadialSamplingCorrected(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189766"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SensitivityCalibrated(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189767"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DetectorNormalizationCorrection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189768"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IterativeReconstructionMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189769"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AttenuationCorrectionTemporalRelationship(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189770"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientPhysiologicalStateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189771"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientPhysiologicalStateCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189772"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DepthsOfFocus(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189801"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ExcludedIntervalsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189803"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ExclusionStartDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189804"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ExclusionDuration(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189805"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence USImageDescriptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189806"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageDataTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189807"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DataType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189808"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerScanPatternCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189809"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AliasedDataType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0018980B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PositionMeasuringDeviceUsed(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0018980C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerGeometryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018980D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerBeamSteeringCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018980E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransducerApplicationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018980F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ZeroVelocityPixelValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189810"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReferenceLocationLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189900"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ReferenceLocationDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00189901"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferenceBasisCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189902"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferenceGeometryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189903"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString OffsetDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00189904"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OffsetDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189905"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PotentialScheduledProtocolCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189906"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PotentialRequestedProcedureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189907"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter PotentialReasonsForProcedure(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("00189908"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PotentialReasonsForProcedureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189909"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter PotentialDiagnosticTasks(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("0018990A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContraindicationsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018990B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedDefinedProtocolSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018990C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPerformedProtocolSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018990D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PredecessorProtocolSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018990E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ProtocolPlanningInformation(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0018990F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ProtocolDesignRationale(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00189910"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientSpecificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189911"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ModelSpecificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189912"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ParametersSpecificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189913"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InstructionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189914"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort InstructionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189915"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString InstructionText(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189916"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText InstructionDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00189917"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InstructionPerformedFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189918"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime InstructionPerformedDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00189919"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText InstructionPerformanceComment(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0018991A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientPositioningInstructionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018991B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PositioningMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018991C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PositioningLandmarkSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018991D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TargetFrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0018991E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionProtocolElementSpecificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018991F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionProtocolElementSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189920"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ProtocolElementNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189921"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ProtocolElementName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189922"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ProtocolElementCharacteristicsSummary(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00189923"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ProtocolElementPurpose(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00189924"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionMotion(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189930"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionStartLocationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189931"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionEndLocationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189932"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReconstructionProtocolElementSpecificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189933"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReconstructionProtocolElementSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189934"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StorageProtocolElementSpecificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189935"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StorageProtocolElementSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00189936"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RequestedSeriesDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00189937"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SourceAcquisitionProtocolElementNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189938"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SourceAcquisitionBeamNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00189939"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SourceReconstructionProtocolElementNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0018993A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReconstructionStartLocationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018993B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReconstructionEndLocationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018993C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReconstructionAlgorithmSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018993D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReconstructionTargetCenterLocationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018993E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ImageFilterDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00189941"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble CTDIvolNotificationTrigger(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189942"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DLPNotificationTrigger(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189943"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AutoKVPSelectionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189944"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AutoKVPUpperBound(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189945"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AutoKVPLowerBound(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00189946"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ProtocolDefinedPatientPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00189947"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContributingEquipmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0018A001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ContributionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0018A002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ContributionDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0018A003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier StudyInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0020000D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SeriesInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0020000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString StudyID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00200010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SeriesNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AcquisitionNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString InstanceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString IsotopeNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PhaseNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString IntervalNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TimeSlotNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AngleNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ItemNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientOrientation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00200020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString OverlayNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CurveNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString LUTNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImagePosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00200030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImagePositionPatient(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00200032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageOrientation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00200035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageOrientationPatient(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00200037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString Location(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00200050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier FrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00200052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Laterality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00200060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageLaterality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00200062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImageGeometryType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00200070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MaskingImage(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00200080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReportNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("002000AA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TemporalPositionIdentifier(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfTemporalPositions(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00200105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TemporalResolution(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00200110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SynchronizationFrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00200200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SOPInstanceUIDOfConcatenationSource(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00200242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SeriesInStudy(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AcquisitionsInSeries(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ImagesInAcquisition(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ImagesInSeries(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AcquisitionsInStudy(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ImagesInStudy(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString Reference(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00201020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TargetPositionReferenceIndicator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0020103F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PositionReferenceIndicator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00201040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SliceLocation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00201041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString OtherStudyNumbers(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfPatientRelatedStudies(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfPatientRelatedSeries(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfPatientRelatedInstances(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfStudyRelatedSeries(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201206"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfStudyRelatedInstances(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfSeriesRelatedInstances(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00201209"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SourceImageIDs(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("002031xx"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModifyingDeviceID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00203401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModifiedImageID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00203402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ModifiedImageDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00203403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ModifyingDeviceManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00203404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ModifiedImageTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00203405"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ModifiedImageDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00203406"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ImageComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00204000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag OriginalImageIdentification(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00205000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OriginalImageIdentificationNomenclature(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00205002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString StackID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00209056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong InStackPositionNumber(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00209057"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameAnatomySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FrameLaterality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00209072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanePositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209113"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlaneOrientationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209116"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TemporalPositionIndex(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00209128"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble NominalCardiacTriggerDelayTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209153"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle NominalCardiacTriggerTimePriorToRPeak(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00209154"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ActualCardiacTriggerTimePriorToRPeak(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00209155"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort FrameAcquisitionNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00209156"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong DimensionIndexValues(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00209157"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText FrameComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00209158"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ConcatenationUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00209161"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort InConcatenationNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00209162"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort InConcatenationTotalNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00209163"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier DimensionOrganizationUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00209164"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag DimensionIndexPointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00209165"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag FunctionalGroupPointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00209167"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UnassignedSharedConvertedAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209170"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UnassignedPerFrameConvertedAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209171"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConversionSourceAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209172"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DimensionIndexPrivateCreator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00209213"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DimensionOrganizationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209221"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DimensionIndexSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong ConcatenationFrameOffsetNumber(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00209228"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FunctionalGroupPrivateCreator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00209238"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle NominalPercentageOfCardiacPhase(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00209241"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle NominalPercentageOfRespiratoryPhase(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00209245"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StartingRespiratoryAmplitude(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00209246"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString StartingRespiratoryPhase(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00209247"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle EndingRespiratoryAmplitude(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00209248"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString EndingRespiratoryPhase(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00209249"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RespiratoryTriggerType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00209250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RRIntervalTimeNominal(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ActualCardiacTriggerDelayTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209252"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RespiratorySynchronizationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209253"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RespiratoryIntervalTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209254"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble NominalRespiratoryTriggerDelayTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209255"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RespiratoryTriggerDelayThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209256"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ActualRespiratoryTriggerDelayTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209257"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ImagePositionVolume(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ImageOrientationVolume(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString UltrasoundAcquisitionGeometry(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00209307"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ApexPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble VolumeToTransducerMappingMatrix(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00209309"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble VolumeToTableMappingMatrix(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0020930A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VolumeToTransducerRelationship(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0020930B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientFrameOfReferenceSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0020930C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TemporalPositionTimeOffset(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0020930D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanePositionVolumeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0020930E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlaneOrientationVolumeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0020930F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TemporalPositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DimensionOrganizationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00209311"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier VolumeFrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00209312"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TableFrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00209313"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DimensionDescriptionLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00209421"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientOrientationInFrameSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209450"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FrameLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00209453"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AcquisitionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00209518"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContributingSOPInstancesReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00209529"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReconstructionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00209536"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LightPathFilterPassThroughWavelength(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00220001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LightPathFilterPassBand(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00220002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImagePathFilterPassThroughWavelength(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00220003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImagePathFilterPassBand(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00220004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientEyeMovementCommanded(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00220005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientEyeMovementCommandCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SphericalLensPower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CylinderLensPower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CylinderAxis(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle EmmetropicMagnification(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0022000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IntraOcularPressure(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0022000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle HorizontalFieldOfView(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0022000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PupilDilated(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0022000D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DegreeOfDilation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0022000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StereoBaselineAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StereoBaselineDisplacement(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StereoHorizontalPixelOffset(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StereoVerticalPixelOffset(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StereoRotation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionDeviceTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IlluminationTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LightPathFilterTypeStackCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImagePathFilterTypeStackCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LensesCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelDescriptionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0022001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RefractiveStateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0022001B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MydriaticAgentCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0022001C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelativeImagePositionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0022001D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CameraAngleOfView(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0022001E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StereoPairsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LeftImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RightImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString StereoPairsPresent(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00220028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AxialLengthOfTheEye(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicFrameLocationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ReferenceCoordinates(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DepthSpatialResolution(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaximumDepthDistortion(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AlongScanSpatialResolution(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaximumAlongScanDistortion(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OphthalmicImageOrientation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00220039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DepthOfTransverseImage(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MydriaticAgentConcentrationUnitsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AcrossScanSpatialResolution(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaximumAcrossScanDistortion(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220049"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MydriaticAgentConcentration(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0022004E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IlluminationWaveLength(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IlluminationPower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IlluminationBandwidth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00220057"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MydriaticAgentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00220058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialMeasurementsRightEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialMeasurementsLeftEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OphthalmicAxialMeasurementsDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OphthalmicAxialLengthMeasurementsType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle OphthalmicAxialLength(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LensStatusCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VitreousStatusCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IOLFormulaCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString IOLFormulaDetail(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle KeratometerIndex(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceOfOphthalmicAxialLengthCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceOfCornealSizeDataCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TargetRefraction(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RefractiveProcedureOccurred(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RefractiveSurgeryTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicUltrasoundMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthMeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IOLPower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PredictedRefractiveError(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle OphthalmicAxialLengthVelocity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221059"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString LensStatusDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString VitreousStatusDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IOLPowerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LensConstantSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString IOLManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221093"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString LensConstantDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221095"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence KeratometryMeasurementTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221096"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantPartNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221097"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedOphthalmicAxialMeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RefractiveErrorBeforeRefractiveSurgeryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IOLPowerForExactEmmetropia(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IOLPowerForExactTargetRefraction(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnteriorChamberDepthDefinitionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LensThicknessSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221127"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnteriorChamberDepthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221128"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle LensThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AnteriorChamberDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221131"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceOfLensThicknessDataCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221132"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceOfAnteriorChamberDepthDataCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221133"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceOfRefractiveMeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221134"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceOfRefractiveMeasurementsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221135"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OphthalmicAxialLengthMeasurementModified(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthDataSourceCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthAcquisitionMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221153"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SignalToNoiseRatio(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221155"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OphthalmicAxialLengthDataSourceDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221159"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthMeasurementsTotalLengthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthMeasurementsSegmentalLengthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221211"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthMeasurementsLengthSummationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UltrasoundOphthalmicAxialLengthMeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OpticalOphthalmicAxialLengthMeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221225"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UltrasoundSelectedOphthalmicAxialLengthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthSelectionMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OpticalSelectedOphthalmicAxialLengthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221255"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SelectedSegmentalOphthalmicAxialLengthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221257"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SelectedTotalOphthalmicAxialLengthSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221260"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthQualityMetricSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221262"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicAxialLengthQualityMetricTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221265"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OphthalmicAxialLengthQualityMetricTypeDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221273"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IntraocularLensCalculationsRightEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IntraocularLensCalculationsLeftEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedOphthalmicAxialLengthMeasurementQCImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221330"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OphthalmicMappingDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221415"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221420"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionMethodAlgorithmSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221423"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicThicknessMapTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221436"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicThicknessMappingNormalsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221443"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RetinalThicknessDefinitionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221445"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PixelValueMappingToCodedConceptSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221450"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MappedPixelValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00221452"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PixelValueMappingExplanation(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221454"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicThicknessMapQualityThresholdSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221458"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle OphthalmicThicknessMapThresholdQualityRating(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221460"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AnatomicStructureReferencePoint(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221463"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RegistrationToLocalizerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221465"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RegisteredLocalizerUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221466"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RegisteredLocalizerTopLeftHandCorner(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221467"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RegisteredLocalizerBottomRightHandCorner(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221468"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicThicknessMapQualityRatingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221470"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelevantOPTAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221472"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransformationMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221512"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TransformationAlgorithmSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221513"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OphthalmicAxialLengthMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221515"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle OphthalmicFOV(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221517"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TwoDimensionalToThreeDimensionalMapSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221518"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WideFieldOphthalmicPhotographyQualityRatingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221525"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WideFieldOphthalmicPhotographyQualityThresholdSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221526"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle WideFieldOphthalmicPhotographyThresholdQualityRating(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221527"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle XCoordinatesCenterPixelViewAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221528"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle YCoordinatesCenterPixelViewAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221529"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfMapPoints(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00221530"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString TwoDimensionalToThreeDimensionalMapData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00221531"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DerivationAlgorithmSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221612"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicImageTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221615"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OphthalmicImageTypeDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00221616"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScanPatternTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221618"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSurfaceMeshIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221620"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OphthalmicVolumetricPropertiesFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00221622"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle OphthalmicAnatomicReferencePointXCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221624"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle OphthalmicAnatomicReferencePointYCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221626"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicEnFaceImageQualityRatingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221628"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString QualityThreshold(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00221630"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OCTBscanAnalysisAcquisitionParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00221640"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberofBscansPerFrame(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00221642"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BscanSlabThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221643"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DistanceBetweenBscanSlabs(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221644"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BscanCycleTime(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221645"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BscanCycleTimeVector(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221646"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AscanRate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221649"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BscanRate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00221650"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SurfaceMeshZPixelOffset(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00221658"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VisualFieldHorizontalExtent(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VisualFieldVerticalExtent(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VisualFieldShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScreeningTestModeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaximumStimulusLuminance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BackgroundLuminance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StimulusColorCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BackgroundIlluminationColorCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StimulusArea(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle StimulusPresentationTime(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FixationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FixationMonitoringCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualFieldCatchTrialSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort FixationCheckedQuantity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PatientNotProperlyFixatedQuantity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PresentedVisualStimuliDataFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfVisualStimuli(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExcessiveFixationLossesDataFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExcessiveFixationLosses(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort StimuliRetestingQuantity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText CommentsOnPatientPerformanceOfVisualField(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00240044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FalseNegativesEstimateFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FalseNegativesEstimate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NegativeCatchTrialsQuantity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort FalseNegativesQuantity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExcessiveFalseNegativesDataFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExcessiveFalseNegatives(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FalsePositivesEstimateFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FalsePositivesEstimate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CatchTrialsDataFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PositiveCatchTrialsQuantity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TestPointNormalsDataFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240057"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TestPointNormalsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GlobalDeviationProbabilityNormalsFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240059"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort FalsePositivesQuantity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00240060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExcessiveFalsePositivesDataFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExcessiveFalsePositives(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VisualFieldTestNormalsFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ResultsNormalsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AgeCorrectedSensitivityDeviationAlgorithmSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GlobalDeviationFromNormal(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GeneralizedDefectSensitivityDeviationAlgorithmSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle LocalizedDeviationFromNormal(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientReliabilityIndicator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00240069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VisualFieldMeanSensitivity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GlobalDeviationProbability(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LocalDeviationProbabilityNormalsFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle LocalizedDeviationProbability(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShortTermFluctuationCalculated(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ShortTermFluctuation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShortTermFluctuationProbabilityCalculated(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ShortTermFluctuationProbability(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240077"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CorrectedLocalizedDeviationFromNormalCalculated(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CorrectedLocalizedDeviationFromNormal(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240079"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CorrectedLocalizedDeviationFromNormalProbabilityCalculated(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CorrectedLocalizedDeviationFromNormalProbability(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GlobalDeviationProbabilitySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LocalizedDeviationProbabilitySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FovealSensitivityMeasured(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FovealSensitivity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240087"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VisualFieldTestDuration(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualFieldTestPointSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240089"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VisualFieldTestPointXCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VisualFieldTestPointYCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240091"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AgeCorrectedSensitivityDeviationValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString StimulusResults(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240093"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SensitivityValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RetestStimulusSeen(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240095"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RetestSensitivityValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240096"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualFieldTestPointNormalsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240097"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle QuantifiedDefect(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240098"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AgeCorrectedSensitivityDeviationProbabilityValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeneralizedDefectCorrectedSensitivityDeviationFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GeneralizedDefectCorrectedSensitivityDeviationValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MinimumSensitivityValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlindSpotLocalized(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BlindSpotXCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BlindSpotYCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualAcuityMeasurementSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RefractiveParametersUsedOnPatientSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MeasurementLaterality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240113"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicPatientClinicalInformationLeftEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OphthalmicPatientClinicalInformationRightEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FovealPointNormativeDataFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240117"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FovealPointProbabilityValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240118"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScreeningBaselineMeasured(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScreeningBaselineMeasuredSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScreeningBaselineType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ScreeningBaselineValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240126"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AlgorithmSource(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00240202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DataSetName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00240306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DataSetVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00240307"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DataSetSource(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00240308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DataSetDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00240309"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualFieldTestReliabilityGlobalIndexSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240317"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualFieldGlobalResultsIndexSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DataObservationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240325"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IndexNormalsFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00240338"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IndexProbability(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00240341"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IndexProbabilitySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00240344"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SamplesPerPixel(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SamplesPerPixelUsed(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PhotometricInterpretation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageDimensions(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PlanarConfiguration(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfFrames(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00280008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag FrameIncrementPointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00280009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag FrameDimensionPointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("0028000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Rows(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Columns(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Planes(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort UltrasoundColorDataPresent(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PixelSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00280030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ZoomFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00280031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ZoomCenter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00280032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PixelAspectRatio(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00280034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageFormat(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ManipulatedImage(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00280050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CorrectedImage(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CompressionRecognitionCode(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0028005F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompressionCode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CompressionOriginator(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00280061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CompressionLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00280062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CompressionDescription(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00280063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompressionSequence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag CompressionStepPointers(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00280066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RepeatInterval(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BitsGrouped(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PerimeterTable(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PerimeterValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PredictorRows(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PredictorColumns(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PredictorConstants(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlockedPixels(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BlockRows(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280091"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BlockColumns(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RowOverlap(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280093"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ColumnOverlap(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BitsAllocated(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BitsStored(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HighBit(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PixelRepresentation(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SmallestValidPixelValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargestValidPixelValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SmallestImagePixelValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargestImagePixelValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SmallestPixelValueInSeries(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargestPixelValueInSeries(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280109"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SmallestImagePixelValueInPlane(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargestImagePixelValueInPlane(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PixelPaddingValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PixelPaddingRangeLimit(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FloatPixelPaddingValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00280122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DoubleFloatPixelPaddingValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00280123"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FloatPixelPaddingRangeLimit(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00280124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DoubleFloatPixelPaddingRangeLimit(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00280125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageLocation(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString QualityControlImage(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BurnedInAnnotation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RecognizableVisualFeatures(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LongitudinalTemporalInformationModified(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedColorPaletteInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00280304"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TransformLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00280400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TransformVersionNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00280401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfTransformSteps(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SequenceOfCompressedData(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00280403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag DetailsOfCoefficients(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00280404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RowsForNthOrderCoefficients(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("002804x0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ColumnsForNthOrderCoefficients(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("002804x1"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CoefficientCoding(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("002804x2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag CoefficientCodingPointers(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("002804x3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DCTLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00280700"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DataBlockDescription(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280701"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag DataBlock(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00280702"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NormalizationFactorFormat(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280710"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ZonalMapNumberFormat(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280720"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag ZonalMapLocation(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00280721"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ZonalMapFormat(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280722"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AdaptiveMapFormat(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280730"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CodeNumberFormat(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00280740"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CodeLabel(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("002808x0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfTables(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("002808x2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag CodeTableLocation(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("002808x3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BitsForCodeWord(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("002808x4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag ImageDataLocation(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("002808x8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PixelSpacingCalibrationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00280A02"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PixelSpacingCalibrationDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00280A04"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PixelIntensityRelationship(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort PixelIntensityRelationshipSign(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00281041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WindowCenter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00281050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WindowWidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00281051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RescaleIntercept(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00281052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RescaleSlope(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00281053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RescaleType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00281054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString WindowCenterWidthExplanation(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00281055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VOILUTFunction(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GrayScale(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RecommendedViewingMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GrayLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RedPaletteColorLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GreenPaletteColorLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BluePaletteColorLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AlphaPaletteColorLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargeRedPaletteColorLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargeGreenPaletteColorLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargeBluePaletteColorLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281113"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier PaletteColorLookupTableUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00281199"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GrayLookupTableData(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString RedPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString GreenPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString BluePaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString AlphaPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString LargeRedPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281211"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString LargeGreenPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString LargeBluePaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281213"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier LargePaletteColorLookupTableUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00281214"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString SegmentedRedPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281221"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString SegmentedGreenPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString SegmentedBluePaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281223"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString SegmentedAlphaPaletteColorLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StoredValueColorRangeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00281230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MinimumStoredValueMapped(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00281231"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MaximumStoredValueMapped(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00281232"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BreastImplantPresent(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PartialView(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281350"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText PartialViewDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00281351"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PartialViewCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00281352"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpatialLocationsPreserved(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0028135A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DataFrameAssignmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00281401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DataPathAssignment(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BitsMappedToColorLookupTable(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BlendingLUT1Sequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00281404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlendingLUT1TransferFunction(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281405"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BlendingWeightConstant(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00281406"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BlendingLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00281407"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString BlendingLookupTableData(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00281408"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EnhancedPaletteColorLookupTableSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028140B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BlendingLUT2Sequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028140C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlendingLUT2TransferFunction(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0028140D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DataPathID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0028140E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RGBLUTTransferFunction(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0028140F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AlphaLUTTransferFunction(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00281410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString ICCProfile(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00282000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ColorSpace(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00282002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LossyImageCompression(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00282110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString LossyImageCompressionRatio(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00282112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LossyImageCompressionMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00282114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ModalityLUTSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00283000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LUTDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00283002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString LUTExplanation(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00283003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ModalityLUTType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00283004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LUTData(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00283006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VOILUTSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00283010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SoftcopyVOILUTSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00283110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ImagePresentationComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00284000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BiPlaneAcquisitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00285000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RepresentativeFrameNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00286010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort FrameNumbersOfInterest(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00286020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FrameOfInterestDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00286022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FrameOfInterestType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00286023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MaskPointers(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00286030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RWavePointer(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00286040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MaskSubtractionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00286100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MaskOperation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00286101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ApplicableFrameRange(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00286102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MaskFrameNumbers(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00286110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ContrastFrameAveraging(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00286112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaskSubPixelShift(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00286114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort TIDOffset(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00286120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText MaskOperationExplanation(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00286190"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EquipmentAdministratorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfDisplaySubsystems(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00287001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CurrentConfigurationID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00287002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DisplaySubsystemID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00287003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString DisplaySubsystemName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00287004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DisplaySubsystemDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00287005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SystemStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SystemStatusComment(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00287007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TargetLuminanceCharacteristicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LuminanceCharacteristicsID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00287009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DisplaySubsystemConfigurationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028700A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ConfigurationID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0028700B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ConfigurationName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("0028700C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ConfigurationDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0028700D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedTargetLuminanceCharacteristicsID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0028700E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence QAResultsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028700F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DisplaySubsystemQAResultsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConfigurationQAResultsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasurementEquipmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MeasurementFunctions(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MeasurementEquipmentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualEvaluationResultSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DisplayCalibrationResultSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DDLValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00287017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CIExyWhitePoint(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00287018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DisplayFunctionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GammaValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0028701A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfLuminancePoints(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0028701B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LuminanceResponseSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028701C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TargetMinimumLuminance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0028701D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TargetMaximumLuminance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0028701E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle LuminanceValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0028701F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString LuminanceResponseDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00287020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WhitePointFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DisplayDeviceTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DisplaySubsystemSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LuminanceResultSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AmbientLightValueSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MeasuredCharacteristics(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LuminanceUniformityResultSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualEvaluationTestSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00287028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TestResult(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00287029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TestResultComment(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0028702A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TestImageValidation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0028702B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TestPatternCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028702C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasurementPatternCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028702D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualEvaluationMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0028702E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId PixelDataProviderURL(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("00287FE0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong DataPointRows(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00289001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong DataPointColumns(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00289002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SignalDomainColumns(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LargestMonochromePixelValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00289099"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DataRepresentation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PixelMeasuresSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameVOILUTSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289132"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PixelValueTransformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289145"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SignalDomainRows(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289235"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DisplayFilterPercentage(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00289411"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FramePixelShiftSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289415"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SubtractionItemID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00289416"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PixelIntensityRelationshipLUTSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289422"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FramePixelDataPropertiesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289443"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeometricalProperties(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289444"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GeometricMaximumDistortion(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00289445"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageProcessingApplied(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289446"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MaskSelectionMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289454"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LUTFunction(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289474"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaskVisibilityPercentage(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00289478"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PixelShiftSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289501"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RegionPixelShiftSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289502"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort VerticesOfTheRegion(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00289503"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultiFramePresentationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00289505"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PixelShiftFrameRange(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00289506"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort LUTFrameRange(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00289507"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageToEquipmentMappingMatrix(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00289520"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString EquipmentCoordinateSystemIdentification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00289537"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString StudyStatusID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0032000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString StudyPriorityID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0032000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString StudyIDIssuer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00320012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date StudyVerifiedDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00320032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time StudyVerifiedTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00320033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date StudyReadDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00320034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time StudyReadTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00320035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ScheduledStudyStartDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00321000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ScheduledStudyStartTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00321001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ScheduledStudyStopDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00321010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ScheduledStudyStopTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00321011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ScheduledStudyLocation(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00321020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity ScheduledStudyLocationAETitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00321021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReasonForStudy(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00321030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RequestingPhysicianIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00321031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName RequestingPhysician(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00321032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RequestingService(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00321033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RequestingServiceCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00321034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date StudyArrivalDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00321040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time StudyArrivalTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00321041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date StudyCompletionDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00321050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time StudyCompletionTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00321051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString StudyComponentStatusID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00321055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RequestedProcedureDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00321060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RequestedProcedureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00321064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RequestedContrastAgent(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00321070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText StudyComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00324000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPatientAliasSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00380004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VisitStatusID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00380008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AdmissionID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString IssuerOfAdmissionID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IssuerOfAdmissionIDSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00380014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RouteOfAdmissions(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ScheduledAdmissionDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0038001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ScheduledAdmissionTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0038001B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ScheduledDischargeDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0038001C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ScheduledDischargeTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0038001D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ScheduledPatientInstitutionResidence(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0038001E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date AdmittingDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00380020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time AdmittingTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00380021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date DischargeDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00380030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time DischargeTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00380032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DischargeDiagnosisDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DischargeDiagnosisCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00380044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SpecialNeeds(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ServiceEpisodeID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString IssuerOfServiceEpisodeID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ServiceEpisodeDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IssuerOfServiceEpisodeIDSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00380064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PertinentDocumentsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00380100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PertinentResourcesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00380101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ResourceDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CurrentPatientLocation(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientInstitutionResidence(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientState(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00380500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientClinicalTrialParticipationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00380502"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText VisitComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00384000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WaveformOriginality(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("003A0004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfWaveformChannels(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("003A0005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfWaveformSamples(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("003A0010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SamplingFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString MultiplexGroupLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("003A0020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelDefinitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A0200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString WaveformChannelNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("003A0202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ChannelLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("003A0203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ChannelStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("003A0205"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelSourceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A0208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelSourceModifiersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A0209"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceWaveformSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A020A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ChannelDerivationDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("003A020C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelSensitivity(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelSensitivityUnitsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A0211"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelSensitivityCorrectionFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelBaseline(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0213"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelTimeSkew(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0214"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelSampleSkew(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0215"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelOffset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0218"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort WaveformBitsStored(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("003A021A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FilterLowFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FilterHighFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0221"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NotchFilterFrequency(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NotchFilterBandwidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("003A0223"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle WaveformDataDisplayScale(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("003A0230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort WaveformDisplayBackgroundCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("003A0231"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WaveformPresentationGroupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A0240"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PresentationGroupNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("003A0241"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelDisplaySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A0242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ChannelRecommendedDisplayCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("003A0244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ChannelPosition(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("003A0245"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DisplayShadingFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("003A0246"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FractionalChannelDisplayScale(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("003A0247"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AbsoluteChannelDisplayScale(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("003A0248"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MultiplexedAudioChannelsDescriptionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("003A0300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ChannelIdentificationCode(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("003A0301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ChannelMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("003A0302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity ScheduledStationAETitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00400001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ScheduledProcedureStepStartDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00400002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ScheduledProcedureStepStartTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00400003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ScheduledProcedureStepEndDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00400004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ScheduledProcedureStepEndTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00400005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName ScheduledPerformingPhysicianName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00400006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ScheduledProcedureStepDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00400007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledProtocolCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ScheduledProcedureStepID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00400009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StageCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledPerformingPhysicianIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ScheduledStationName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00400010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ScheduledProcedureStepLocation(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00400011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PreMedication(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00400012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScheduledProcedureStepStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00400020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OrderPlacerIdentifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OrderFillerIdentifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText LocalNamespaceEntityID(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00400031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText UniversalEntityID(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00400032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString UniversalEntityIDType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00400033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IdentifierTypeCode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00400035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssigningFacilitySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssigningJurisdictionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssigningAgencyOrDepartmentCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040003A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedNonImageCompositeSOPInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity PerformedStationAETitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00400241"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PerformedStationName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00400242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PerformedLocation(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00400243"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date PerformedProcedureStepStartDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00400244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time PerformedProcedureStepStartTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00400245"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date PerformedProcedureStepEndDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00400250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time PerformedProcedureStepEndTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00400251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PerformedProcedureStepStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00400252"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PerformedProcedureStepID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00400253"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PerformedProcedureStepDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00400254"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PerformedProcedureTypeDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00400255"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedProtocolCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400260"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PerformedProtocolType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00400261"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledStepAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400270"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RequestAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400275"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CommentsOnThePerformedProcedureStep(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00400280"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedProcedureStepDiscontinuationReasonCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400281"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence QuantitySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400293"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString Quantity(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00400294"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasuringUnitsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400295"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BillingItemSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400296"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort TotalTimeOfFluoroscopy(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00400300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort TotalNumberOfExposures(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00400301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort EntranceDose(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00400302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ExposedArea(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00400303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DistanceSourceToEntrance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00400306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DistanceSourceToSupport(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00400307"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ExposureDoseSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040030E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CommentsOnRadiationDose(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00400310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString XRayOutput(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00400312"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString HalfValueLayer(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00400314"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString OrganDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00400316"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OrganExposed(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00400318"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BillingProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FilmConsumptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400321"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BillingSuppliesAndDevicesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400324"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400330"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedSeriesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400340"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText CommentsOnTheScheduledProcedureStep(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00400400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProtocolContextSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400440"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContentItemModifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400441"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledSpecimenSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SpecimenAccessionNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0040050A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContainerIdentifier(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00400512"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IssuerOfTheContainerIdentifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400513"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AlternateContainerIdentifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400515"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContainerTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400518"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContainerDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0040051A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContainerComponentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400520"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400550"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SpecimenIdentifier(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00400551"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenDescriptionSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400552"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SpecimenDescriptionTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00400553"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SpecimenUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00400554"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AcquisitionContextSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400555"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText AcquisitionContextDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00400556"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040059A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenDescriptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400560"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IssuerOfTheSpecimenIdentifierSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400562"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SpecimenShortDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00400600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText SpecimenDetailedDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00400602"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenPreparationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400610"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenPreparationStepContentItemSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400612"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenLocalizationContentItemSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400620"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SlideIdentifier(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("004006FA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WholeSlideMicroscopyImageFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00400710"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageCenterPointCoordinatesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040071A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString XOffsetInSlideCoordinateSystem(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0040072A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString YOffsetInSlideCoordinateSystem(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0040073A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ZOffsetInSlideCoordinateSystem(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0040074A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PixelSpacingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("004008D8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CoordinateSystemAxisCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("004008DA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasurementUnitsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("004008EA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VitalStainCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("004009F8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RequestedProcedureID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00401001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReasonForTheRequestedProcedure(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00401002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RequestedProcedurePriority(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00401003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientTransportArrangements(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00401004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RequestedProcedureLocation(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00401005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PlacerOrderNumberProcedure(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00401006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FillerOrderNumberProcedure(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00401007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ConfidentialityCode(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00401008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ReportingPriority(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00401009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReasonForRequestedProcedureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040100A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName NamesOfIntendedRecipientsOfResults(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00401010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IntendedRecipientsOfResultsIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00401011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReasonForPerformedProcedureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00401012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RequestedProcedureDescriptionTrial(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00401060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PersonIdentificationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00401101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText PersonAddress(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00401102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PersonTelephoneNumbers(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00401103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText PersonTelecomInformation(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00401104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText RequestedProcedureComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00401400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReasonForTheImagingServiceRequest(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00402001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date IssueDateOfImagingServiceRequest(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00402004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time IssueTimeOfImagingServiceRequest(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00402005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PlacerOrderNumberImagingServiceRequestRetired(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00402006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FillerOrderNumberImagingServiceRequestRetired(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00402007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName OrderEnteredBy(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00402008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString OrderEntererLocation(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00402009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString OrderCallbackPhoneNumber(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00402010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText OrderCallbackTelecomInformation(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00402011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PlacerOrderNumberImagingServiceRequest(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00402016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FillerOrderNumberImagingServiceRequest(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00402017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ImagingServiceRequestComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00402400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ConfidentialityConstraintOnPatientDataDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00403001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeneralPurposeScheduledProcedureStepStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00404001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeneralPurposePerformedProcedureStepStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00404002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeneralPurposeScheduledProcedureStepPriority(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00404003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledProcessingApplicationsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ScheduledProcedureStepStartDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00404005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultipleCopiesFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00404006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedProcessingApplicationsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ScheduledProcedureStepExpirationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00404008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HumanPerformerCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ScheduledProcedureStepModificationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00404010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ExpectedCompletionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00404011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ResultingGeneralPurposePerformedProcedureStepsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedGeneralPurposeScheduledProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledWorkitemCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedWorkitemCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InputAvailabilityFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00404020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InputInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelevantInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedGeneralPurposeScheduledProcedureStepTransactionUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00404023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledStationNameCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledStationClassCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledStationGeographicLocationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedStationNameCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedStationClassCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedStationGeographicLocationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RequestedSubsequentWorkitemCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence NonDICOMOutputCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OutputInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledHumanPerformersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ActualHumanPerformersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HumanPerformerOrganization(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00404036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName HumanPerformerName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00404037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RawDataHandling(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00404040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InputReadinessState(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00404041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime PerformedProcedureStepStartDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00404050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime PerformedProcedureStepEndDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00404051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ProcedureStepCancellationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00404052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OutputDestinationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DICOMStorageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence STOWRSStorageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId StorageURL(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("00404073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XDSStorageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00404074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EntranceDoseInmGy(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00408302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString EntranceDoseDerivation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00408303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ParametricMapFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00409092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedImageRealWorldValueMappingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00409094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RealWorldValueMappingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00409096"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PixelValueMappingCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00409098"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString LUTLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00409210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RealWorldValueLastValueMapped(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00409211"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RealWorldValueLUTData(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00409212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DoubleFloatRealWorldValueLastValueMapped(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00409213"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DoubleFloatRealWorldValueFirstValueMapped(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00409214"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RealWorldValueFirstValueMapped(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00409216"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence QuantityDefinitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00409220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RealWorldValueIntercept(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00409224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RealWorldValueSlope(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00409225"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FindingsFlagTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RelationshipType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FindingsSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier FindingsGroupUIDTrial(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040A021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedFindingsGroupUIDTrial(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040A022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date FindingsGroupRecordingDateTrial(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0040A023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time FindingsGroupRecordingTimeTrial(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0040A024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FindingsSourceCategoryCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString VerifyingOrganization(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0040A027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DocumentingOrganizationIdentifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime VerificationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040A030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ObservationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040A032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ValueType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptNameCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MeasurementPrecisionDescriptionTrial(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0040A047"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContinuityOfContent(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString UrgencyOrPriorityAlertsTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A057"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SequencingIndicatorTrial(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0040A060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DocumentIdentifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName DocumentAuthorTrial(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("0040A067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DocumentAuthorIdentifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IdentifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VerifyingObserverSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString ObjectBinaryIdentifierTrial(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("0040A074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName VerifyingObserverName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("0040A075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DocumentingObserverIdentifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AuthorObserverSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ParticipantSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A07A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CustodialOrganizationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A07C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ParticipationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ParticipationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040A082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ObserverType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureIdentifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VerifyingObserverIdentificationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString ObjectDirectoryBinaryIdentifierTrial(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("0040A089"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EquivalentCDADocumentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedWaveformChannels(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0040A0B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date DateOfDocumentOrVerbalTransactionTrial(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0040A110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time TimeOfDocumentCreationOrVerbalTransactionTrial(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0040A112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime DateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040A120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date Date(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0040A121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time Time(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0040A122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName PersonName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("0040A123"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier UID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040A124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReportStatusIDTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TemporalRangeType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong ReferencedSamplePositions(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0040A132"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedFrameNumbers(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0040A136"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ReferencedTimeOffsets(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0040A138"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ReferencedDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040A13A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText TextValue(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0040A160"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble FloatingPointValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0040A161"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong RationalNumeratorValue(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0040A162"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong RationalDenominatorValue(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0040A163"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ObservationCategoryCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A167"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A168"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText BibliographicCitationTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0040A16A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PurposeOfReferenceCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A170"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ObservationUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040A171"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedObservationUIDTrial(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040A172"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReferencedObservationClassTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A173"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReferencedObjectObservationClassTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A174"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AnnotationGroupNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0040A180"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ObservationDateTrial(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("0040A192"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ObservationTimeTrial(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0040A193"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MeasurementAutomationTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A194"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ModifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A195"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText IdentificationDescriptionTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0040A224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CoordinatesSetGeometricTypeTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A290"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AlgorithmCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A296"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText AlgorithmDescriptionTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0040A297"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong PixelCoordinatesSetTrial(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0040A29A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasuredValueSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence NumericValueQualifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName CurrentObserverTrial(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("0040A307"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NumericValue(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0040A30A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedAccessionSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A313"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ReportStatusCommentTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0040A33A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureContextSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A340"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName VerbalSourceTrial(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("0040A352"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText AddressTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0040A353"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TelephoneNumberTrial(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0040A354"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VerbalSourceIdentifierCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A358"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PredecessorDocumentsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A360"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedRequestSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A370"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedProcedureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A372"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CurrentRequestedProcedureEvidenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A375"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReportDetailSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A380"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PertinentOtherEvidenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A385"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HL7StructuredDocumentReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A390"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ObservationSubjectUIDTrial(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040A402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ObservationSubjectClassTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ObservationSubjectTypeCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompletionFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A491"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CompletionFlagDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0040A492"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VerificationFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A493"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ArchiveRequested(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A494"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PreliminaryFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A496"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContentTemplateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A504"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IdenticalDocumentsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A525"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ObservationSubjectContextFlagTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ObserverContextFlagTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A601"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ProcedureContextFlagTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040A603"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A730"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelationshipSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A731"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelationshipTypeCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A732"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LanguageCodeSequenceTrial(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040A744"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText UniformResourceLocatorTrial(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0040A992"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WaveformAnnotationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040B020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TemplateIdentifier(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040DB00"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime TemplateVersion(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040DB06"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime TemplateLocalVersion(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040DB07"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TemplateExtensionFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040DB0B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TemplateExtensionOrganizationUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040DB0C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TemplateExtensionCreatorUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040DB0D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong ReferencedContentItemIdentifier(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0040DB73"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText HL7InstanceIdentifier(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0040E001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime HL7DocumentEffectiveTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0040E004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HL7DocumentTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040E006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DocumentClassCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040E008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId RetrieveURI(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("0040E010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RetrieveLocationUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040E011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TypeOfInstances(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0040E020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DICOMRetrievalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040E021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DICOMMediaRetrievalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040E022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WADORetrievalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040E023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence XDSRetrievalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040E024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WADORSRetrievalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0040E025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RepositoryUniqueID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040E030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier HomeCommunityID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0040E031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText DocumentTitle(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00420010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString EncapsulatedDocument(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00420011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MIMETypeOfEncapsulatedDocument(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00420012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00420013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ListOfMIMETypes(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00420014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ProductPackageIdentifier(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00440001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SubstanceAdministrationApproval(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00440002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ApprovalStatusFurtherDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00440003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ApprovalStatusDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00440004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProductTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ProductName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00440008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ProductDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00440009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ProductLotIdentifier(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0044000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime ProductExpirationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0044000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime SubstanceAdministrationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00440010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SubstanceAdministrationNotes(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00440011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SubstanceAdministrationDeviceID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00440012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProductParameterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SubstanceAdministrationParameterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ApprovalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssertionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier AssertionUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00440102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AsserterIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime AssertionDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00440104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime AssertionExpirationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00440105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText AssertionComments(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00440106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelatedAssertionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedAssertionUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00440108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ApprovalSubjectSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00440109"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OrganizationalRoleCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0044010A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString LensDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00460012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RightLensSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LeftLensSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UnspecifiedLateralityLensSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CylinderSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrismSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble HorizontalPrismPower(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString HorizontalPrismBase(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble VerticalPrismPower(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VerticalPrismBase(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LensSegmentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble OpticalTransmittance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ChannelWidth(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble PupilSize(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble CornealSize(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CornealSizeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460047"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AutorefractionRightEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AutorefractionLeftEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DistancePupillaryDistance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble NearPupillaryDistance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble IntermediatePupillaryDistance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble OtherPupillaryDistance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence KeratometryRightEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence KeratometryLeftEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SteepKeratometricAxisSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RadiusOfCurvature(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble KeratometricPower(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble KeratometricAxis(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460077"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FlatKeratometricAxisSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BackgroundColor(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Optotype(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OptotypePresentation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460095"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SubjectiveRefractionRightEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460097"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SubjectiveRefractionLeftEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460098"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AddNearSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AddIntermediateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AddOtherSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AddPower(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ViewingDistance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualAcuityTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualAcuityRightEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualAcuityLeftEyeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460123"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VisualAcuityBothEyesOpenSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ViewingDistanceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort VisualAcuityModifiers(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00460135"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DecimalVisualAcuity(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460137"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OptotypeDetailedDefinition(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00460139"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedRefractiveMeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460145"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SpherePower(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460146"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble CylinderPower(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00460147"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CornealTopographySurface(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CornealVertexLocation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PupilCentroidXCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PupilCentroidYCoordinate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle EquivalentPupilRadius(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460205"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CornealTopographyMapTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460207"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString VerticesOfTheOutlineOfPupil(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00460208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CornealTopographyMappingNormalsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MaximumCornealCurvatureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460211"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaximumCornealCurvature(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaximumCornealCurvatureLocation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460213"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MinimumKeratometricSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460215"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SimulatedKeratometricCylinderSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460218"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AverageCornealPower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CornealISValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AnalyzedArea(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460227"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SurfaceRegularityIndex(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SurfaceAsymmetryIndex(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460232"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CornealEccentricityIndex(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460234"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle KeratoconusPredictionIndex(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460236"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DecimalPotentialVisualAcuity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460238"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CornealTopographyMapQualityEvaluation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceImageCornealProcessedDataSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00460244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CornealPointLocation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460247"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CornealPointEstimated(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00460248"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AxialPower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460249"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TangentialPower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RefractivePower(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RelativeElevation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460252"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CornealWavefront(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00460253"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ImagedVolumeWidth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00480001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ImagedVolumeHeight(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00480002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ImagedVolumeDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00480003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TotalPixelMatrixColumns(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00480006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TotalPixelMatrixRows(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00480007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TotalPixelMatrixOriginSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpecimenLabelInImage(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00480010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FocusMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00480011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExtendedDepthOfField(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00480012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfFocalPlanes(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00480013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DistanceBetweenFocalPlanes(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00480014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RecommendedAbsentPixelCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00480015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IlluminatorTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageOrientationSlide(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00480102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OpticalPathSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString OpticalPathIdentifier(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00480106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText OpticalPathDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00480107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IlluminationColorCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SpecimenReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CondenserLensPower(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00480111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ObjectiveLensPower(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00480112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ObjectiveLensNumericalAperture(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00480113"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PaletteColorLookupTableSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedImageNavigationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort TopLeftHandCornerOfLocalizerArea(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00480201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BottomRightHandCornerOfLocalizerArea(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00480202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OpticalPathIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00480207"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanePositionSlideSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0048021A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong ColumnPositionInTotalImagePixelMatrix(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0048021E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong RowPositionInTotalImagePixelMatrix(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0048021F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PixelOriginInterpretation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00480301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfOpticalPaths(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00480302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TotalPixelMatrixFocalPlanes(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00480303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CalibrationImage(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00500004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00500010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContainerComponentTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00500012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ContainerComponentThickness(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00500013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeviceLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00500014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ContainerComponentWidth(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00500015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeviceDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00500016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeviceDiameterUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00500017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeviceVolume(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00500018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString InterMarkerDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00500019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContainerComponentMaterial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0050001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContainerComponentID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0050001B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ContainerComponentLength(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0050001C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ContainerComponentDiameter(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0050001D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContainerComponentDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0050001E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DeviceDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00500020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText LongDeviceDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00500021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ContrastBolusIngredientPercentByVolume(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00520001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble OCTFocalDistance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BeamSpotSize(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble EffectiveRefractiveIndex(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OCTAcquisitionDomain(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00520006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble OCTOpticalCenterWavelength(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AxialResolution(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RangingDepth(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ALineRate(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ALinesPerFrame(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00520012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble CatheterRotationalRate(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ALinePixelSpacing(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ModeOfPercutaneousAccessSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00520016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IntravascularOCTFrameTypeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00520025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OCTZOffsetApplied(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00520026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IntravascularFrameContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00520027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble IntravascularLongitudinalDistance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IntravascularOCTFrameContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00520029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort OCTZOffsetCorrection(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("00520030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CatheterDirectionOfRotation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00520031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SeamLineLocation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble FirstALineLocation(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00520034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SeamLineIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00520036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfPaddedALines(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00520038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InterpolationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00520039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RefractiveIndexApplied(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0052003A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort EnergyWindowVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfEnergyWindows(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EnergyWindowInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EnergyWindowRangeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EnergyWindowLowerLimit(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00540014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EnergyWindowUpperLimit(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00540015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RadiopharmaceuticalInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ResidualSyringeCounts(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00540017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString EnergyWindowName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00540018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DetectorVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfDetectors(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DetectorInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PhaseVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfPhases(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PhaseInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfFramesInPhase(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PhaseDelay(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00540036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PauseBetweenFrames(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00540038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PhaseDescription(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00540039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RotationVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfRotations(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RotationInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfFramesInRotation(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RRIntervalVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfRRIntervals(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GatedInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DataInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort TimeSlotVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfTimeSlots(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TimeSlotInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TimeSlotTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00540073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SliceVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfSlices(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AngularViewVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort TimeSliceVector(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfTimeSlices(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString StartAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00540200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TypeOfDetectorMotion(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00540202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TriggerVector(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00540210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfTriggersInPhase(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540211"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ViewCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ViewModifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RadionuclideCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AdministrationRouteCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RadiopharmaceuticalCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540304"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CalibrationDataSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort EnergyWindowNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00540308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ImageID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00540400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientOrientationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientOrientationModifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540412"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientGantryRelationshipCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00540414"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SliceProgressionDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00540500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScanProgressionDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00540501"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SeriesType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Units(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CountsSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReprojectionMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SUVType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RandomsCorrectionMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AttenuationCorrectionMethod(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00541101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DecayCorrection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReconstructionMethod(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00541103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DetectorLinesOfResponseUsed(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00541104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ScatterCorrectionMethod(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00541105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString AxialAcceptance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AxialMash(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00541201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TransverseMash(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00541202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DetectorElementSize(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CoincidenceWindowWidth(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SecondaryCountsType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FrameReferenceTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PrimaryPromptsCountsAccumulated(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00541310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SecondaryCountsAccumulated(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00541311"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SliceSensitivityFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DecayFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541321"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoseCalibrationFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541322"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ScatterFractionFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541323"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeadTimeFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00541324"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00541330"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CountsIncluded(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeadTimeCorrectionFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00541401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HistogramSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00603000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HistogramNumberOfBins(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00603002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HistogramFirstBinValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00603004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HistogramLastBinValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00603006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HistogramBinWidth(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00603008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HistogramExplanation(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00603010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong HistogramData(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00603020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SegmentationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00620001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00620002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentedPropertyCategoryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00620003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SegmentNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00620004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SegmentLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00620005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SegmentDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00620006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentationAlgorithmIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00620007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SegmentAlgorithmType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00620008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SegmentAlgorithmName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00620009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0062000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedSegmentNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0062000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RecommendedDisplayGrayscaleValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0062000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RecommendedDisplayCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0062000D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MaximumFractionalValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0062000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentedPropertyTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0062000F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SegmentationFractionalType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00620010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentedPropertyTypeModifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00620011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UsedSegmentsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00620012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SegmentsOverlap(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00620013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText TrackingID(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00620020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier TrackingUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00620021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeformableRegistrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00640002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SourceFrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00640003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeformableRegistrationGridSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00640005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong GridDimensions(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00640007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble GridResolution(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00640008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString VectorGridData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00640009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PreDeformationMatrixRegistrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0064000F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PostDeformationMatrixRegistrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00640010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfSurfaces(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00660001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfaceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SurfaceNumber(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00660003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText SurfaceComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00660004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SurfaceProcessing(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00660009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SurfaceProcessingRatio(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0066000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SurfaceProcessingDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0066000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RecommendedPresentationOpacity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0066000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RecommendedPresentationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0066000D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FiniteVolume(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0066000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Manifold(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00660010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfacePointsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfacePointsNormalsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfaceMeshPrimitivesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfSurfacePoints(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00660015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString PointCoordinatesData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00660016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PointPositionAccuracy(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00660017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MeanPointDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00660018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MaximumPointDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00660019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PointsBoundingBoxCoordinates(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0066001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AxisOfRotation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0066001B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CenterOfRotation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("0066001C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfVectors(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0066001E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort VectorDimensionality(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0066001F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VectorAccuracy(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00660020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString VectorCoordinateData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00660021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString TrianglePointIndexList(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00660023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString EdgePointIndexList(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00660024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString VertexPointIndexList(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00660025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TriangleStripSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TriangleFanSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LineSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString PrimitivePointIndexList(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00660029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SurfaceCount(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0066002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSurfaceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0066002B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong ReferencedSurfaceNumber(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0066002C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentSurfaceGenerationAlgorithmIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0066002D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentSurfaceSourceInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0066002E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AlgorithmFamilyCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0066002F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AlgorithmNameCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AlgorithmVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00660031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText AlgorithmParameters(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00660032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FacetSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfaceProcessingAlgorithmIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AlgorithmName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00660036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RecommendedPointRadius(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00660037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RecommendedLineThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00660038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherLongString LongPrimitivePointIndexList(params Byte[] data)
        {
            var element = (new OtherLongString());
            element.Tag = (new Tag("00660040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherLongString LongTrianglePointIndexList(params Byte[] data)
        {
            var element = (new OtherLongString());
            element.Tag = (new Tag("00660041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherLongString LongEdgePointIndexList(params Byte[] data)
        {
            var element = (new OtherLongString());
            element.Tag = (new Tag("00660042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherLongString LongVertexPointIndexList(params Byte[] data)
        {
            var element = (new OtherLongString());
            element.Tag = (new Tag("00660043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TrackSetSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TrackSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString RecommendedDisplayCIELabValueList(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00660103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TrackingAlgorithmIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TrackSetNumber(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00660105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TrackSetLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00660106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText TrackSetDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00660107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TrackSetAnatomicalTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TrackSetStatisticsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString FloatingPointValues(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00660125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherLongString TrackPointIndexList(params Byte[] data)
        {
            var element = (new OtherLongString());
            element.Tag = (new Tag("00660129"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TrackStatisticsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasurementValuesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660132"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DiffusionAcquisitionCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660133"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DiffusionModelCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00660134"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantSize(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00686210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantTemplateVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00686221"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReplacedImplantTemplateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImplantType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00686223"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DerivationImplantTemplateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OriginalImplantTemplateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686225"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime EffectiveDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00686226"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantTargetAnatomySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InformationFromManufacturerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686260"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence NotificationFromManufacturerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686265"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime InformationIssueDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00686270"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText InformationSummary(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00686280"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantRegulatoryDisapprovalCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006862A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble OverallTemplateSpatialTolerance(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006862A5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HPGLDocumentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006862C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HPGLDocumentID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("006862D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HPGLDocumentLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("006862D5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ViewOrientationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006862E0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ViewOrientationModifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006862F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble HPGLDocumentScaling(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006862F2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString HPGLDocument(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00686300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HPGLContourPenNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00686310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HPGLPenSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HPGLPenNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00686330"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HPGLPenLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00686340"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText HPGLPenDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00686345"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RecommendedRotationPoint(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686346"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BoundingRectangle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686347"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImplantTemplate3DModelSurfaceNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00686350"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfaceModelDescriptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686360"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SurfaceModelLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00686380"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SurfaceModelScalingFactor(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686390"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MaterialsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006863A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CoatingMaterialsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006863A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006863A8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FixationMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006863AC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MatingFeatureSetsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006863B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MatingFeatureSetID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("006863C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString MatingFeatureSetLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("006863D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MatingFeatureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006863E0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MatingFeatureID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("006863F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MatingFeatureDegreeOfFreedomSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DegreeOfFreedomID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00686410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DegreeOfFreedomType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00686420"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TwoDMatingFeatureCoordinatesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686430"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedHPGLDocumentID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00686440"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDMatingPoint(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686450"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDMatingAxes(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686460"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TwoDDegreeOfFreedomSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686470"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDDegreeOfFreedomAxis(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686490"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RangeOfFreedom(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006864A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDMatingPoint(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006864C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDMatingAxes(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006864D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDDegreeOfFreedomAxis(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006864F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanningLandmarkPointSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanningLandmarkLineSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanningLandmarkPlaneSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686520"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PlanningLandmarkID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00686530"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PlanningLandmarkDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00686540"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanningLandmarkIdentificationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686545"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TwoDPointCoordinatesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00686550"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDPointCoordinates(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686560"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDPointCoordinates(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686590"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TwoDLineCoordinatesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006865A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDLineCoordinates(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006865B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDLineCoordinates(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006865D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TwoDPlaneCoordinatesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("006865E0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDPlaneIntersection(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("006865F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDPlaneOrigin(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686610"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDPlaneNormal(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00686620"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModelModification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00687001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModelMirroring(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00687002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ModelUsageCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00687003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GraphicAnnotationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GraphicLayer(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BoundingBoxAnnotationUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnchorPointAnnotationUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GraphicAnnotationUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText UnformattedTextValue(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00700006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TextObjectSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GraphicObjectSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BoundingBoxTopLeftHandCorner(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BoundingBoxBottomRightHandCorner(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BoundingBoxTextHorizontalJustification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AnchorPoint(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnchorPointVisibility(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GraphicDimensions(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfGraphicPoints(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GraphicData(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GraphicType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GraphicFilled(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ImageRotationRetired(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00700040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageHorizontalFlip(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageRotation(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DisplayedAreaTopLeftHandCornerTrial(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DisplayedAreaBottomRightHandCornerTrial(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong DisplayedAreaTopLeftHandCorner(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("00700052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong DisplayedAreaBottomRightHandCorner(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("00700053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DisplayedAreaSelectionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0070005A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GraphicLayerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString GraphicLayerOrder(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00700062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GraphicLayerRecommendedDisplayGrayscaleValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GraphicLayerRecommendedDisplayRGBValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString GraphicLayerDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00700068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContentLabel(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContentDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00700081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date PresentationCreationDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00700082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time PresentationCreationTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("00700083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName ContentCreatorName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("00700084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContentCreatorIdentificationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AlternateContentDescriptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700087"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PresentationSizeMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PresentationPixelSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00700101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PresentationPixelAspectRatio(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00700102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PresentationPixelMagnificationRatio(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString GraphicGroupLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00700207"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText GraphicGroupDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00700208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CompoundGraphicSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700209"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong CompoundGraphicInstanceID(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00700226"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FontName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00700227"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FontNameType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700228"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CSSFontName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00700229"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RotationAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00700230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TextStyleSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700231"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LineStyleSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700232"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FillStyleSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700233"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GraphicGroupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700234"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort TextColorCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700241"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString HorizontalAlignment(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VerticalAlignment(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700243"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShadowStyle(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ShadowOffsetX(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700245"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ShadowOffsetY(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700246"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ShadowColorCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700247"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Underlined(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700248"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Bold(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700249"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Italic(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PatternOnColorCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PatternOffColorCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700252"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle LineThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700253"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LineDashingStyle(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700254"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong LinePattern(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00700255"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString FillPattern(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00700256"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FillMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700257"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ShadowOpacity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700258"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GapLength(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700261"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DiameterOfVisibility(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700262"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RotationPoint(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700273"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TickAlignment(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700274"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShowTickLabel(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700278"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TickLabelAlignment(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700279"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompoundGraphicUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700282"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PatternOnOpacity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700284"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle PatternOffOpacity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700285"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MajorTicksSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700287"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TickPosition(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700288"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TickLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00700289"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompoundGraphicType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700294"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong GraphicGroupID(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00700295"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShapeType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RegistrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MatrixRegistrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700309"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MatrixSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0070030A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0070030B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FrameOfReferenceTransformationMatrixType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0070030C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RegistrationTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0070030D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText FiducialDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0070030F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FiducialIdentifier(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00700310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FiducialIdentifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700311"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ContourUncertaintyRadius(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00700312"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UsedFiducialsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700314"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GraphicCoordinatesDataSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700318"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier FiducialUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0070031A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedFiducialUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0070031B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FiducialSetSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0070031C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FiducialSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0070031E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FiducialsPropertyCategoryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0070031F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GraphicLayerRecommendedDisplayCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00700401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BlendingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RelativeOpacity(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00700403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSpatialRegistrationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00700404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlendingPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00700405"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier PresentationDisplayCollectionUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00701101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier PresentationSequenceCollectionUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00701102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PresentationSequencePositionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RenderedImageReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VolumetricPresentationStateInputSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PresentationInputType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort InputSequencePositionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Crop(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CroppingSpecificationIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701205"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompositingMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701206"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort VolumetricPresentationInputNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701207"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageVolumeGeometry(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier VolumetricPresentationInputSetUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00701209"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VolumetricPresentationInputSetSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0070120A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GlobalCrop(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0070120B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort GlobalCroppingSpecificationIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0070120C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RenderingMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0070120D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VolumeCroppingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VolumeCroppingMethod(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BoundingBoxCrop(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ObliqueCroppingPlaneSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701304"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble Plane(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701305"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble PlaneNormal(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CroppingSpecificationNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701309"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MultiPlanarReconstructionStyle(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701501"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MPRThicknessType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701502"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MPRSlabThickness(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701503"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MPRTopLeftHandCorner(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701505"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MPRViewWidthDirection(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701507"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MPRViewWidth(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701508"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfVolumetricCurvePoints(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("0070150C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherDoubleString VolumetricCurvePoints(params Byte[] data)
        {
            var element = (new OtherDoubleString());
            element.Tag = (new Tag("0070150D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MPRViewHeightDirection(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701511"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MPRViewHeight(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701512"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RenderProjection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701602"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ViewpointPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701603"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ViewpointLookAtPoint(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701604"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ViewpointUpDirection(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701605"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RenderFieldOfView(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701606"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SamplingStepSize(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701607"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShadingStyle(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701701"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AmbientReflectionIntensity(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701702"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble LightDirection(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701703"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DiffuseReflectionIntensity(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701704"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SpecularReflectionIntensity(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701705"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble Shininess(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701706"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PresentationStateClassificationComponentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701801"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ComponentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701802"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ComponentInputSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701803"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort VolumetricPresentationInputIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701804"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PresentationStateCompositorComponentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701805"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WeightingTransferFunctionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701806"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort WeightingLookupTableDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701807"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString WeightingLookupTableData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00701808"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VolumetricAnnotationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701901"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedStructuredContextSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701903"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedContentItem(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00701904"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VolumetricPresentationInputAnnotationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701905"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnnotationClipping(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701907"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PresentationAnimationStyle(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701A01"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble RecommendedAnimationRate(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701A03"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnimationCurveSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701A04"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble AnimationStepSize(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701A05"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SwivelRange(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701A06"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherDoubleString VolumetricCurveUpDirections(params Byte[] data)
        {
            var element = (new OtherDoubleString());
            element.Tag = (new Tag("00701A07"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence VolumeStreamSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701A08"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RGBATransferFunctionDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00701A09"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AdvancedBlendingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701B01"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BlendingInputNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00701B02"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BlendingDisplayInputSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701B03"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BlendingDisplaySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701B04"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlendingMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701B06"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TimeSeriesBlending(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701B07"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeometryForDisplay(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701B08"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ThresholdSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701B11"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ThresholdValueSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00701B12"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ThresholdType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00701B13"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThresholdValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00701B14"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString HangingProtocolName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00720002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HangingProtocolDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString HangingProtocolLevel(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HangingProtocolCreator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime HangingProtocolCreationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("0072000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HangingProtocolDefinitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0072000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence HangingProtocolUserIdentificationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0072000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString HangingProtocolUserGroupName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceHangingProtocolSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfPriorsReferenced(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageSetsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageSetSelectorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageSetSelectorUsageFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag SelectorAttribute(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00720026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SelectorValueNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TimeBasedImageSetsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageSetNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageSetSelectorCategory(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RelativeTime(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RelativeTimeUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0072003A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort AbstractPriorValue(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("0072003C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AbstractPriorCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0072003E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImageSetLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SelectorAttributeVR(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag SelectorSequencePointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00720052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SelectorSequencePointerPrivateCreator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SelectorAttributePrivateCreator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity SelectorAEValue(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("0072005E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AgeString SelectorASValue(params String[] data)
        {
            var element = (new AgeString());
            element.Tag = (new Tag("0072005F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag SelectorATValue(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00720060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date SelectorDAValue(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("00720061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SelectorCSValue(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime SelectorDTValue(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("00720063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SelectorISValue(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00720064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString SelectorOBValue(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("00720065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SelectorLOValue(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString SelectorOFValue(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00720067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText SelectorLTValue(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00720068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString SelectorOWValue(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("00720069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName SelectorPNValue(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("0072006A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time SelectorTMValue(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("0072006B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString SelectorSHValue(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("0072006C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Unknown SelectorUNValue(params Byte[] data)
        {
            var element = (new Unknown());
            element.Tag = (new Tag("0072006D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SelectorSTValue(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("0072006E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter SelectorUCValue(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("0072006F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText SelectorUTValue(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00720070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId SelectorURValue(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("00720071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SelectorDSValue(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00720072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherDoubleString SelectorODValue(params Byte[] data)
        {
            var element = (new OtherDoubleString());
            element.Tag = (new Tag("00720073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SelectorFDValue(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00720074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherLongString SelectorOLValue(params Byte[] data)
        {
            var element = (new OtherLongString());
            element.Tag = (new Tag("00720075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SelectorFLValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("00720076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SelectorULValue(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00720078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SelectorUSValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0072007A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedLong SelectorSLValue(params Int32[] data)
        {
            var element = (new SignedLong());
            element.Tag = (new Tag("0072007C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort SelectorSSValue(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("0072007E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SelectorUIValue(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("0072007F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SelectorCodeSequenceValue(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfScreens(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence NominalScreenDefinitionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfVerticalPixels(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfHorizontalPixels(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DisplayEnvironmentSpatialPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00720108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ScreenMinimumGrayscaleBitDepth(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0072010A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ScreenMinimumColorBitDepth(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0072010C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ApplicationMaximumRepaintTime(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0072010E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DisplaySetsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DisplaySetNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DisplaySetLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DisplaySetPresentationGroup(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DisplaySetPresentationGroupDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00720206"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PartialDataDisplayHandling(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720208"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SynchronizedScrollingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DisplaySetScrollingGroup(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence NavigationIndicatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720214"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NavigationDisplaySet(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720216"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferenceDisplaySets(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720218"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageBoxesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageBoxNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageBoxLayoutType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720304"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageBoxTileHorizontalDimension(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageBoxTileVerticalDimension(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageBoxScrollDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageBoxSmallScrollType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720312"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageBoxSmallScrollAmount(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720314"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageBoxLargeScrollType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720316"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageBoxLargeScrollAmount(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720318"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageBoxOverlapPriority(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble CineRelativeToRealTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00720330"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FilterOperationsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720400"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FilterByCategory(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FilterByAttributePresence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FilterByOperator(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720406"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort StructuredDisplayBackgroundCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720420"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort EmptyImageBoxCIELabValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720421"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StructuredDisplayImageBoxSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720422"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StructuredDisplayTextBoxSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720424"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedFirstFrameSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720427"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageBoxSynchronizationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720430"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SynchronizedImageBoxList(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00720432"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TypeOfSynchronization(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720434"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlendingOperationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReformattingOperationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReformattingThickness(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00720512"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ReformattingInterval(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00720514"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReformattingOperationInitialViewDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720516"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ThreeDRenderingType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720520"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SortingOperationsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SortByCategory(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720602"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SortingDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720604"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DisplaySetPatientOrientation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720700"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VOIType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720702"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PseudoColorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720704"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PseudoColorPaletteInstanceReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00720705"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShowGrayscaleInverted(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720706"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShowImageTrueSizeFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720710"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShowGraphicAnnotationFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720712"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShowPatientDemographicsFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720714"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShowAcquisitionTechniquesFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720716"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DisplaySetHorizontalJustification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720717"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DisplaySetVerticalJustification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00720718"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ContinuationStartMeterset(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00740120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ContinuationEndMeterset(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00740121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ProcedureStepState(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureStepProgressInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ProcedureStepProgress(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00741004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ProcedureStepProgressDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00741006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureStepProgressParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureStepCommunicationsURISequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniversalResourceId ContactURI(params String[] data)
        {
            var element = (new UniversalResourceId());
            element.Tag = (new Tag("0074100A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ContactDisplayName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0074100C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureStepDiscontinuationReasonCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0074100E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BeamTaskSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BeamTaskType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString BeamOrderIndexTrial(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00741024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AutosequenceFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableTopVerticalAdjustedPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00741026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableTopLongitudinalAdjustedPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00741027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableTopLateralAdjustedPosition(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00741028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble PatientSupportAdjustedAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0074102A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableTopEccentricAdjustedAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0074102B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableTopPitchAdjustedAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0074102C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TableTopRollAdjustedAngle(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0074102D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeliveryVerificationImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString VerificationImageTiming(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DoubleExposureFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DoubleExposureOrdering(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoubleExposureMetersetTrial(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00741038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoubleExposureFieldDeltaTrial(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("0074103A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelatedReferenceRTImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GeneralMachineVerificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConventionalMachineVerificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonMachineVerificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FailedAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OverriddenAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0074104A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConventionalControlPointVerificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0074104C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonControlPointVerificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0074104E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AttributeOccurrenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag AttributeOccurrencePointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00741052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong AttributeItemSelector(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00741054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AttributeOccurrencePrivateCreator(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00741056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SelectorSequencePointerItems(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00741057"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScheduledProcedureStepPriority(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString WorklistLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00741202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ProcedureStepLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00741204"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ScheduledProcessingParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerformedProcessingParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UnifiedProcedureStepPerformedProcedureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741216"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelatedProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ProcedureStepRelationshipType(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00741222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReplacedProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DeletionLock(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00741230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity ReceivingAE(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00741234"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity RequestingAE(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00741236"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ReasonForCancellation(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("00741238"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SCPStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SubscriptionListStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString UnifiedProcedureStepListStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00741246"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong BeamOrderIndex(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00741324"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DoubleExposureMeterset(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00741338"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DoubleExposureFieldDelta(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("0074133A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BrachyTaskSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContinuationStartTotalReferenceAirKerma(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00741402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContinuationEndTotalReferenceAirKerma(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00741403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ContinuationPulseNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00741404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelDeliveryOrderSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741405"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedChannelNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("00741406"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString StartCumulativeTimeWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00741407"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EndCumulativeTimeWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("00741408"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OmittedChannelSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00741409"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReasonForChannelOmission(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0074140A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReasonForChannelOmissionDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("0074140B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ChannelDeliveryOrderIndex(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("0074140C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelDeliveryContinuationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0074140D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OmittedApplicationSetupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0074140E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantAssemblyTemplateName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00760001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantAssemblyTemplateIssuer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00760003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantAssemblyTemplateVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00760006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReplacedImplantAssemblyTemplateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00760008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImplantAssemblyTemplateType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("0076000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OriginalImplantAssemblyTemplateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0076000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DerivationImplantAssemblyTemplateSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0076000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantAssemblyTemplateTargetAnatomySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00760010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProcedureTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00760020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SurgicalTechnique(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00760030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ComponentTypesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00760032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ComponentTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00760034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExclusiveComponentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00760036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MandatoryComponentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00760038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ComponentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00760040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ComponentID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00760055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ComponentAssemblySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00760060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Component1ReferencedID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00760070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Component1ReferencedMatingFeatureSetID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00760080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Component1ReferencedMatingFeatureID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00760090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Component2ReferencedID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("007600A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Component2ReferencedMatingFeatureSetID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("007600B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Component2ReferencedMatingFeatureID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("007600C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantTemplateGroupName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00780001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ImplantTemplateGroupDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00780010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantTemplateGroupIssuer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00780020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantTemplateGroupVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00780024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReplacedImplantTemplateGroupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00780026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantTemplateGroupTargetAnatomySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00780028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantTemplateGroupMembersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0078002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImplantTemplateGroupMemberID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("0078002E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDImplantTemplateGroupMemberMatchingPoint(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00780050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ThreeDImplantTemplateGroupMemberMatchingAxes(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00780060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantTemplateGroupMemberMatching2DCoordinatesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00780070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDImplantTemplateGroupMemberMatchingPoint(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00780090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble TwoDImplantTemplateGroupMemberMatchingAxes(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("007800A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantTemplateGroupVariationDimensionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("007800B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImplantTemplateGroupVariationDimensionName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("007800B2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImplantTemplateGroupVariationDimensionRankSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("007800B4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedImplantTemplateGroupMemberID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("007800B6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImplantTemplateGroupVariationDimensionRank(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("007800B8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfaceScanAcquisitionTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00800001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SurfaceScanModeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00800002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RegistrationMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00800003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ShotDurationTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00800004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble ShotOffsetTime(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("00800005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SurfacePointPresentationValueData(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00800006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SurfacePointColorCIELabValueData(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00800007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence UVMappingSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00800008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TextureLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00800009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString UValueData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00800010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString VValueData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("00800011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedTextureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00800012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSurfaceDataSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00800013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AssessmentSummary(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00820001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText AssessmentSummaryDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00820003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssessedSOPInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedComparisonSOPInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfAssessmentObservations(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00820006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssessmentObservationsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ObservationSignificance(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00820008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ObservationDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("0082000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StructuredConstraintObservationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("0082000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssessedAttributeValueSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AssessmentSetID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00820016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssessmentRequesterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SelectorAttributeName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00820018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SelectorAttributeKeyword(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00820019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AssessmentTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ObservationBasisCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AssessmentLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00820023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConstraintType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00820032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText SpecificationSelectionGuidance(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00820033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConstraintValueSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecommendedDefaultValueSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00820035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConstraintViolationSignificance(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00820036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ConstraintViolationCondition(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("00820037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModifiableConstraintFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("00820038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString StorageMediaFileSetID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("00880130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier StorageMediaFileSetUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00880140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IconImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("00880200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TopicTitle(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00880904"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText TopicSubject(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("00880906"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TopicAuthor(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00880910"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TopicKeywords(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00880912"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SOPInstanceStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("01000410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime SOPAuthorizationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("01000420"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText SOPAuthorizationComment(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("01000424"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AuthorizationEquipmentCertificationNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("01000426"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MACIDNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("04000005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier MACCalculationTransferSyntaxUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("04000010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MACAlgorithm(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("04000015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag DataElementsSigned(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("04000020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier DigitalSignatureUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("04000100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime DigitalSignatureDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("04000105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CertificateType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("04000110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString CertificateOfSigner(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("04000115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString Signature(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("04000120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CertifiedTimestampType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("04000305"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString CertifiedTimestamp(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("04000310"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DigitalSignaturePurposeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("04000401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedDigitalSignatureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("04000402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSOPInstanceMACSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("04000403"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString MAC(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("04000404"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EncryptedAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("04000500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier EncryptedContentTransferSyntaxUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("04000510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString EncryptedContent(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("04000520"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ModifiedAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("04000550"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OriginalAttributesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("04000561"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime AttributeModificationDateTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("04000562"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ModifyingSystem(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("04000563"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SourceOfPreviousValues(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("04000564"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReasonForTheAttributeModification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("04000565"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InstanceOriginStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("04000600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort EscapeTriplet(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("1000xxx0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RunLengthTriplet(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("1000xxx1"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HuffmanTableSize(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("1000xxx2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort HuffmanTableTriplet(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("1000xxx3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ShiftTableSize(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("1000xxx4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ShiftTableTriplet(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("1000xxx5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ZonalMap(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("1010xxxx"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfCopies(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("20000010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrinterConfigurationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("2000001E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PrintPriority(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MediumType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FilmDestination(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FilmSessionLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("20000050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString MemoryAllocation(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("20000060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString MaximumMemoryAllocation(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("20000061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ColorImagePrintingFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CollationFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnnotationFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageOverlayFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PresentationLUTFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20000069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ImageBoxPresentationLUTFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("2000006A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MemoryBitDepth(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("200000A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PrintingBitDepth(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("200000A1"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MediaInstalledSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("200000A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OtherMediaAvailableSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("200000A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SupportedImageDisplayFormatsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("200000A8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedFilmBoxSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20000500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedStoredPrintSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20000510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ImageDisplayFormat(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("20100010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AnnotationDisplayFormatID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FilmOrientation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FilmSizeID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PrinterResolutionID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DefaultPrinterResolutionID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MagnificationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SmoothingType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DefaultMagnificationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("201000A6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OtherMagnificationTypesAvailable(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("201000A7"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DefaultSmoothingType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("201000A8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OtherSmoothingTypesAvailable(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("201000A9"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BorderDensity(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString EmptyImageDensity(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MinDensity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("20100120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MaxDensity(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("20100130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Trim(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20100140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ConfigurationInformation(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("20100150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ConfigurationInformationDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("20100152"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString MaximumCollatedFilms(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("20100154"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Illumination(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("2010015E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReflectedAmbientLight(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("20100160"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PrinterPixelSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("20100376"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedFilmSessionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20100500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedImageBoxSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20100510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedBasicAnnotationBoxSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20100520"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageBoxPosition(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("20200010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString Polarity(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20200020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RequestedImageSize(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("20200030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RequestedDecimateCropBehavior(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20200040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RequestedResolutionID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20200050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RequestedImageSizeFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("202000A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DecimateCropResult(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("202000A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BasicGrayscaleImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20200110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BasicColorImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20200111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedImageOverlayBoxSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20200130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedVOILUTBoxSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20200140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AnnotationPosition(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("20300010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TextString(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("20300020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedOverlayPlaneSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20400010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedOverlayPlaneGroups(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("20400011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OverlayPixelDataSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20400020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayMagnificationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20400060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlaySmoothingType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20400070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayOrImageMagnification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20400072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MagnifyToNumberOfColumns(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("20400074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayForegroundDensity(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20400080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayBackgroundDensity(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20400082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20400090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ThresholdDensity(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20400100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedImageBoxSequenceRetired(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20400500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PresentationLUTSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20500010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PresentationLUTShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("20500020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPresentationLUTSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("20500500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PrintJobID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("21000010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExecutionStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("21000020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ExecutionStatusInfo(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("21000030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date CreationDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("21000040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time CreationTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("21000050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity Originator(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("21000070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity DestinationAE(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("21000140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString OwnerID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("21000160"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfFilms(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("21000170"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPrintJobSequencePullStoredPrint(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21000500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PrinterStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("21100010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PrinterStatusInfo(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("21100020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PrinterName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("21100030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PrintQueueID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("21100099"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString QueueStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("21200010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrintJobDescriptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21200050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPrintJobSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21200070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrintManagementCapabilitiesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21300010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrinterCharacteristicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21300015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FilmBoxContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21300030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageBoxContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21300040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnnotationContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21300050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ImageOverlayBoxContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21300060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PresentationLUTContentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("21300080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ProposedStudySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("213000A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OriginalImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("213000C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LabelUsingInformationExtractedFromInstances(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("22000001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText LabelText(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("22000002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LabelStyleSelection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("22000003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText MediaDisposition(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("22000004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText BarcodeValue(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("22000005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BarcodeSymbology(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("22000006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AllowMediaSplitting(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("22000007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IncludeNonDICOMObjects(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("22000008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString IncludeDisplayApplication(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("22000009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PreserveCompositeInstancesAfterMediaCreation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("2200000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort TotalNumberOfPiecesOfMediaCreated(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("2200000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RequestedMediaApplicationProfile(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("2200000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedStorageMediaSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("2200000D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag FailureAttributes(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("2200000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AllowLossyCompression(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("2200000F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RequestPriority(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("22000020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RTImageLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("30020002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RTImageName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30020003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText RTImageDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30020004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReportedValuesOrigin(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3002000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTImagePlane(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3002000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString XRayImageReceptorTranslation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3002000D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString XRayImageReceptorAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3002000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RTImageOrientation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImagePlanePixelSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RTImagePosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RadiationMachineName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("30020020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadiationMachineSAD(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RadiationMachineSSD(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString RTImageSID(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceToReferenceObjectDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString FractionNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30020029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ExposureSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30020030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MetersetExposure(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DiaphragmPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FluenceMapSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30020040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FluenceDataSource(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30020041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FluenceDataScale(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30020042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrimaryFluenceModeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30020050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FluenceMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30020051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FluenceModeID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("30020052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DVHType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30040001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DoseUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30040002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DoseType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30040004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SpatialTransformOfDose(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30040005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DoseComment(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30040006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NormalizationPoint(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DoseSummationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3004000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GridFrameOffsetVector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3004000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoseGridScaling(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3004000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTDoseROISequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30040010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoseValue(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TissueHeterogeneityCorrection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30040014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DVHNormalizationPoint(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DVHNormalizationDoseValue(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DVHSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30040050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DVHDoseScaling(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DVHVolumeUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30040054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString DVHNumberOfBins(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30040056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DVHData(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DVHReferencedROISequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30040060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DVHROIContributionType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30040062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DVHMinimumDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DVHMaximumDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DVHMeanDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30040074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString StructureSetLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("30060002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString StructureSetName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30060004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText StructureSetDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30060006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date StructureSetDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("30060008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time StructureSetTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("30060009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedFrameOfReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTReferencedStudySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTReferencedSeriesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContourImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PredecessorStructureSetSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence StructureSetROISequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ROINumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30060022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedFrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("30060024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ROIName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30060026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ROIDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30060028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ROIDisplayColor(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("3006002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ROIVolume(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3006002C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTRelatedROISequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTROIRelationship(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30060033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ROIGenerationAlgorithm(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30060036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ROIDerivationAlgorithmIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ROIGenerationDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30060038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ROIContourSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ContourSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ContourGeometricType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30060042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContourSlabThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30060044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContourOffsetVector(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30060045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfContourPoints(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30060046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ContourNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30060048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString AttachedContours(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30060049"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ContourData(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30060050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTROIObservationsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ObservationNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30060082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedROINumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30060084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ROIObservationLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("30060085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTROIIdentificationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30060086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ROIObservationDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30060088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelatedRTROIObservationsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300600A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTROIInterpretedType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300600A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName ROIInterpreter(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("300600A6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ROIPhysicalPropertiesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300600B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ROIPhysicalProperty(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300600B2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ROIPhysicalPropertyValue(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300600B4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ROIElementalCompositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300600B6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ROIElementalCompositionAtomicNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("300600B7"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ROIElementalCompositionAtomicMassFraction(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300600B8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AdditionalRTROIIdentificationCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300600B9"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FrameOfReferenceRelationshipSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300600C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RelatedFrameOfReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("300600C2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FrameOfReferenceTransformationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300600C4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FrameOfReferenceTransformationMatrix(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300600C6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FrameOfReferenceTransformationComment(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300600C8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MeasuredDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText MeasuredDoseDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30080012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString MeasuredDoseType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30080014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString MeasuredDoseValue(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TreatmentSessionBeamSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TreatmentSessionIonBeamSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CurrentFractionNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date TreatmentControlPointDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("30080024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time TreatmentControlPointTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("30080025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TreatmentTerminationStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3008002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TreatmentTerminationCode(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("3008002B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TreatmentVerificationStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3008002C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedTreatmentRecordSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpecifiedPrimaryMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpecifiedSecondaryMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveredPrimaryMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveredSecondaryMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpecifiedTreatmentTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3008003A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveredTreatmentTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3008003B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ControlPointDeliverySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonControlPointDeliverySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpecifiedMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveredMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MetersetRateSet(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("30080045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MetersetRateDelivered(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("30080046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ScanSpotMetersetsDelivered(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("30080047"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoseRateDelivered(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TreatmentSummaryCalculatedDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CumulativeDoseToDoseReference(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date FirstTreatmentDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("30080054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date MostRecentTreatmentDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("30080056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfFractionsDelivered(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("3008005A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OverrideSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag ParameterSequencePointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("30080061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag OverrideParameterPointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("30080062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ParameterItemIndex(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString MeasuredDoseReferenceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag ParameterPointer(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("30080065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText OverrideReason(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30080066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ParameterValueNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30080067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CorrectedParameterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CorrectionValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("3008006A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CalculatedDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CalculatedDoseReferenceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText CalculatedDoseReferenceDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30080074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CalculatedDoseReferenceDoseValue(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString StartMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EndMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3008007A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedMeasuredDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedMeasuredDoseReferenceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedCalculatedDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedCalculatedDoseReferenceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BeamLimitingDeviceLeafPairsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedWedgeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedCompensatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedBlockSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TreatmentSummaryMeasuredDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800E0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedSnoutSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedRangeShifterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800F2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedLateralSpreadingDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800F4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedRangeModulatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300800F6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedSourceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SourceSerialNumber(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30080105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TreatmentSessionApplicationSetupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ApplicationSetupCheck(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30080116"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedBrachyAccessoryDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedBrachyAccessoryDeviceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedChannelSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpecifiedChannelTotalTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080132"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveredChannelTotalTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("30080134"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SpecifiedNumberOfPulses(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080136"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString DeliveredNumberOfPulses(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080138"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SpecifiedPulseRepetitionInterval(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3008013A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveredPulseRepetitionInterval(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("3008013C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedSourceApplicatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedSourceApplicatorNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080142"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RecordedChannelShieldSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedChannelShieldNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080152"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BrachyControlPointDeliveredSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080160"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date SafePositionExitDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("30080162"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time SafePositionExitTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("30080164"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date SafePositionReturnDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("30080166"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time SafePositionReturnTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("30080168"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PulseSpecificBrachyControlPointDeliveredSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080171"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PulseNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30080172"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BrachyPulseControlPointDeliveredSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080173"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CurrentTreatmentStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30080200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText TreatmentStatusComment(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30080202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FractionGroupSummarySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080220"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedFractionNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("30080223"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FractionGroupType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30080224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BeamStopperPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30080230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FractionStatusSummarySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30080240"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date TreatmentDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("30080250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time TreatmentTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("30080251"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RTPlanLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RTPlanName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText RTPlanDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A0004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date RTPlanDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("300A0006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time RTPlanTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("300A0007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TreatmentProtocols(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PlanIntent(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TreatmentSites(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTPlanGeometry(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText PrescriptionDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString DoseReferenceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier DoseReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("300A0013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DoseReferenceStructureType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString NominalBeamEnergyUnit(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DoseReferenceDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoseReferencePointCoordinates(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NominalPriorDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DoseReferenceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ConstraintWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveryWarningDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DeliveryMaximumDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TargetMinimumDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TargetPrescriptionDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TargetMaximumDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TargetUnderdoseVolumeFraction(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString OrganAtRiskFullVolumeDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString OrganAtRiskLimitDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A002B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString OrganAtRiskMaximumDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A002C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString OrganAtRiskOverdoseVolumeFraction(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A002D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ToleranceTableSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ToleranceTableNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ToleranceTableLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GantryAngleTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BeamLimitingDeviceAngleTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BeamLimitingDeviceToleranceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BeamLimitingDevicePositionTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A004A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SnoutPositionTolerance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A004B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PatientSupportAngleTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A004C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopEccentricAngleTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A004E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableTopPitchAngleTolerance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A004F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableTopRollAngleTolerance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopVerticalPositionTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopLongitudinalPositionTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopLateralPositionTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTPlanRelationship(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FractionGroupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString FractionGroupNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString FractionGroupDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfFractionsPlanned(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfFractionPatternDigitsPerDay(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0079"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RepeatFractionCycleLength(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A007A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText FractionPattern(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("300A007B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfBeams(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BeamDoseSpecificationPoint(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedDoseReferenceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("300A0083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BeamDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BeamMeterset(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BeamDosePointDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BeamDosePointEquivalentDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0089"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BeamDosePointSSD(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A008A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BeamDoseMeaning(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A008B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BeamDoseVerificationControlPointSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A008C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AverageBeamDosePointDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A008D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AverageBeamDosePointEquivalentDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A008E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AverageBeamDosePointSSD(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A008F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BeamDoseType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0090"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString AlternateBeamDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0091"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AlternateBeamDoseType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0092"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DepthValueAveragingFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0093"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BeamDosePointSourceToExternalContourDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0094"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfBrachyApplicationSetups(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BrachyApplicationSetupDoseSpecificationPoint(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BrachyApplicationSetupDose(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BeamSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A00B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TreatmentMachineName(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A00B2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PrimaryDosimeterUnit(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00B3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceAxisDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00B4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BeamLimitingDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A00B6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTBeamLimitingDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00B8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceToBeamLimitingDeviceDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00BA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToBeamLimitingDeviceDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A00BB"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfLeafJawPairs(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00BC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString LeafPositionBoundaries(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00BE"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString BeamNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString BeamName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A00C2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText BeamDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A00C3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BeamType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00C4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble BeamDeliveryDurationLimit(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("300A00C5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RadiationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00C6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString HighDoseTechniqueType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00C7"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferenceImageNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00C8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlannedVerificationImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A00CA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ImagingDeviceSpecificAcquisitionParameters(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A00CC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TreatmentDeliveryType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00CE"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfWedges(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WedgeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A00D1"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString WedgeNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00D2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WedgeType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00D3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString WedgeID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A00D4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString WedgeAngle(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00D5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00D6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TotalWedgeTrayWaterEquivalentThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A00D7"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString WedgeOrientation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00D8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToWedgeTrayDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A00D9"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceToWedgeTrayDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00DA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle WedgeThinEdgePosition(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A00DB"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString BolusID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A00DC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText BolusDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A00DD"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EffectiveWedgeAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00DE"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfCompensators(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00E0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString MaterialID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A00E1"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TotalCompensatorTrayFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00E2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CompensatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A00E3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CompensatorNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00E4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CompensatorID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A00E5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceToCompensatorTrayDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00E6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CompensatorRows(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00E7"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString CompensatorColumns(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00E8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CompensatorPixelSpacing(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00E9"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CompensatorPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00EA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CompensatorTransmissionData(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00EB"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CompensatorThicknessData(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00EC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfBoli(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00ED"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompensatorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00EE"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CompensatorTrayID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A00EF"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfBlocks(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TotalBlockTrayFactor(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00F2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TotalBlockTrayWaterEquivalentThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A00F3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BlockSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A00F4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString BlockTrayID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A00F5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceToBlockTrayDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A00F6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToBlockTrayDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A00F7"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlockType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00F8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString AccessoryCode(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A00F9"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlockDivergence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00FA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BlockMountingPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A00FB"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString BlockNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A00FC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString BlockName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A00FE"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BlockThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BlockTransmission(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString BlockNumberOfPoints(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BlockData(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ApplicatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0107"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ApplicatorID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ApplicatorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0109"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ApplicatorDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A010A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CumulativeDoseReferenceCoefficient(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A010C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FinalCumulativeMetersetWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A010E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfControlPoints(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ControlPointSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ControlPointIndex(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString NominalBeamEnergy(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString DoseRateSet(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WedgePositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0116"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WedgePosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0118"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BeamLimitingDevicePositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A011A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString LeafJawPositions(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A011C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString GantryAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A011E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GantryRotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A011F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BeamLimitingDeviceAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BeamLimitingDeviceRotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0121"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PatientSupportAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0122"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientSupportRotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0123"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopEccentricAxisDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0124"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopEccentricAngle(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0125"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TableTopEccentricRotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0126"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopVerticalPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0128"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopLongitudinalPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0129"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopLateralPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A012A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString IsocenterPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A012C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SurfaceEntryPoint(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A012E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceToSurfaceDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0130"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AverageBeamDosePointSourceToExternalContourDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0131"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SourceToExternalContourDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0132"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ExternalContourEntryPoint(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0133"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CumulativeMetersetWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0134"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableTopPitchAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0140"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TableTopPitchRotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0142"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TableTopRollAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0144"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TableTopRollRotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0146"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle HeadFixationAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0148"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GantryPitchAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A014A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GantryPitchRotationDirection(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A014C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle GantryPitchAngleTolerance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A014E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FixationEye(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0150"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChairHeadFramePosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0151"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString HeadFixationAngleTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0152"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChairHeadFramePositionTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0153"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FixationLightAzimuthalAngleTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0154"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FixationLightPolarAngleTolerance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0155"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientSetupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0180"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString PatientSetupNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0182"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientSetupLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0183"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientAdditionalPosition(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0184"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FixationDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0190"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FixationDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0192"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FixationDeviceLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0194"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText FixationDeviceDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A0196"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString FixationDevicePosition(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0198"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FixationDevicePitchAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0199"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FixationDeviceRollAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A019A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ShieldingDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A01A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ShieldingDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A01A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ShieldingDeviceLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A01A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ShieldingDeviceDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A01A6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ShieldingDevicePosition(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A01A8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SetupTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A01B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SetupTechniqueDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A01B2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SetupDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A01B4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SetupDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A01B6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString SetupDeviceLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A01B8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SetupDeviceDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A01BA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SetupDeviceParameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A01BC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SetupReferenceDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A01D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopVerticalSetupDisplacement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A01D2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopLongitudinalSetupDisplacement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A01D4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TableTopLateralSetupDisplacement(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A01D6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BrachyTreatmentTechnique(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BrachyTreatmentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TreatmentMachineSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0206"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SourceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SourceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0214"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SourceManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0216"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ActiveSourceDiameter(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0218"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ActiveSourceLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A021A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString SourceModelID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A021B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SourceDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A021C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceEncapsulationNominalThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0222"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceEncapsulationNominalTransmission(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0224"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SourceIsotopeName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0226"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceIsotopeHalfLife(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0228"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SourceStrengthUnits(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0229"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ReferenceAirKermaRate(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A022A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceStrength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A022B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date SourceStrengthReferenceDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("300A022C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time SourceStrengthReferenceTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("300A022E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ApplicationSetupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ApplicationSetupType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0232"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ApplicationSetupNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0234"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ApplicationSetupName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0236"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ApplicationSetupManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0238"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TemplateNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0240"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString TemplateType(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0242"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TemplateName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0244"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TotalReferenceAirKerma(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0250"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BrachyAccessoryDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0260"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString BrachyAccessoryDeviceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0262"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString BrachyAccessoryDeviceID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0263"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BrachyAccessoryDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0264"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString BrachyAccessoryDeviceName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0266"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BrachyAccessoryDeviceNominalThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A026A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BrachyAccessoryDeviceNominalTransmission(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A026C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelEffectiveLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0271"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelInnerLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0272"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString AfterloaderChannelID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0273"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceApplicatorTipLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0274"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0280"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ChannelNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0282"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0284"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelTotalTime(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0286"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SourceMovementType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0288"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfPulses(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A028A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PulseRepetitionInterval(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A028C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString SourceApplicatorNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0290"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString SourceApplicatorID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0291"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString SourceApplicatorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0292"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SourceApplicatorName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0294"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceApplicatorLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0296"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SourceApplicatorManufacturer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0298"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceApplicatorWallNominalThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A029C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceApplicatorWallNominalTransmission(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A029E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceApplicatorStepSize(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString TransferTubeNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A02A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString TransferTubeLength(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ChannelShieldSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A02B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ChannelShieldNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A02B2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ChannelShieldID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A02B3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ChannelShieldName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A02B4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelShieldNominalThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02B8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ChannelShieldNominalTransmission(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02BA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString FinalCumulativeTimeWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02C8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BrachyControlPointSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A02D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ControlPointRelativePosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02D2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ControlPoint3DPosition(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02D4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString CumulativeTimeWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02D6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompensatorDivergence(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A02E0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CompensatorMountingPosition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A02E1"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString SourceToCompensatorDistance(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A02E2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TotalCompensatorTrayWaterEquivalentThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A02E3"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToCompensatorTrayDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A02E4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CompensatorColumnOffset(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A02E5"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToCompensatorDistances(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A02E6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CompensatorRelativeStoppingPowerRatio(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A02E7"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CompensatorMillingToolDiameter(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A02E8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonRangeCompensatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A02EA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText CompensatorDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("300A02EB"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RadiationMassNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RadiationAtomicNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0304"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort RadiationChargeState(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("300A0306"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScanMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0308"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ModulatedScanModeType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0309"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VirtualSourceAxisDistances(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A030A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SnoutSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A030C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SnoutPosition(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A030D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString SnoutID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A030F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfRangeShifters(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0312"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RangeShifterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0314"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RangeShifterNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0316"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RangeShifterID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0318"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RangeShifterType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0320"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RangeShifterDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0322"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfLateralSpreadingDevices(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0330"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LateralSpreadingDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0332"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString LateralSpreadingDeviceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0334"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString LateralSpreadingDeviceID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0336"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LateralSpreadingDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0338"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString LateralSpreadingDeviceDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A033A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle LateralSpreadingDeviceWaterEquivalentThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A033C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfRangeModulators(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0340"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RangeModulatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0342"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString RangeModulatorNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0344"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RangeModulatorID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0346"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RangeModulatorType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0348"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RangeModulatorDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A034A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString BeamCurrentModulationID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A034C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PatientSupportType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0350"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString PatientSupportID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0352"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString PatientSupportAccessoryCode(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0354"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TrayAccessoryCode(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0355"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FixationLightAzimuthalAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0356"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle FixationLightPolarAngle(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0358"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle MetersetRate(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A035A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RangeShifterSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0360"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RangeShifterSetting(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0362"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToRangeShifterDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0364"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RangeShifterWaterEquivalentThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0366"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence LateralSpreadingDeviceSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0370"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString LateralSpreadingDeviceSetting(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300A0372"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToLateralSpreadingDeviceDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0374"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RangeModulatorSettingsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0380"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RangeModulatorGatingStartValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0382"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RangeModulatorGatingStopValue(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0384"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RangeModulatorGatingStartWaterEquivalentThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0386"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle RangeModulatorGatingStopWaterEquivalentThickness(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0388"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle IsocenterToRangeModulatorDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A038A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ScanSpotTimeOffset(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A038F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ScanSpotTuneID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0390"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ScanSpotPrescribedIndices(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0391"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfScanSpotPositions(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0392"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScanSpotReordered(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0393"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ScanSpotPositionMap(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0394"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScanSpotReorderingAllowed(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0395"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ScanSpotMetersetWeights(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0396"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ScanningSpotSize(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0398"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfPaintings(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A039A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonToleranceTableSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A03A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonBeamSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A03A2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonBeamLimitingDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A03A4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonBlockSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A03A6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonControlPointSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A03A8"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonWedgeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A03AA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IonWedgePositionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A03AC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedSetupImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0401"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText SetupImageComment(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A0402"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MotionSynchronizationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0410"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ControlPointOrientation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0412"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence GeneralAccessorySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0420"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString GeneralAccessoryID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("300A0421"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText GeneralAccessoryDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("300A0422"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GeneralAccessoryType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0423"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString GeneralAccessoryNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0424"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SourceToGeneralAccessoryDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0425"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ApplicatorGeometrySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0431"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ApplicatorApertureShape(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0432"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ApplicatorOpening(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0433"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ApplicatorOpeningX(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0434"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ApplicatorOpeningY(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0435"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SourceToApplicatorMountingPositionDistance(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0436"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfBlockSlabItems(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300A0440"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BlockSlabSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0441"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString BlockSlabThickness(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300A0442"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BlockSlabNumber(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("300A0443"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeviceMotionControlSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0450"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeviceMotionExecutionMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0451"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeviceMotionObservationMode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0452"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeviceMotionParameterCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0453"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DistalDepthFraction(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0501"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DistalDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0502"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle NominalRangeModulationFractions(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0503"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle NominalRangeModulatedRegionDepths(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0504"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DepthDoseParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0505"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeliveredDepthDoseParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300A0506"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DeliveredDistalDepthFraction(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0507"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DeliveredDistalDepth(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0508"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DeliveredNominalRangeModulationFractions(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0509"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle DeliveredNominalRangeModulatedRegionDepths(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("300A0510"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeliveredReferenceDoseDefinition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0511"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReferenceDoseDefinition(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300A0512"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedRTPlanSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedBeamSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedBeamNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C0006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedReferenceImageNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C0007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString StartCumulativeMetersetWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300C0008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString EndCumulativeMetersetWeight(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("300C0009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedBrachyApplicationSetupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedBrachyApplicationSetupNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedSourceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedFractionGroupSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedFractionGroupNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C0022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedVerificationImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedReferenceImageSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedDoseReferenceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C0051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BrachyReferencedDoseReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedStructureSetSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedPatientSetupNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C006A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedDoseSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedToleranceTableNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C00A0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedBolusSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C00B0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedWedgeNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C00C0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedCompensatorNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C00D0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedBlockNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C00E0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedControlPointIndex(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C00F0"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedControlPointSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C00F2"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedStartControlPointIndex(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C00F4"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedStopControlPointIndex(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C00F6"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedRangeShifterNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C0100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedLateralSpreadingDeviceNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C0102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ReferencedRangeModulatorNumber(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("300C0104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OmittedBeamTaskSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("300C0111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReasonForOmission(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300C0112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReasonForOmissionDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("300C0113"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ApprovalStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("300E0002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date ReviewDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("300E0004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time ReviewTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("300E0005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName ReviewerName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("300E0008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RadiobiologicalDoseEffectSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RadiobiologicalDoseEffectFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EffectiveDoseCalculationMethodCategoryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EffectiveDoseCalculationMethodCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString EffectiveDoseMethodDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30100005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ConceptualVolumeUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("30100006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OriginatingSOPInstanceReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeConstituentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EquivalentConceptualVolumeInstanceReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence EquivalentConceptualVolumesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010000A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedConceptualVolumeUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("3010000B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText ConceptualVolumeCombinationExpression(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("3010000C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ConceptualVolumeConstituentIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010000D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConceptualVolumeCombinationFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3010000E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ConceptualVolumeCombinationDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("3010000F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConceptualVolumeSegmentationDefinedFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeSegmentationReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeConstituentSegmentationReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ConstituentConceptualVolumeUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("30100013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DerivationConceptualVolumeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SourceConceptualVolumeUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("30100015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeDerivationAlgorithmSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ConceptualVolumeDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30100017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SourceConceptualVolumeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AuthorIdentificationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ManufacturersModelVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("3010001A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedCharacter DeviceAlternateIdentifier(params String[] data)
        {
            var element = (new UnlimitedCharacter());
            element.Tag = (new Tag("3010001B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DeviceAlternateIdentifierType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3010001C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText DeviceAlternateIdentifierFormat(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("3010001D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString SegmentationCreationTemplateLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("3010001E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier SegmentationTemplateUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("3010001F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedSegmentReferenceIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SegmentReferenceIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DirectSegmentReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CombinationSegmentReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentedRTAccessoryDeviceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentCharacteristicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RelatedSegmentCharacteristicsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort SegmentCharacteristicsPrecedence(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTSegmentAnnotationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010002A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentAnnotationCategoryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010002B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SegmentAnnotationTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010002C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DeviceLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("3010002D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeviceTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010002E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientEquipmentRelationshipCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedFiducialsUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("30100031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PatientTreatmentOrientationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100032"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString UserContentLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("30100033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString UserContentLongLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30100034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString EntityLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("30100035"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString EntityName(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30100036"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText EntityDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30100037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString EntityLongLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30100038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DeviceIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RTTreatmentPhaseIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010003A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RTTreatmentPhaseUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("3010003B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RTPrescriptionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010003C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RTSegmentAnnotationIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010003D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort BasisRTTreatmentPhaseIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010003E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RelatedRTTreatmentPhaseIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010003F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedRTTreatmentPhaseIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedRTPrescriptionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedParentRTPrescriptionIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ManufacturerDeviceIdentifier(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("30100043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InstanceLevelReferencedPerformedProcedureStepSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTTreatmentPhaseIntentPresenceFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RadiotherapyTreatmentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TeletherapyRadiationType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100047"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString BrachytherapySourceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedRTTreatmentPhaseSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100049"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedDirectSegmentInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010004A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence IntendedRTTreatmentPhaseSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010004B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date IntendedPhaseStartDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("3010004C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date IntendedPhaseEndDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("3010004D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTTreatmentPhaseIntervalSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010004E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TemporalRelationshipIntervalAnchor(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("3010004F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MinimumNumberOfIntervalDays(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("30100050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MaximumNumberOfIntervalDays(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("30100051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier PertinentSOPClassesInStudy(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("30100052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier PertinentSOPClassesInSeries(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("30100053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RTPrescriptionLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30100054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTPhysicianIntentPredecessorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString RTTreatmentApproachLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30100056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTPhysicianIntentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100057"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort RTPhysicianIntentIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RTTreatmentIntentType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100059"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText RTPhysicianIntentNarrative(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("3010005A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTProtocolCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010005B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ReasonForSuperseding(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("3010005C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTDiagnosisCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010005D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ReferencedRTPhysicianIntentIndex(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010005E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTPhysicianIntentInputInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010005F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTAnatomicPrescriptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText PriorTreatmentDoseDescription(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("30100061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PriorTreatmentReferenceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DosimetricObjectiveEvaluationScope(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TherapeuticRoleCategoryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TherapeuticRoleTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100065"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ConceptualVolumeOptimizationPrecedence(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("30100066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeCategoryCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ConceptualVolumeBlockingConstraint(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ConceptualVolumeTypeModifierCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010006A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTPrescriptionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010006B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DosimetricObjectiveSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010006C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DosimetricObjectiveTypeCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("3010006D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier DosimetricObjectiveUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("3010006E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier ReferencedDosimetricObjectiveUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("3010006F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DosimetricObjectiveParameterSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedDosimetricObjectivesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AbsoluteDosimetricObjectiveFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble DosimetricObjectiveWeight(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("30100074"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DosimetricObjectivePurpose(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PlanningInputInformationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString TreatmentSite(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("30100077"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TreatmentSiteCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FractionPatternSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100079"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText TreatmentTechniqueNotes(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("3010007A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText PrescriptionNotes(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("3010007B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfIntervalFractions(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("3010007C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfFractions(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010007D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort IntendedDeliveryDuration(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("3010007E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnlimitedText FractionationNotes(params String[] data)
        {
            var element = (new UnlimitedText());
            element.Tag = (new Tag("3010007F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RTTreatmentTechniqueCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100080"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PrescriptionNotesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100081"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence FractionBasedRelationshipSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100082"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString FractionBasedRelationshipIntervalAnchor(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("30100083"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble MinimumHoursBetweenFractions(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("30100084"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time IntendedFractionStartTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("30100085"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText IntendedStartDayOfWeek(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("30100086"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WeekdayFractionPatternSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100087"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DeliveryTimeStructureCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("30100088"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText Arbitrary(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("40000010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText TextComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("40004000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ResultsID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("40080040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ResultsIDIssuer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("40080042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedInterpretationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40080050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ReportProductionStatusTrial(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("400800FF"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date InterpretationRecordedDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("40080100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time InterpretationRecordedTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("40080101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName InterpretationRecorder(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("40080102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ReferenceToRecordedSound(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("40080103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date InterpretationTranscriptionDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("40080108"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time InterpretationTranscriptionTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("40080109"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName InterpretationTranscriber(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("4008010A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText InterpretationText(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("4008010B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName InterpretationAuthor(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("4008010C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InterpretationApproverSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40080111"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Date InterpretationApprovalDate(params System.DateTime?[] data)
        {
            var element = (new Date());
            element.Tag = (new Tag("40080112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Time InterpretationApprovalTime(params System.DateTime?[] data)
        {
            var element = (new Time());
            element.Tag = (new Tag("40080113"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName PhysicianApprovingInterpretation(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("40080114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText InterpretationDiagnosisDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("40080115"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence InterpretationDiagnosisCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40080117"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ResultsDistributionListSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40080118"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static PersonName DistributionName(params String[] data)
        {
            var element = (new PersonName());
            element.Tag = (new Tag("40080119"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString DistributionAddress(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("4008011A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString InterpretationID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("40080200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString InterpretationIDIssuer(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("40080202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InterpretationTypeID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40080210"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InterpretationStatusID(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40080212"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText Impressions(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("40080300"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText ResultsComments(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("40084000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString LowEnergyDetectors(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40100001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString HighEnergyDetectors(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40100002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DetectorGeometrySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40100004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ThreatROIVoxelSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ThreatROIBase(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ThreatROIExtents(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString ThreatROIBitmap(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("40101006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RouteSegmentID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("40101007"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString GantryType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OOIOwnerType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence RouteSegmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("4010100A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort PotentialThreatObjectID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("40101010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ThreatSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ThreatCategory(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText ThreatCategoryDescription(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("40101013"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ATDAbilityAssessment(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101014"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ATDAssessmentFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ATDAssessmentProbability(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101016"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle Mass(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101017"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle Density(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101018"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle ZEffective(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101019"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString BoardingPassID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("4010101A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CenterOfMass(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("4010101B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle CenterOfPTO(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("4010101C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BoundingPolygon(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("4010101D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RouteSegmentStartLocationID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("4010101E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RouteSegmentEndLocationID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("4010101F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString RouteSegmentLocationIDType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AbortReason(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle VolumeOfPTO(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AbortFlag(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101024"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime RouteSegmentStartTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("40101025"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime RouteSegmentEndTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("40101026"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TDRType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101027"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InternationalRouteSegment(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101028"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ThreatDetectionAlgorithmandVersion(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("40101029"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString AssignedLocation(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("4010102A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime AlarmDecisionTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("4010102B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AlarmDecision(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101031"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfTotalObjects(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("40101033"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfAlarmObjects(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("40101034"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PTORepresentationSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101037"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ATDAssessmentSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101038"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TIPType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101039"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString DICOSVersion(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("4010103A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Element.DateTime OOIOwnerCreationTime(params System.DateTime?[] data)
        {
            var element = (new Element.DateTime());
            element.Tag = (new Tag("40101041"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OOIType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101042"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle OOISize(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101043"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AcquisitionStatus(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101044"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence BasisMaterialsCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString PhantomType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101046"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence OOIOwnerSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101047"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString ScanType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101048"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ItineraryID(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("40101051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString ItineraryIDType(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("40101052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ItineraryIDAssigningAuthority(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("40101053"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RouteID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("40101054"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString RouteIDAssigningAuthority(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("40101055"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InboundArrivalType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101056"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CarrierID(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("40101058"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CarrierIDAssigningAuthority(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101059"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SourceOrientation(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle SourcePosition(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle BeltHeight(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AlgorithmRoutingCodeSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101064"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TransportClassification(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101067"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText OOITypeDescriptor(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("40101068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle TotalProcessingTime(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("40101069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString DetectorCalibrationData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("4010106C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AdditionalScreeningPerformed(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("4010106D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AdditionalInspectionSelectionCriteria(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("4010106E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AdditionalInspectionMethodSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("4010106F"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString AITDeviceType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("40101070"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence QRMeasurementsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101071"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence TargetMaterialSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101072"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointDouble SNRThreshold(params Double[] data)
        {
            var element = (new FloatingPointDouble());
            element.Tag = (new Tag("40101073"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ImageScaleRepresentation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("40101075"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedPTOSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101076"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence ReferencedTDRInstanceSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101077"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortText PTOLocationDescription(params String[] data)
        {
            var element = (new ShortText());
            element.Tag = (new Tag("40101078"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence AnomalyLocatorIndicatorSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("40101079"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static FloatingPointSingle AnomalyLocatorIndicator(params Single[] data)
        {
            var element = (new FloatingPointSingle());
            element.Tag = (new Tag("4010107A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PTORegionSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("4010107B"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString InspectionSelectionCriteria(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("4010107C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SecondaryInspectionMethodSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("4010107D"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString PRCSToRCSOrientation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("4010107E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence MACParametersSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("4FFE0001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CurveDimensions(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfPoints(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString TypeOfData(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("50xx0020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CurveDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("50xx0022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString AxisUnits(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("50xx0030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString AxisLabels(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("50xx0040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort DataValueRepresentation(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MinimumCoordinateValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0104"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MaximumCoordinateValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0105"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString CurveRange(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("50xx0106"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CurveDataDescriptor(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CoordinateStartValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CoordinateStepValue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx0114"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString CurveActivationLayer(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("50xx1001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AudioType(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx2000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort AudioSampleFormat(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx2002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfChannels(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx2004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong NumberOfSamples(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("50xx2006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong SampleRate(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("50xx2008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong TotalTime(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("50xx200A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString AudioSampleData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("50xx200C"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText AudioComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("50xx200E"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString CurveLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("50xx2500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence CurveReferencedOverlaySequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("50xx2600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CurveReferencedOverlayGroup(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("50xx2610"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString CurveData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("50xx3000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence SharedFunctionalGroupsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("52009229"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence PerFrameFunctionalGroupsSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("52009230"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence WaveformSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("54000100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString ChannelMinimumValue(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("54000110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString ChannelMaximumValue(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("54000112"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort WaveformBitsAllocated(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("54001004"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString WaveformSampleInterpretation(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("54001006"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString WaveformPaddingValue(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("5400100A"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString WaveformData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("54001010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString FirstOrderPhaseCorrectionAngle(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("56000010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString SpectroscopyData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("56000020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayRows(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayColumns(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayPlanes(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0012"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString NumberOfFramesInOverlay(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("60xx0015"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OverlayDescription(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("60xx0022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayType(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("60xx0040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OverlaySubtype(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("60xx0045"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static SignedShort OverlayOrigin(params Int16[] data)
        {
            var element = (new SignedShort());
            element.Tag = (new Tag("60xx0050"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ImageFrameOrigin(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0051"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayPlaneOrigin(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0052"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayCompressionCode(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("60xx0060"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString OverlayCompressionOriginator(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("60xx0061"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ShortString OverlayCompressionLabel(params String[] data)
        {
            var element = (new ShortString());
            element.Tag = (new Tag("60xx0062"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayCompressionDescription(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("60xx0063"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag OverlayCompressionStepPointers(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("60xx0066"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayRepeatInterval(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0068"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayBitsGrouped(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0069"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayBitsAllocated(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayBitPosition(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayFormat(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("60xx0110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayLocation(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayCodeLabel(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("60xx0800"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayNumberOfTables(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0802"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag OverlayCodeTableLocation(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("60xx0803"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayBitsForCodeWord(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx0804"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static CodeString OverlayActivationLayer(params String[] data)
        {
            var element = (new CodeString());
            element.Tag = (new Tag("60xx1001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayDescriptorGray(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayDescriptorRed(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1101"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayDescriptorGreen(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1102"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlayDescriptorBlue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1103"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlaysGray(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1200"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlaysRed(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1201"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlaysGreen(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1202"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort OverlaysBlue(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("60xx1203"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static IntegerString ROIArea(params Int32[] data)
        {
            var element = (new IntegerString());
            element.Tag = (new Tag("60xx1301"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ROIMean(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("60xx1302"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static DecimalString ROIStandardDeviation(params Double[] data)
        {
            var element = (new DecimalString());
            element.Tag = (new Tag("60xx1303"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString OverlayLabel(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("60xx1500"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString OverlayData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("60xx3000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongText OverlayComments(params String[] data)
        {
            var element = (new LongText());
            element.Tag = (new Tag("60xx4000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherFloatString FloatPixelData(params Byte[] data)
        {
            var element = (new OtherFloatString());
            element.Tag = (new Tag("7FE00008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherDoubleString DoubleFloatPixelData(params Byte[] data)
        {
            var element = (new OtherDoubleString());
            element.Tag = (new Tag("7FE00009"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString PixelData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("7FE00010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString CoefficientsSDVN(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("7FE00020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString CoefficientsSDHN(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("7FE00030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString CoefficientsSDDN(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("7FE00040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString VariablePixelData(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("7Fxx0010"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort VariableNextDataGroup(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("7Fxx0011"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString VariableCoefficientsSDVN(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("7Fxx0020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString VariableCoefficientsSDHN(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("7Fxx0030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherWordString VariableCoefficientsSDDN(params Byte[] data)
        {
            var element = (new OtherWordString());
            element.Tag = (new Tag("7Fxx0040"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static Sequence DigitalSignaturesSequence(params DICOMObject[] data)
        {
            var element = (new Sequence());
            element.Tag = (new Tag("FFFAFFFA"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static OtherByteString DataSetTrailingPadding(params Byte[] data)
        {
            var element = (new OtherByteString());
            element.Tag = (new Tag("FFFCFFFC"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedLong CommandGroupLength(params UInt32[] data)
        {
            var element = (new UnsignedLong());
            element.Tag = (new Tag("00000000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier AffectedSOPClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00000002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RequestedSOPClassUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00000003"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CommandField(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00000100"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MessageID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00000110"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MessageIDBeingRespondedTo(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00000120"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity MoveDestination(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00000600"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Priority(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00000700"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort CommandDataSetType(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00000800"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort Status(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00000900"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag OffendingElement(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00000901"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static LongString ErrorComment(params String[] data)
        {
            var element = (new LongString());
            element.Tag = (new Tag("00000902"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ErrorID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00000903"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier AffectedSOPInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00001000"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UniqueIdentifier RequestedSOPInstanceUID(params String[] data)
        {
            var element = (new UniqueIdentifier());
            element.Tag = (new Tag("00001001"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort EventTypeID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00001002"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static AttributeTag AttributeIdentifierList(params Tag[] data)
        {
            var element = (new AttributeTag());
            element.Tag = (new Tag("00001005"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort ActionTypeID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00001008"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfRemainingSuboperations(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00001020"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfCompletedSuboperations(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00001021"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfFailedSuboperations(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00001022"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort NumberOfWarningSuboperations(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00001023"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static ApplicationEntity MoveOriginatorApplicationEntityTitle(params String[] data)
        {
            var element = (new ApplicationEntity());
            element.Tag = (new Tag("00001030"));
            element.Data_ = (data?.ToList());
            return element;
        }

        public static UnsignedShort MoveOriginatorMessageID(params UInt16[] data)
        {
            var element = (new UnsignedShort());
            element.Tag = (new Tag("00001031"));
            element.Data_ = (data?.ToList());
            return element;
        }
    }
}